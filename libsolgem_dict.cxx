//
// File generated by rootcint at Sat Jul 23 18:45:46 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME libsolgem_dict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "libsolgem_dict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolSimGEMDigitization TSolSimGEMDigitization;
      #else
      class TSolSimGEMDigitization  :  public ::THaAnalysisObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::TSolSimGEMDigitization::IonPar_t IonPar_t;
         #else
         class IonPar_t  {
            public:
            //friend XX;
            double X; //position of the point on the projection
            double Y; //
            double Charge; //Charge deposited by this ion
            double SNorm; //3 x radius of ion diffusion area at readout
            double R2; //= SNorm^2 : radius of numerical integration area
            double ggnorm; //= Charge/R2/pi : charge per unit area
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~TSolSimGEMDigitization() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::Cluster_t Cluster_t;
      #else
      class Cluster_t  {
         public:
         //friend XX;
         double fPos; //coordinate in chamber
         double fSize; //width
         double fCharge; //total charge in ADC
         unsigned int fType; //see comments in clustering code
         double fResolution; //estimated resolution
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolGEMData TSolGEMData;
      #else
      class TSolGEMData  {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::TSolGEMData::GEMHitData_t GEMHitData_t;
         #else
         class GEMHitData_t  {
            public:
            //friend XX;
            unsigned int fGem; //
            double fEdep; //energy lost in drift
            double fTime; //hit time
            int fPID; //particle ID
            unsigned int fType; //particle counter: 1 = primary, >1 secondaries
            ::TVector3 fXi; //entrance point in drift
            ::TVector3 fXo; //exit point in drift
            ::TVector3 fXr; //entrance point in readout
            ::TVector3 fMom; //momentum of the particle
            ::TVector3 fVert; //vertex position
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~TSolGEMData() throw() {};
         unsigned int fRunID; //
         unsigned int fEvtID; //
         int fSource; //MC source file ID (0 = signal, >0 background)
         vector< GEMHitData_t > fHitData; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::hitdata hitdata;
      #else
      class hitdata  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~hitdata() throw() {};
         int fDetID; //
         unsigned int fSize; //
         G__int64 fFillbits; //
         double* fData; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::gendata gendata;
      #else
      class gendata  :  public ::hitdata {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~gendata() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::ECdata ECdata;
      #else
      class ECdata  :  public ::hitdata {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~ECdata() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolEVIOFile TSolEVIOFile;
      #else
      class TSolEVIOFile  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TSolEVIOFile() throw() {};
         char fFilename[255]; //
         ::evio::evioFileChannel* fChan; //
         int fSource; //User-defined source ID (e.g. MC run number)
         vector< ::hitdata* > fHitData; //
         vector< ::gendata* > fGenData; //
         unsigned int fEvNum; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TGEMShape TGEMShape;
      #else
      class TGEMShape  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TGEMShape() throw() {};
         vector< Double_t > fOrigin; //x, y
         vector< Double_t > fSize; //x, y
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolWedge TSolWedge;
      #else
      class TSolWedge  :  public ::TGEMShape {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TSolWedge() throw() {};
         double fR0R0; //
         double fR1R1; //
         double fPhi0; //
         double fTPhi0; //
         double fPhi1; //
         double fTPhi1; //
         double fCLW; //cos (lab to wedge angle)
         double fSLW; //sin...
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolRect TSolRect;
      #else
      class TSolRect  :  public ::TGEMShape {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TSolRect() throw() {};
         double fX1; //
         double fX2; //
         double fY1; //
         double fY2; //
         double fPhi; //
         double fCLW; //cos (lab to wedge angle)
         double fSLW; //sin...
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolGEMVStrip TSolGEMVStrip;
      #else
      class TSolGEMVStrip  {
         public:
         //friend XX;
         ::TArrayS* fIdx; //index of the strip
         ::TArrayS* fADC; //value of the ADC sample
         ::TArrayD* fCharge; //total charge in strip (sampled)
         float fTime; //time of first sampling
         int fNsample; //number of samples
         float fHitCharge; //
         short fSize; //effective size, maybe different from size of the array (some elements maybe not used)
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolSimEvent TSolSimEvent;
      #else
      class TSolSimEvent  :  public ::TObject {
         public:
         //friend XX;
         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::TSolSimEvent::GEMCluster GEMCluster;
         #else
         class GEMCluster  {
            public:
            //friend XX;
            short fID; //Cluster number, cross-ref to GEMStrip
            short fSector; //Sector number
            short fPlane; //Plane number
            short fRealSector; //Real sector number (may be !=fSector if mapped)
            int fSource; //MC data set source (0 = signal, >0 background)
            int fType; //GEANT particle counter (1 = primary)
            int fPID; //PDG ID of particle generating the cluster
            ::TVector3 fP; //Momentum of particle generating the cluster [GeV]
            ::TVector3 fXEntry; //Track at chamber entrance in lab coords [m]
            ::TVector3 fMCpos; //Approx. truth position of hit in lab [m]
            ::TVector3 fHitpos; //fMCpos in Tracker frame [m]
            float fCharge; //Charge of avalanche
            float fTime; //Arrival time at electronics
            int fSize[2]; //Number of strips in cluster per axis
            int fStart[2]; //Number of first strip in cluster per axis
            float fXProj[2]; //fMCpos along projection axis [m]
            ::TVector3 fVertex; //Vertex
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::TSolSimEvent::DigiGEMStrip DigiGEMStrip;
         #else
         class DigiGEMStrip  {
            public:
            //friend XX;
            short fSector; //Sector number
            short fPlane; //Plane number
            short fProj; //Readout coordinate ("x" = 0, "y" = 1)
            short fChan; //Channel number
            short fSigType; //Accumulated signal types (BIT(0) = signal)
            float fCharge; //Total charge in strip
            float fTime1; //Time of first sample
            unsigned short fNsamp; //Number of ADC samples
            int fADC[10]; //[fNsamp] ADC samples
            ::TArrayS fClusters; //Clusters contributing to signal on this strip
         };
         #endif

         #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
         typedef ::TSolSimEvent::ECHitData ECHitData;
         #else
         class ECHitData  {
            public:
            //friend XX;
            int fPID; //PID of the hit
            int fTID; //TID of the hit
            short fPlane; //0 for large angle EC, 1 for forward angle EC
            float fEdep; //energy deposition of the particle hitting EC (only good for electron and photon)
            float fXPos; //x position of the hit
            float fYPos; //y position of the hit
            float fZPos; //z position of the hit    
         };
         #endif

         // To force the creation of a virtual table, throw just in case.
         virtual ~TSolSimEvent() throw() {};
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolROOTFile TSolROOTFile;
      #else
      class TSolROOTFile  {
         public:
         //friend XX;
         // To force the creation of a virtual table, throw just in case.
         virtual ~TSolROOTFile() throw() {};
         char fFilename[255]; //
         ::TFile* fChan; //
         ::TTree* tree_generated; //
         ::TTree* tree_solid_gem; //
         ::TTree* tree_flux; //
         int fSource; //User-defined source ID (e.g. MC run number)
         vector< int >* gen_pid; //
         vector< double >* gen_px; //
         vector< double >* gen_py; //
         vector< double >* gen_pz; //
         vector< double >* gen_vx; //
         vector< double >* gen_vy; //
         vector< double >* gen_vz; //
         vector< double >* solid_gem_id; //
         vector< double >* solid_gem_hitn; //
         vector< double >* solid_gem_pid; //
         vector< double >* solid_gem_trid; //
         vector< double >* solid_gem_x; //
         vector< double >* solid_gem_y; //
         vector< double >* solid_gem_z; //
         vector< double >* solid_gem_lxin; //
         vector< double >* solid_gem_lyin; //
         vector< double >* solid_gem_lzin; //
         vector< double >* solid_gem_tin; //
         vector< double >* solid_gem_lxout; //
         vector< double >* solid_gem_lyout; //
         vector< double >* solid_gem_lzout; //
         vector< double >* solid_gem_tout; //
         vector< double >* solid_gem_px; //
         vector< double >* solid_gem_py; //
         vector< double >* solid_gem_pz; //
         vector< double >* solid_gem_vx; //
         vector< double >* solid_gem_vy; //
         vector< double >* solid_gem_vz; //
         vector< double >* solid_gem_ETot; //
         vector< double >* solid_gem_trE; //
         vector< double >* solid_gem_weight; //
         vector< double >* flux_id; //
         vector< double >* flux_pid; //
         vector< double >* flux_tid; //
         vector< double >* flux_trackE; //
         vector< double >* flux_avg_x; //
         vector< double >* flux_avg_y; //
         vector< double >* flux_avg_z; //
         vector< ::hitdata* > fHitData; //
         vector< ::gendata* > fGenData; //
         vector< ::ECdata* > fECData; //
         unsigned int fEvNum; //
         unsigned int fMaxEvNum; //
         int fFillBitsGEM; //
         int fFillBitsEC; //
         double fECEDep; //
      };
      #endif

      #if !(defined(R__ACCESS_IN_SYMBOL) || defined(R__USE_SHADOW_CLASS))
      typedef ::TSolDigitizedPlane TSolDigitizedPlane;
      #else
      class TSolDigitizedPlane  {
         public:
         //friend XX;
         ::TArrayI fStripADC; //
         short* fType; //
         int* fTotADC; //
         float* fCharge; //
         float* fTime; //
         unsigned short fNSamples; //
         unsigned short fNStrips; //
         int fThreshold; //
         unsigned short fNOT; //# strips over threshold
         short* fOverThr; //# list of strips over threshold
         vector< vector< short, allocator< short >  >  > fStripClusters; //Clusters associated with each strip
      };
      #endif

   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void TSolAnalyzer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolAnalyzer(void *p = 0);
   static void *newArray_TSolAnalyzer(Long_t size, void *p);
   static void delete_TSolAnalyzer(void *p);
   static void deleteArray_TSolAnalyzer(void *p);
   static void destruct_TSolAnalyzer(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolAnalyzer*)
   {
      ::TSolAnalyzer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolAnalyzer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolAnalyzer", ::TSolAnalyzer::Class_Version(), "./src/TSolAnalyzer.h", 6,
                  typeid(::TSolAnalyzer), DefineBehavior(ptr, ptr),
                  &::TSolAnalyzer::Dictionary, isa_proxy, 4,
                  sizeof(::TSolAnalyzer) );
      instance.SetNew(&new_TSolAnalyzer);
      instance.SetNewArray(&newArray_TSolAnalyzer);
      instance.SetDelete(&delete_TSolAnalyzer);
      instance.SetDeleteArray(&deleteArray_TSolAnalyzer);
      instance.SetDestructor(&destruct_TSolAnalyzer);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolAnalyzer*)
   {
      return GenerateInitInstanceLocal((::TSolAnalyzer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolAnalyzer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolGEMPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolGEMPlane(void *p = 0);
   static void *newArray_TSolGEMPlane(Long_t size, void *p);
   static void delete_TSolGEMPlane(void *p);
   static void deleteArray_TSolGEMPlane(void *p);
   static void destruct_TSolGEMPlane(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolGEMPlane*)
   {
      ::TSolGEMPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolGEMPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolGEMPlane", ::TSolGEMPlane::Class_Version(), "./src/TSolGEMPlane.h", 53,
                  typeid(::TSolGEMPlane), DefineBehavior(ptr, ptr),
                  &::TSolGEMPlane::Dictionary, isa_proxy, 4,
                  sizeof(::TSolGEMPlane) );
      instance.SetNew(&new_TSolGEMPlane);
      instance.SetNewArray(&newArray_TSolGEMPlane);
      instance.SetDelete(&delete_TSolGEMPlane);
      instance.SetDeleteArray(&deleteArray_TSolGEMPlane);
      instance.SetDestructor(&destruct_TSolGEMPlane);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolGEMPlane*)
   {
      return GenerateInitInstanceLocal((::TSolGEMPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolGEMPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolSimGEMDigitization_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSolSimGEMDigitization(void *p);
   static void deleteArray_TSolSimGEMDigitization(void *p);
   static void destruct_TSolSimGEMDigitization(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimGEMDigitization*)
   {
      ::TSolSimGEMDigitization *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolSimGEMDigitization >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimGEMDigitization", ::TSolSimGEMDigitization::Class_Version(), "./src/TSolSimGEMDigitization.h", 80,
                  typeid(::TSolSimGEMDigitization), DefineBehavior(ptr, ptr),
                  &::TSolSimGEMDigitization::Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimGEMDigitization) );
      instance.SetDelete(&delete_TSolSimGEMDigitization);
      instance.SetDeleteArray(&deleteArray_TSolSimGEMDigitization);
      instance.SetDestructor(&destruct_TSolSimGEMDigitization);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimGEMDigitization*)
   {
      return GenerateInitInstanceLocal((::TSolSimGEMDigitization*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimGEMDigitization*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void Cluster_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void Cluster_t_Dictionary();
   static void *new_Cluster_t(void *p = 0);
   static void *newArray_Cluster_t(Long_t size, void *p);
   static void delete_Cluster_t(void *p);
   static void deleteArray_Cluster_t(void *p);
   static void destruct_Cluster_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Cluster_t*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::Cluster_t) == sizeof(::ROOT::Shadow::Cluster_t));
      ::Cluster_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::Cluster_t),0);
      static ::ROOT::TGenericClassInfo 
         instance("Cluster_t", "./src/TSolClusters.h", 21,
                  typeid(::Cluster_t), DefineBehavior(ptr, ptr),
                  &Cluster_t_ShowMembers, &Cluster_t_Dictionary, isa_proxy, 4,
                  sizeof(::Cluster_t) );
      instance.SetNew(&new_Cluster_t);
      instance.SetNewArray(&newArray_Cluster_t);
      instance.SetDelete(&delete_Cluster_t);
      instance.SetDeleteArray(&deleteArray_Cluster_t);
      instance.SetDestructor(&destruct_Cluster_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Cluster_t*)
   {
      return GenerateInitInstanceLocal((::Cluster_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Cluster_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void Cluster_t_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::Cluster_t*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolClusters_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolClusters(void *p = 0);
   static void *newArray_TSolClusters(Long_t size, void *p);
   static void delete_TSolClusters(void *p);
   static void deleteArray_TSolClusters(void *p);
   static void destruct_TSolClusters(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolClusters*)
   {
      ::TSolClusters *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolClusters >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolClusters", ::TSolClusters::Class_Version(), "./src/TSolClusters.h", 31,
                  typeid(::TSolClusters), DefineBehavior(ptr, ptr),
                  &::TSolClusters::Dictionary, isa_proxy, 4,
                  sizeof(::TSolClusters) );
      instance.SetNew(&new_TSolClusters);
      instance.SetNewArray(&newArray_TSolClusters);
      instance.SetDelete(&delete_TSolClusters);
      instance.SetDeleteArray(&deleteArray_TSolClusters);
      instance.SetDestructor(&destruct_TSolClusters);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolClusters*)
   {
      return GenerateInitInstanceLocal((::TSolClusters*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolClusters*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace evio {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void evio_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("evio", 0 /*version*/, "./src/TSolEVIOFile.h", 9,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &evio_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void evio_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void TSolGEMData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolGEMData_Dictionary();
   static void *new_TSolGEMData(void *p = 0);
   static void *newArray_TSolGEMData(Long_t size, void *p);
   static void delete_TSolGEMData(void *p);
   static void deleteArray_TSolGEMData(void *p);
   static void destruct_TSolGEMData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolGEMData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolGEMData) == sizeof(::ROOT::Shadow::TSolGEMData));
      ::TSolGEMData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolGEMData),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolGEMData", "./src/TSolGEMData.h", 12,
                  typeid(::TSolGEMData), DefineBehavior(ptr, ptr),
                  &TSolGEMData_ShowMembers, &TSolGEMData_Dictionary, isa_proxy, 4,
                  sizeof(::TSolGEMData) );
      instance.SetNew(&new_TSolGEMData);
      instance.SetNewArray(&newArray_TSolGEMData);
      instance.SetDelete(&delete_TSolGEMData);
      instance.SetDeleteArray(&deleteArray_TSolGEMData);
      instance.SetDestructor(&destruct_TSolGEMData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolGEMData*)
   {
      return GenerateInitInstanceLocal((::TSolGEMData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolGEMData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolGEMData_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMData*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolGEMDatacLcLGEMHitData_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolGEMDatacLcLGEMHitData_t_Dictionary();
   static void *new_TSolGEMDatacLcLGEMHitData_t(void *p = 0);
   static void *newArray_TSolGEMDatacLcLGEMHitData_t(Long_t size, void *p);
   static void delete_TSolGEMDatacLcLGEMHitData_t(void *p);
   static void deleteArray_TSolGEMDatacLcLGEMHitData_t(void *p);
   static void destruct_TSolGEMDatacLcLGEMHitData_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolGEMData::GEMHitData_t*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolGEMData::GEMHitData_t) == sizeof(::ROOT::Shadow::TSolGEMData::GEMHitData_t));
      ::TSolGEMData::GEMHitData_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolGEMData::GEMHitData_t),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolGEMData::GEMHitData_t", "./src/TSolGEMData.h", 64,
                  typeid(::TSolGEMData::GEMHitData_t), DefineBehavior(ptr, ptr),
                  &TSolGEMDatacLcLGEMHitData_t_ShowMembers, &TSolGEMDatacLcLGEMHitData_t_Dictionary, isa_proxy, 4,
                  sizeof(::TSolGEMData::GEMHitData_t) );
      instance.SetNew(&new_TSolGEMDatacLcLGEMHitData_t);
      instance.SetNewArray(&newArray_TSolGEMDatacLcLGEMHitData_t);
      instance.SetDelete(&delete_TSolGEMDatacLcLGEMHitData_t);
      instance.SetDeleteArray(&deleteArray_TSolGEMDatacLcLGEMHitData_t);
      instance.SetDestructor(&destruct_TSolGEMDatacLcLGEMHitData_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolGEMData::GEMHitData_t*)
   {
      return GenerateInitInstanceLocal((::TSolGEMData::GEMHitData_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolGEMData::GEMHitData_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolGEMDatacLcLGEMHitData_t_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMData::GEMHitData_t*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void hitdata_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void hitdata_Dictionary();
   static void delete_hitdata(void *p);
   static void deleteArray_hitdata(void *p);
   static void destruct_hitdata(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::hitdata*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::hitdata) == sizeof(::ROOT::Shadow::hitdata));
      ::hitdata *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::hitdata),0);
      static ::ROOT::TGenericClassInfo 
         instance("hitdata", "./src/TSolEVIOFile.h", 36,
                  typeid(::hitdata), DefineBehavior(ptr, ptr),
                  &hitdata_ShowMembers, &hitdata_Dictionary, isa_proxy, 4,
                  sizeof(::hitdata) );
      instance.SetDelete(&delete_hitdata);
      instance.SetDeleteArray(&deleteArray_hitdata);
      instance.SetDestructor(&destruct_hitdata);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::hitdata*)
   {
      return GenerateInitInstanceLocal((::hitdata*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::hitdata*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void hitdata_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::hitdata*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void gendata_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void gendata_Dictionary();
   static void *new_gendata(void *p = 0);
   static void *newArray_gendata(Long_t size, void *p);
   static void delete_gendata(void *p);
   static void deleteArray_gendata(void *p);
   static void destruct_gendata(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::gendata*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::gendata) == sizeof(::ROOT::Shadow::gendata));
      ::gendata *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::gendata),0);
      static ::ROOT::TGenericClassInfo 
         instance("gendata", "./src/TSolEVIOFile.h", 60,
                  typeid(::gendata), DefineBehavior(ptr, ptr),
                  &gendata_ShowMembers, &gendata_Dictionary, isa_proxy, 4,
                  sizeof(::gendata) );
      instance.SetNew(&new_gendata);
      instance.SetNewArray(&newArray_gendata);
      instance.SetDelete(&delete_gendata);
      instance.SetDeleteArray(&deleteArray_gendata);
      instance.SetDestructor(&destruct_gendata);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::gendata*)
   {
      return GenerateInitInstanceLocal((::gendata*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::gendata*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void gendata_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::gendata*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void ECdata_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void ECdata_Dictionary();
   static void delete_ECdata(void *p);
   static void deleteArray_ECdata(void *p);
   static void destruct_ECdata(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::ECdata*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::ECdata) == sizeof(::ROOT::Shadow::ECdata));
      ::ECdata *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::ECdata),0);
      static ::ROOT::TGenericClassInfo 
         instance("ECdata", "./src/TSolEVIOFile.h", 79,
                  typeid(::ECdata), DefineBehavior(ptr, ptr),
                  &ECdata_ShowMembers, &ECdata_Dictionary, isa_proxy, 4,
                  sizeof(::ECdata) );
      instance.SetDelete(&delete_ECdata);
      instance.SetDeleteArray(&deleteArray_ECdata);
      instance.SetDestructor(&destruct_ECdata);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::ECdata*)
   {
      return GenerateInitInstanceLocal((::ECdata*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::ECdata*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void ECdata_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::ECdata*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolEVIOFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolEVIOFile_Dictionary();
   static void *new_TSolEVIOFile(void *p = 0);
   static void *newArray_TSolEVIOFile(Long_t size, void *p);
   static void delete_TSolEVIOFile(void *p);
   static void deleteArray_TSolEVIOFile(void *p);
   static void destruct_TSolEVIOFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolEVIOFile*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolEVIOFile) == sizeof(::ROOT::Shadow::TSolEVIOFile));
      ::TSolEVIOFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolEVIOFile),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolEVIOFile", "./src/TSolEVIOFile.h", 94,
                  typeid(::TSolEVIOFile), DefineBehavior(ptr, ptr),
                  &TSolEVIOFile_ShowMembers, &TSolEVIOFile_Dictionary, isa_proxy, 4,
                  sizeof(::TSolEVIOFile) );
      instance.SetNew(&new_TSolEVIOFile);
      instance.SetNewArray(&newArray_TSolEVIOFile);
      instance.SetDelete(&delete_TSolEVIOFile);
      instance.SetDeleteArray(&deleteArray_TSolEVIOFile);
      instance.SetDestructor(&destruct_TSolEVIOFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolEVIOFile*)
   {
      return GenerateInitInstanceLocal((::TSolEVIOFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolEVIOFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolEVIOFile_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolEVIOFile*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TGEMShape_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TGEMShape_Dictionary();
   static void delete_TGEMShape(void *p);
   static void deleteArray_TGEMShape(void *p);
   static void destruct_TGEMShape(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TGEMShape*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TGEMShape) == sizeof(::ROOT::Shadow::TGEMShape));
      ::TGEMShape *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TGEMShape),0);
      static ::ROOT::TGenericClassInfo 
         instance("TGEMShape", "./src/TGEMShape.h", 7,
                  typeid(::TGEMShape), DefineBehavior(ptr, ptr),
                  &TGEMShape_ShowMembers, &TGEMShape_Dictionary, isa_proxy, 4,
                  sizeof(::TGEMShape) );
      instance.SetDelete(&delete_TGEMShape);
      instance.SetDeleteArray(&deleteArray_TGEMShape);
      instance.SetDestructor(&destruct_TGEMShape);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TGEMShape*)
   {
      return GenerateInitInstanceLocal((::TGEMShape*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TGEMShape*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TGEMShape_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TGEMShape*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolWedge_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolWedge_Dictionary();
   static void delete_TSolWedge(void *p);
   static void deleteArray_TSolWedge(void *p);
   static void destruct_TSolWedge(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolWedge*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolWedge) == sizeof(::ROOT::Shadow::TSolWedge));
      ::TSolWedge *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolWedge),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolWedge", "./src/TSolWedge.h", 32,
                  typeid(::TSolWedge), DefineBehavior(ptr, ptr),
                  &TSolWedge_ShowMembers, &TSolWedge_Dictionary, isa_proxy, 4,
                  sizeof(::TSolWedge) );
      instance.SetDelete(&delete_TSolWedge);
      instance.SetDeleteArray(&deleteArray_TSolWedge);
      instance.SetDestructor(&destruct_TSolWedge);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolWedge*)
   {
      return GenerateInitInstanceLocal((::TSolWedge*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolWedge*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolWedge_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolWedge*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace NSolWedge {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void NSolWedge_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("NSolWedge", 0 /*version*/, "./src/TSolWedge.h", 77,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &NSolWedge_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void NSolWedge_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void TSolRect_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolRect_Dictionary();
   static void delete_TSolRect(void *p);
   static void deleteArray_TSolRect(void *p);
   static void destruct_TSolRect(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolRect*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolRect) == sizeof(::ROOT::Shadow::TSolRect));
      ::TSolRect *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolRect),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolRect", "./src/TSolRect.h", 14,
                  typeid(::TSolRect), DefineBehavior(ptr, ptr),
                  &TSolRect_ShowMembers, &TSolRect_Dictionary, isa_proxy, 4,
                  sizeof(::TSolRect) );
      instance.SetDelete(&delete_TSolRect);
      instance.SetDeleteArray(&deleteArray_TSolRect);
      instance.SetDestructor(&destruct_TSolRect);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolRect*)
   {
      return GenerateInitInstanceLocal((::TSolRect*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolRect*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolRect_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolRect*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolGEMChamber_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolGEMChamber(void *p = 0);
   static void *newArray_TSolGEMChamber(Long_t size, void *p);
   static void delete_TSolGEMChamber(void *p);
   static void deleteArray_TSolGEMChamber(void *p);
   static void destruct_TSolGEMChamber(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolGEMChamber*)
   {
      ::TSolGEMChamber *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolGEMChamber >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolGEMChamber", ::TSolGEMChamber::Class_Version(), "./src/TSolGEMChamber.h", 33,
                  typeid(::TSolGEMChamber), DefineBehavior(ptr, ptr),
                  &::TSolGEMChamber::Dictionary, isa_proxy, 4,
                  sizeof(::TSolGEMChamber) );
      instance.SetNew(&new_TSolGEMChamber);
      instance.SetNewArray(&newArray_TSolGEMChamber);
      instance.SetDelete(&delete_TSolGEMChamber);
      instance.SetDeleteArray(&deleteArray_TSolGEMChamber);
      instance.SetDestructor(&destruct_TSolGEMChamber);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolGEMChamber*)
   {
      return GenerateInitInstanceLocal((::TSolGEMChamber*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolGEMChamber*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolGEMCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolGEMCluster(void *p = 0);
   static void *newArray_TSolGEMCluster(Long_t size, void *p);
   static void delete_TSolGEMCluster(void *p);
   static void deleteArray_TSolGEMCluster(void *p);
   static void destruct_TSolGEMCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolGEMCluster*)
   {
      ::TSolGEMCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolGEMCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolGEMCluster", ::TSolGEMCluster::Class_Version(), "./src/TSolGEMCluster.h", 6,
                  typeid(::TSolGEMCluster), DefineBehavior(ptr, ptr),
                  &::TSolGEMCluster::Dictionary, isa_proxy, 4,
                  sizeof(::TSolGEMCluster) );
      instance.SetNew(&new_TSolGEMCluster);
      instance.SetNewArray(&newArray_TSolGEMCluster);
      instance.SetDelete(&delete_TSolGEMCluster);
      instance.SetDeleteArray(&deleteArray_TSolGEMCluster);
      instance.SetDestructor(&destruct_TSolGEMCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolGEMCluster*)
   {
      return GenerateInitInstanceLocal((::TSolGEMCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolGEMCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolGEMVStrip_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolGEMVStrip_Dictionary();
   static void *new_TSolGEMVStrip(void *p = 0);
   static void *newArray_TSolGEMVStrip(Long_t size, void *p);
   static void delete_TSolGEMVStrip(void *p);
   static void deleteArray_TSolGEMVStrip(void *p);
   static void destruct_TSolGEMVStrip(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolGEMVStrip*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolGEMVStrip) == sizeof(::ROOT::Shadow::TSolGEMVStrip));
      ::TSolGEMVStrip *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolGEMVStrip),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolGEMVStrip", "./src/TSolGEMVStrip.h", 11,
                  typeid(::TSolGEMVStrip), DefineBehavior(ptr, ptr),
                  &TSolGEMVStrip_ShowMembers, &TSolGEMVStrip_Dictionary, isa_proxy, 4,
                  sizeof(::TSolGEMVStrip) );
      instance.SetNew(&new_TSolGEMVStrip);
      instance.SetNewArray(&newArray_TSolGEMVStrip);
      instance.SetDelete(&delete_TSolGEMVStrip);
      instance.SetDeleteArray(&deleteArray_TSolGEMVStrip);
      instance.SetDestructor(&destruct_TSolGEMVStrip);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolGEMVStrip*)
   {
      return GenerateInitInstanceLocal((::TSolGEMVStrip*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolGEMVStrip*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolGEMVStrip_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMVStrip*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace TSolSimAux {
   namespace ROOT {
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance();
      static void TSolSimAux_Dictionary();

      // Function generating the singleton type initializer
      inline ::ROOT::TGenericClassInfo *GenerateInitInstance()
      {
         static ::ROOT::TGenericClassInfo 
            instance("TSolSimAux", 0 /*version*/, "./src/TSolSimAux.h", 14,
                     ::ROOT::DefineBehavior((void*)0,(void*)0),
                     &TSolSimAux_Dictionary, 4);
         return &instance;
      }
      // Insure that the inline function is _not_ optimized away by the compiler
      ::ROOT::TGenericClassInfo *(*_R__UNIQUE_(InitFunctionKeeper))() = &GenerateInitInstance;  
      // Static variable to force the class initialization
      static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstance(); R__UseDummy(_R__UNIQUE_(Init));

      // Dictionary for non-ClassDef classes
      static void TSolSimAux_Dictionary() {
         GenerateInitInstance()->GetClass();
      }

   }
}

namespace ROOT {
   void TSolSpec_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_TSolSpec(void *p);
   static void deleteArray_TSolSpec(void *p);
   static void destruct_TSolSpec(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSpec*)
   {
      ::TSolSpec *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolSpec >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSpec", ::TSolSpec::Class_Version(), "./src/TSolSpec.h", 11,
                  typeid(::TSolSpec), DefineBehavior(ptr, ptr),
                  &::TSolSpec::Dictionary, isa_proxy, 4,
                  sizeof(::TSolSpec) );
      instance.SetDelete(&delete_TSolSpec);
      instance.SetDeleteArray(&deleteArray_TSolSpec);
      instance.SetDestructor(&destruct_TSolSpec);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSpec*)
   {
      return GenerateInitInstanceLocal((::TSolSpec*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSpec*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolSimEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolSimEvent(void *p = 0);
   static void *newArray_TSolSimEvent(Long_t size, void *p);
   static void delete_TSolSimEvent(void *p);
   static void deleteArray_TSolSimEvent(void *p);
   static void destruct_TSolSimEvent(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimEvent*)
   {
      ::TSolSimEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolSimEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimEvent", ::TSolSimEvent::Class_Version(), "./src/TSolSimEvent.h", 53,
                  typeid(::TSolSimEvent), DefineBehavior(ptr, ptr),
                  &::TSolSimEvent::Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimEvent) );
      instance.SetNew(&new_TSolSimEvent);
      instance.SetNewArray(&newArray_TSolSimEvent);
      instance.SetDelete(&delete_TSolSimEvent);
      instance.SetDeleteArray(&deleteArray_TSolSimEvent);
      instance.SetDestructor(&destruct_TSolSimEvent);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimEvent*)
   {
      return GenerateInitInstanceLocal((::TSolSimEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolROOTFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolROOTFile_Dictionary();
   static void *new_TSolROOTFile(void *p = 0);
   static void *newArray_TSolROOTFile(Long_t size, void *p);
   static void delete_TSolROOTFile(void *p);
   static void deleteArray_TSolROOTFile(void *p);
   static void destruct_TSolROOTFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolROOTFile*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolROOTFile) == sizeof(::ROOT::Shadow::TSolROOTFile));
      ::TSolROOTFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolROOTFile),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolROOTFile", "./src/TSolROOTFile.h", 12,
                  typeid(::TSolROOTFile), DefineBehavior(ptr, ptr),
                  &TSolROOTFile_ShowMembers, &TSolROOTFile_Dictionary, isa_proxy, 4,
                  sizeof(::TSolROOTFile) );
      instance.SetNew(&new_TSolROOTFile);
      instance.SetNewArray(&newArray_TSolROOTFile);
      instance.SetDelete(&delete_TSolROOTFile);
      instance.SetDeleteArray(&deleteArray_TSolROOTFile);
      instance.SetDestructor(&destruct_TSolROOTFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolROOTFile*)
   {
      return GenerateInitInstanceLocal((::TSolROOTFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolROOTFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolROOTFile_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolROOTFile*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolDigitizedPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolDigitizedPlane_Dictionary();
   static void delete_TSolDigitizedPlane(void *p);
   static void deleteArray_TSolDigitizedPlane(void *p);
   static void destruct_TSolDigitizedPlane(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolDigitizedPlane*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolDigitizedPlane) == sizeof(::ROOT::Shadow::TSolDigitizedPlane));
      ::TSolDigitizedPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolDigitizedPlane),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolDigitizedPlane", "./src/TSolSimGEMDigitization.h", 29,
                  typeid(::TSolDigitizedPlane), DefineBehavior(ptr, ptr),
                  &TSolDigitizedPlane_ShowMembers, &TSolDigitizedPlane_Dictionary, isa_proxy, 4,
                  sizeof(::TSolDigitizedPlane) );
      instance.SetDelete(&delete_TSolDigitizedPlane);
      instance.SetDeleteArray(&deleteArray_TSolDigitizedPlane);
      instance.SetDestructor(&destruct_TSolDigitizedPlane);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolDigitizedPlane*)
   {
      return GenerateInitInstanceLocal((::TSolDigitizedPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolDigitizedPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolDigitizedPlane_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolDigitizedPlane*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolSimGEMDigitizationcLcLIonPar_t_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolSimGEMDigitizationcLcLIonPar_t_Dictionary();
   static void *new_TSolSimGEMDigitizationcLcLIonPar_t(void *p = 0);
   static void *newArray_TSolSimGEMDigitizationcLcLIonPar_t(Long_t size, void *p);
   static void delete_TSolSimGEMDigitizationcLcLIonPar_t(void *p);
   static void deleteArray_TSolSimGEMDigitizationcLcLIonPar_t(void *p);
   static void destruct_TSolSimGEMDigitizationcLcLIonPar_t(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimGEMDigitization::IonPar_t*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolSimGEMDigitization::IonPar_t) == sizeof(::ROOT::Shadow::TSolSimGEMDigitization::IonPar_t));
      ::TSolSimGEMDigitization::IonPar_t *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolSimGEMDigitization::IonPar_t),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimGEMDigitization::IonPar_t", "./src/TSolSimGEMDigitization.h", 201,
                  typeid(::TSolSimGEMDigitization::IonPar_t), DefineBehavior(ptr, ptr),
                  &TSolSimGEMDigitizationcLcLIonPar_t_ShowMembers, &TSolSimGEMDigitizationcLcLIonPar_t_Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimGEMDigitization::IonPar_t) );
      instance.SetNew(&new_TSolSimGEMDigitizationcLcLIonPar_t);
      instance.SetNewArray(&newArray_TSolSimGEMDigitizationcLcLIonPar_t);
      instance.SetDelete(&delete_TSolSimGEMDigitizationcLcLIonPar_t);
      instance.SetDeleteArray(&deleteArray_TSolSimGEMDigitizationcLcLIonPar_t);
      instance.SetDestructor(&destruct_TSolSimGEMDigitizationcLcLIonPar_t);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimGEMDigitization::IonPar_t*)
   {
      return GenerateInitInstanceLocal((::TSolSimGEMDigitization::IonPar_t*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimGEMDigitization::IonPar_t*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolSimGEMDigitizationcLcLIonPar_t_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMDigitization::IonPar_t*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolSimTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolSimTrack(void *p = 0);
   static void *newArray_TSolSimTrack(Long_t size, void *p);
   static void delete_TSolSimTrack(void *p);
   static void deleteArray_TSolSimTrack(void *p);
   static void destruct_TSolSimTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimTrack*)
   {
      ::TSolSimTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolSimTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimTrack", ::TSolSimTrack::Class_Version(), "./src/TSolSimEvent.h", 23,
                  typeid(::TSolSimTrack), DefineBehavior(ptr, ptr),
                  &::TSolSimTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimTrack) );
      instance.SetNew(&new_TSolSimTrack);
      instance.SetNewArray(&newArray_TSolSimTrack);
      instance.SetDelete(&delete_TSolSimTrack);
      instance.SetDeleteArray(&deleteArray_TSolSimTrack);
      instance.SetDestructor(&destruct_TSolSimTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimTrack*)
   {
      return GenerateInitInstanceLocal((::TSolSimTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolSimEventcLcLGEMCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolSimEventcLcLGEMCluster_Dictionary();
   static void *new_TSolSimEventcLcLGEMCluster(void *p = 0);
   static void *newArray_TSolSimEventcLcLGEMCluster(Long_t size, void *p);
   static void delete_TSolSimEventcLcLGEMCluster(void *p);
   static void deleteArray_TSolSimEventcLcLGEMCluster(void *p);
   static void destruct_TSolSimEventcLcLGEMCluster(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimEvent::GEMCluster*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolSimEvent::GEMCluster) == sizeof(::ROOT::Shadow::TSolSimEvent::GEMCluster));
      ::TSolSimEvent::GEMCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolSimEvent::GEMCluster),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimEvent::GEMCluster", "./src/TSolSimEvent.h", 86,
                  typeid(::TSolSimEvent::GEMCluster), DefineBehavior(ptr, ptr),
                  &TSolSimEventcLcLGEMCluster_ShowMembers, &TSolSimEventcLcLGEMCluster_Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimEvent::GEMCluster) );
      instance.SetNew(&new_TSolSimEventcLcLGEMCluster);
      instance.SetNewArray(&newArray_TSolSimEventcLcLGEMCluster);
      instance.SetDelete(&delete_TSolSimEventcLcLGEMCluster);
      instance.SetDeleteArray(&deleteArray_TSolSimEventcLcLGEMCluster);
      instance.SetDestructor(&destruct_TSolSimEventcLcLGEMCluster);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimEvent::GEMCluster*)
   {
      return GenerateInitInstanceLocal((::TSolSimEvent::GEMCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimEvent::GEMCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolSimEventcLcLGEMCluster_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent::GEMCluster*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolSimEventcLcLDigiGEMStrip_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolSimEventcLcLDigiGEMStrip_Dictionary();
   static void *new_TSolSimEventcLcLDigiGEMStrip(void *p = 0);
   static void *newArray_TSolSimEventcLcLDigiGEMStrip(Long_t size, void *p);
   static void delete_TSolSimEventcLcLDigiGEMStrip(void *p);
   static void deleteArray_TSolSimEventcLcLDigiGEMStrip(void *p);
   static void destruct_TSolSimEventcLcLDigiGEMStrip(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimEvent::DigiGEMStrip*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolSimEvent::DigiGEMStrip) == sizeof(::ROOT::Shadow::TSolSimEvent::DigiGEMStrip));
      ::TSolSimEvent::DigiGEMStrip *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolSimEvent::DigiGEMStrip),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimEvent::DigiGEMStrip", "./src/TSolSimEvent.h", 111,
                  typeid(::TSolSimEvent::DigiGEMStrip), DefineBehavior(ptr, ptr),
                  &TSolSimEventcLcLDigiGEMStrip_ShowMembers, &TSolSimEventcLcLDigiGEMStrip_Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimEvent::DigiGEMStrip) );
      instance.SetNew(&new_TSolSimEventcLcLDigiGEMStrip);
      instance.SetNewArray(&newArray_TSolSimEventcLcLDigiGEMStrip);
      instance.SetDelete(&delete_TSolSimEventcLcLDigiGEMStrip);
      instance.SetDeleteArray(&deleteArray_TSolSimEventcLcLDigiGEMStrip);
      instance.SetDestructor(&destruct_TSolSimEventcLcLDigiGEMStrip);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimEvent::DigiGEMStrip*)
   {
      return GenerateInitInstanceLocal((::TSolSimEvent::DigiGEMStrip*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimEvent::DigiGEMStrip*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolSimEventcLcLDigiGEMStrip_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent::DigiGEMStrip*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolSimEventcLcLECHitData_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void TSolSimEventcLcLECHitData_Dictionary();
   static void *new_TSolSimEventcLcLECHitData(void *p = 0);
   static void *newArray_TSolSimEventcLcLECHitData(Long_t size, void *p);
   static void delete_TSolSimEventcLcLECHitData(void *p);
   static void deleteArray_TSolSimEventcLcLECHitData(void *p);
   static void destruct_TSolSimEventcLcLECHitData(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimEvent::ECHitData*)
   {
      // Make sure the shadow class has the right sizeof
      R__ASSERT(sizeof(::TSolSimEvent::ECHitData) == sizeof(::ROOT::Shadow::TSolSimEvent::ECHitData));
      ::TSolSimEvent::ECHitData *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::TSolSimEvent::ECHitData),0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimEvent::ECHitData", "./src/TSolSimEvent.h", 127,
                  typeid(::TSolSimEvent::ECHitData), DefineBehavior(ptr, ptr),
                  &TSolSimEventcLcLECHitData_ShowMembers, &TSolSimEventcLcLECHitData_Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimEvent::ECHitData) );
      instance.SetNew(&new_TSolSimEventcLcLECHitData);
      instance.SetNewArray(&newArray_TSolSimEventcLcLECHitData);
      instance.SetDelete(&delete_TSolSimEventcLcLECHitData);
      instance.SetDeleteArray(&deleteArray_TSolSimEventcLcLECHitData);
      instance.SetDestructor(&destruct_TSolSimEventcLcLECHitData);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimEvent::ECHitData*)
   {
      return GenerateInitInstanceLocal((::TSolSimEvent::ECHitData*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimEvent::ECHitData*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void TSolSimEventcLcLECHitData_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent::ECHitData*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   void TSolSimFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolSimFile(void *p = 0);
   static void *newArray_TSolSimFile(Long_t size, void *p);
   static void delete_TSolSimFile(void *p);
   static void deleteArray_TSolSimFile(void *p);
   static void destruct_TSolSimFile(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimFile*)
   {
      ::TSolSimFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolSimFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimFile", ::TSolSimFile::Class_Version(), "./src/TSolSimFile.h", 23,
                  typeid(::TSolSimFile), DefineBehavior(ptr, ptr),
                  &::TSolSimFile::Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimFile) );
      instance.SetNew(&new_TSolSimFile);
      instance.SetNewArray(&newArray_TSolSimFile);
      instance.SetDelete(&delete_TSolSimFile);
      instance.SetDeleteArray(&deleteArray_TSolSimFile);
      instance.SetDestructor(&destruct_TSolSimFile);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimFile*)
   {
      return GenerateInitInstanceLocal((::TSolSimFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolSimGEMHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolSimGEMHit(void *p = 0);
   static void *newArray_TSolSimGEMHit(Long_t size, void *p);
   static void delete_TSolSimGEMHit(void *p);
   static void deleteArray_TSolSimGEMHit(void *p);
   static void destruct_TSolSimGEMHit(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimGEMHit*)
   {
      ::TSolSimGEMHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolSimGEMHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimGEMHit", ::TSolSimGEMHit::Class_Version(), "./src/TSolSimDecoder.h", 22,
                  typeid(::TSolSimGEMHit), DefineBehavior(ptr, ptr),
                  &::TSolSimGEMHit::Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimGEMHit) );
      instance.SetNew(&new_TSolSimGEMHit);
      instance.SetNewArray(&newArray_TSolSimGEMHit);
      instance.SetDelete(&delete_TSolSimGEMHit);
      instance.SetDeleteArray(&deleteArray_TSolSimGEMHit);
      instance.SetDestructor(&destruct_TSolSimGEMHit);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimGEMHit*)
   {
      return GenerateInitInstanceLocal((::TSolSimGEMHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimGEMHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolSimBackTrack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolSimBackTrack(void *p = 0);
   static void *newArray_TSolSimBackTrack(Long_t size, void *p);
   static void delete_TSolSimBackTrack(void *p);
   static void deleteArray_TSolSimBackTrack(void *p);
   static void destruct_TSolSimBackTrack(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimBackTrack*)
   {
      ::TSolSimBackTrack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolSimBackTrack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimBackTrack", ::TSolSimBackTrack::Class_Version(), "./src/TSolSimDecoder.h", 63,
                  typeid(::TSolSimBackTrack), DefineBehavior(ptr, ptr),
                  &::TSolSimBackTrack::Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimBackTrack) );
      instance.SetNew(&new_TSolSimBackTrack);
      instance.SetNewArray(&newArray_TSolSimBackTrack);
      instance.SetDelete(&delete_TSolSimBackTrack);
      instance.SetDeleteArray(&deleteArray_TSolSimBackTrack);
      instance.SetDestructor(&destruct_TSolSimBackTrack);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimBackTrack*)
   {
      return GenerateInitInstanceLocal((::TSolSimBackTrack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimBackTrack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void TSolSimDecoder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_TSolSimDecoder(void *p = 0);
   static void *newArray_TSolSimDecoder(Long_t size, void *p);
   static void delete_TSolSimDecoder(void *p);
   static void deleteArray_TSolSimDecoder(void *p);
   static void destruct_TSolSimDecoder(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::TSolSimDecoder*)
   {
      ::TSolSimDecoder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::TSolSimDecoder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("TSolSimDecoder", ::TSolSimDecoder::Class_Version(), "./src/TSolSimDecoder.h", 113,
                  typeid(::TSolSimDecoder), DefineBehavior(ptr, ptr),
                  &::TSolSimDecoder::Dictionary, isa_proxy, 4,
                  sizeof(::TSolSimDecoder) );
      instance.SetNew(&new_TSolSimDecoder);
      instance.SetNewArray(&newArray_TSolSimDecoder);
      instance.SetDelete(&delete_TSolSimDecoder);
      instance.SetDeleteArray(&deleteArray_TSolSimDecoder);
      instance.SetDestructor(&destruct_TSolSimDecoder);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::TSolSimDecoder*)
   {
      return GenerateInitInstanceLocal((::TSolSimDecoder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::TSolSimDecoder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *TSolAnalyzer::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolAnalyzer::Class_Name()
{
   return "TSolAnalyzer";
}

//______________________________________________________________________________
const char *TSolAnalyzer::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolAnalyzer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolAnalyzer::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolAnalyzer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolAnalyzer::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolAnalyzer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolAnalyzer::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolAnalyzer*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolGEMPlane::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolGEMPlane::Class_Name()
{
   return "TSolGEMPlane";
}

//______________________________________________________________________________
const char *TSolGEMPlane::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolGEMPlane::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolGEMPlane::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolGEMPlane::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMPlane*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolSimGEMDigitization::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolSimGEMDigitization::Class_Name()
{
   return "TSolSimGEMDigitization";
}

//______________________________________________________________________________
const char *TSolSimGEMDigitization::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMDigitization*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolSimGEMDigitization::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMDigitization*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolSimGEMDigitization::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMDigitization*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolSimGEMDigitization::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMDigitization*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolClusters::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolClusters::Class_Name()
{
   return "TSolClusters";
}

//______________________________________________________________________________
const char *TSolClusters::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolClusters*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolClusters::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolClusters*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolClusters::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolClusters*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolClusters::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolClusters*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolGEMChamber::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolGEMChamber::Class_Name()
{
   return "TSolGEMChamber";
}

//______________________________________________________________________________
const char *TSolGEMChamber::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMChamber*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolGEMChamber::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMChamber*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolGEMChamber::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMChamber*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolGEMChamber::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMChamber*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolGEMCluster::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolGEMCluster::Class_Name()
{
   return "TSolGEMCluster";
}

//______________________________________________________________________________
const char *TSolGEMCluster::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolGEMCluster::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolGEMCluster::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolGEMCluster::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMCluster*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolSpec::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolSpec::Class_Name()
{
   return "TSolSpec";
}

//______________________________________________________________________________
const char *TSolSpec::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSpec*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolSpec::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSpec*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolSpec::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSpec*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolSpec::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSpec*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolSimEvent::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolSimEvent::Class_Name()
{
   return "TSolSimEvent";
}

//______________________________________________________________________________
const char *TSolSimEvent::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolSimEvent::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolSimEvent::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolSimEvent::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolSimTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolSimTrack::Class_Name()
{
   return "TSolSimTrack";
}

//______________________________________________________________________________
const char *TSolSimTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolSimTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolSimTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolSimTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolSimFile::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolSimFile::Class_Name()
{
   return "TSolSimFile";
}

//______________________________________________________________________________
const char *TSolSimFile::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolSimFile::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolSimFile::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolSimFile::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimFile*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolSimGEMHit::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolSimGEMHit::Class_Name()
{
   return "TSolSimGEMHit";
}

//______________________________________________________________________________
const char *TSolSimGEMHit::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolSimGEMHit::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolSimGEMHit::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolSimGEMHit::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMHit*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolSimBackTrack::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolSimBackTrack::Class_Name()
{
   return "TSolSimBackTrack";
}

//______________________________________________________________________________
const char *TSolSimBackTrack::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimBackTrack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolSimBackTrack::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimBackTrack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolSimBackTrack::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimBackTrack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolSimBackTrack::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimBackTrack*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
TClass *TSolSimDecoder::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *TSolSimDecoder::Class_Name()
{
   return "TSolSimDecoder";
}

//______________________________________________________________________________
const char *TSolSimDecoder::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimDecoder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int TSolSimDecoder::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::TSolSimDecoder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void TSolSimDecoder::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimDecoder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *TSolSimDecoder::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimDecoder*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void TSolAnalyzer::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolAnalyzer.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolAnalyzer::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolAnalyzer::Class(),this);
   }
}

//______________________________________________________________________________
void TSolAnalyzer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolAnalyzer.
      TClass *R__cl = ::TSolAnalyzer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "f", &f);
      THaAnalyzer::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolAnalyzer(void *p) {
      return  p ? new(p) ::TSolAnalyzer : new ::TSolAnalyzer;
   }
   static void *newArray_TSolAnalyzer(Long_t nElements, void *p) {
      return p ? new(p) ::TSolAnalyzer[nElements] : new ::TSolAnalyzer[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolAnalyzer(void *p) {
      delete ((::TSolAnalyzer*)p);
   }
   static void deleteArray_TSolAnalyzer(void *p) {
      delete [] ((::TSolAnalyzer*)p);
   }
   static void destruct_TSolAnalyzer(void *p) {
      typedef ::TSolAnalyzer current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolAnalyzer

//______________________________________________________________________________
void TSolGEMPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolGEMPlane.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolGEMPlane::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolGEMPlane::Class(),this);
   }
}

//______________________________________________________________________________
void TSolGEMPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolGEMPlane.
      TClass *R__cl = ::TSolGEMPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fClusters", &fClusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSAngle", &fSAngle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNStrips", &fNStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSPitch", &fSPitch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSBeg", &fSBeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fShape", &fShape);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCLS", &fCLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCWS", &fCWS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSLS", &fSLS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSWS", &fSWS);
      THaSubDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolGEMPlane(void *p) {
      return  p ? new(p) ::TSolGEMPlane : new ::TSolGEMPlane;
   }
   static void *newArray_TSolGEMPlane(Long_t nElements, void *p) {
      return p ? new(p) ::TSolGEMPlane[nElements] : new ::TSolGEMPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolGEMPlane(void *p) {
      delete ((::TSolGEMPlane*)p);
   }
   static void deleteArray_TSolGEMPlane(void *p) {
      delete [] ((::TSolGEMPlane*)p);
   }
   static void destruct_TSolGEMPlane(void *p) {
      typedef ::TSolGEMPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolGEMPlane

//______________________________________________________________________________
void TSolSimGEMDigitization::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolSimGEMDigitization.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolSimGEMDigitization::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolSimGEMDigitization::Class(),this);
   }
}

//______________________________________________________________________________
void TSolSimGEMDigitization::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolSimGEMDigitization.
      TClass *R__cl = ::TSolSimGEMDigitization::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGasWion", &fGasWion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGasDiffusion", &fGasDiffusion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGasDriftVelocity", &fGasDriftVelocity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAvalancheFiducialBand", &fAvalancheFiducialBand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAvalancheChargeStatistics", &fAvalancheChargeStatistics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGainMean", &fGainMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGain0", &fGain0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerOffset", &fTriggerOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTriggerJitter", &fTriggerJitter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEleSamplingPoints", &fEleSamplingPoints);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEleSamplingPeriod", &fEleSamplingPeriod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPulseNoiseSigma", &fPulseNoiseSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADCoffset", &fADCoffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADCgain", &fADCgain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADCbits", &fADCbits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGateWidth", &fGateWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseTrackerFrame", &fUseTrackerFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntranceRef", &fEntranceRef);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLateralUncertainty", &fLateralUncertainty);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPulseShapeTau0", &fPulseShapeTau0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPulseShapeTau1", &fPulseShapeTau1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRoutZ", &fRoutZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDoMapSector", &fDoMapSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignalSector", &fSignalSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDP", &fDP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNChambers", &fNChambers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNPlanes", &fNPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrnd", &fTrnd);
      R__insp.InspectMember(fTrnd, "fTrnd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRNIon", &fRNIon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRIon", (void*)&fRIon);
      R__insp.InspectMember("vector<IonPar_t>", (void*)&fRIon, "fRIon.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRSMax", &fRSMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRTotalCharge", &fRTotalCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRTime0", &fRTime0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSumA", (void*)&fSumA);
      R__insp.InspectMember("vector<Double_t>", (void*)&fSumA, "fSumA.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDADC", (void*)&fDADC);
      R__insp.InspectMember("vector<Short_t>", (void*)&fDADC, "fDADC.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOFile", &fOFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOTree", &fOTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilledStrips", &fFilledStrips);
      THaAnalysisObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSolSimGEMDigitization(void *p) {
      delete ((::TSolSimGEMDigitization*)p);
   }
   static void deleteArray_TSolSimGEMDigitization(void *p) {
      delete [] ((::TSolSimGEMDigitization*)p);
   }
   static void destruct_TSolSimGEMDigitization(void *p) {
      typedef ::TSolSimGEMDigitization current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimGEMDigitization

//______________________________________________________________________________
namespace ROOT {
   void Cluster_t_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class Cluster_t.
      typedef ::ROOT::Shadow::Cluster_t ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::Cluster_t*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &sobj->fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", &sobj->fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCharge", &sobj->fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &sobj->fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResolution", &sobj->fResolution);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_Cluster_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Cluster_t : new ::Cluster_t;
   }
   static void *newArray_Cluster_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::Cluster_t[nElements] : new ::Cluster_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_Cluster_t(void *p) {
      delete ((::Cluster_t*)p);
   }
   static void deleteArray_Cluster_t(void *p) {
      delete [] ((::Cluster_t*)p);
   }
   static void destruct_Cluster_t(void *p) {
      typedef ::Cluster_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::Cluster_t

//______________________________________________________________________________
void TSolClusters::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolClusters.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolClusters::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolClusters::Class(),this);
   }
}

//______________________________________________________________________________
void TSolClusters::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolClusters.
      TClass *R__cl = ::TSolClusters::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRawHits", (void*)&fRawHits);
      R__insp.InspectMember("HitMap_t", (void*)&fRawHits, "fRawHits.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusters", (void*)&fClusters);
      R__insp.InspectMember("vector<Cluster_t>", (void*)&fClusters, "fClusters.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolClusters(void *p) {
      return  p ? new(p) ::TSolClusters : new ::TSolClusters;
   }
   static void *newArray_TSolClusters(Long_t nElements, void *p) {
      return p ? new(p) ::TSolClusters[nElements] : new ::TSolClusters[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolClusters(void *p) {
      delete ((::TSolClusters*)p);
   }
   static void deleteArray_TSolClusters(void *p) {
      delete [] ((::TSolClusters*)p);
   }
   static void destruct_TSolClusters(void *p) {
      typedef ::TSolClusters current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolClusters

//______________________________________________________________________________
namespace ROOT {
   void TSolGEMData_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolGEMData.
      typedef ::ROOT::Shadow::TSolGEMData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMData*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunID", &sobj->fRunID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtID", &sobj->fEvtID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSource", &sobj->fSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitData", (void*)&sobj->fHitData);
      R__insp.InspectMember("vector<GEMHitData_t>", (void*)&sobj->fHitData, "fHitData.", false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolGEMData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolGEMData : new ::TSolGEMData;
   }
   static void *newArray_TSolGEMData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolGEMData[nElements] : new ::TSolGEMData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolGEMData(void *p) {
      delete ((::TSolGEMData*)p);
   }
   static void deleteArray_TSolGEMData(void *p) {
      delete [] ((::TSolGEMData*)p);
   }
   static void destruct_TSolGEMData(void *p) {
      typedef ::TSolGEMData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolGEMData

//______________________________________________________________________________
namespace ROOT {
   void TSolGEMDatacLcLGEMHitData_t_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolGEMData::GEMHitData_t.
      typedef ::ROOT::Shadow::TSolGEMData::GEMHitData_t ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMData::GEMHitData_t*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGem", &sobj->fGem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdep", &sobj->fEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &sobj->fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &sobj->fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &sobj->fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXi", &sobj->fXi);
      R__insp.InspectMember(sobj->fXi, "fXi.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXo", &sobj->fXo);
      R__insp.InspectMember(sobj->fXo, "fXo.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXr", &sobj->fXr);
      R__insp.InspectMember(sobj->fXr, "fXr.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMom", &sobj->fMom);
      R__insp.InspectMember(sobj->fMom, "fMom.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVert", &sobj->fVert);
      R__insp.InspectMember(sobj->fVert, "fVert.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolGEMDatacLcLGEMHitData_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolGEMData::GEMHitData_t : new ::TSolGEMData::GEMHitData_t;
   }
   static void *newArray_TSolGEMDatacLcLGEMHitData_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolGEMData::GEMHitData_t[nElements] : new ::TSolGEMData::GEMHitData_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolGEMDatacLcLGEMHitData_t(void *p) {
      delete ((::TSolGEMData::GEMHitData_t*)p);
   }
   static void deleteArray_TSolGEMDatacLcLGEMHitData_t(void *p) {
      delete [] ((::TSolGEMData::GEMHitData_t*)p);
   }
   static void destruct_TSolGEMDatacLcLGEMHitData_t(void *p) {
      typedef ::TSolGEMData::GEMHitData_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolGEMData::GEMHitData_t

//______________________________________________________________________________
namespace ROOT {
   void hitdata_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class hitdata.
      typedef ::ROOT::Shadow::hitdata ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::hitdata*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDetID", &sobj->fDetID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", &sobj->fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFillbits", &sobj->fFillbits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fData", &sobj->fData);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_hitdata(void *p) {
      delete ((::hitdata*)p);
   }
   static void deleteArray_hitdata(void *p) {
      delete [] ((::hitdata*)p);
   }
   static void destruct_hitdata(void *p) {
      typedef ::hitdata current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::hitdata

//______________________________________________________________________________
namespace ROOT {
   void gendata_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class gendata.
      typedef ::ROOT::Shadow::gendata ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::gendata*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("hitdata", ( ::hitdata * )( (::gendata*) obj ), false);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_gendata(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::gendata : new ::gendata;
   }
   static void *newArray_gendata(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::gendata[nElements] : new ::gendata[nElements];
   }
   // Wrapper around operator delete
   static void delete_gendata(void *p) {
      delete ((::gendata*)p);
   }
   static void deleteArray_gendata(void *p) {
      delete [] ((::gendata*)p);
   }
   static void destruct_gendata(void *p) {
      typedef ::gendata current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::gendata

//______________________________________________________________________________
namespace ROOT {
   void ECdata_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class ECdata.
      typedef ::ROOT::Shadow::ECdata ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::ECdata*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.GenericShowMembers("hitdata", ( ::hitdata * )( (::ECdata*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_ECdata(void *p) {
      delete ((::ECdata*)p);
   }
   static void deleteArray_ECdata(void *p) {
      delete [] ((::ECdata*)p);
   }
   static void destruct_ECdata(void *p) {
      typedef ::ECdata current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::ECdata

//______________________________________________________________________________
namespace ROOT {
   void TSolEVIOFile_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolEVIOFile.
      typedef ::ROOT::Shadow::TSolEVIOFile ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolEVIOFile*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilename[255]", sobj->fFilename);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChan", &sobj->fChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSource", &sobj->fSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitData", (void*)&sobj->fHitData);
      R__insp.InspectMember("vector<hitdata*>", (void*)&sobj->fHitData, "fHitData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGenData", (void*)&sobj->fGenData);
      R__insp.InspectMember("vector<gendata*>", (void*)&sobj->fGenData, "fGenData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvNum", &sobj->fEvNum);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolEVIOFile(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolEVIOFile : new ::TSolEVIOFile;
   }
   static void *newArray_TSolEVIOFile(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolEVIOFile[nElements] : new ::TSolEVIOFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolEVIOFile(void *p) {
      delete ((::TSolEVIOFile*)p);
   }
   static void deleteArray_TSolEVIOFile(void *p) {
      delete [] ((::TSolEVIOFile*)p);
   }
   static void destruct_TSolEVIOFile(void *p) {
      typedef ::TSolEVIOFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolEVIOFile

//______________________________________________________________________________
namespace ROOT {
   void TGEMShape_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TGEMShape.
      typedef ::ROOT::Shadow::TGEMShape ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TGEMShape*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrigin", (void*)&sobj->fOrigin);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->fOrigin, "fOrigin.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", (void*)&sobj->fSize);
      R__insp.InspectMember("vector<Double_t>", (void*)&sobj->fSize, "fSize.", false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TGEMShape(void *p) {
      delete ((::TGEMShape*)p);
   }
   static void deleteArray_TGEMShape(void *p) {
      delete [] ((::TGEMShape*)p);
   }
   static void destruct_TGEMShape(void *p) {
      typedef ::TGEMShape current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TGEMShape

//______________________________________________________________________________
namespace ROOT {
   void TSolWedge_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolWedge.
      typedef ::ROOT::Shadow::TSolWedge ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolWedge*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR0R0", &sobj->fR0R0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fR1R1", &sobj->fR1R1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi0", &sobj->fPhi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPhi0", &sobj->fTPhi0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi1", &sobj->fPhi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTPhi1", &sobj->fTPhi1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCLW", &sobj->fCLW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSLW", &sobj->fSLW);
      R__insp.GenericShowMembers("TGEMShape", ( ::TGEMShape * )( (::TSolWedge*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSolWedge(void *p) {
      delete ((::TSolWedge*)p);
   }
   static void deleteArray_TSolWedge(void *p) {
      delete [] ((::TSolWedge*)p);
   }
   static void destruct_TSolWedge(void *p) {
      typedef ::TSolWedge current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolWedge

//______________________________________________________________________________
namespace ROOT {
   void TSolRect_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolRect.
      typedef ::ROOT::Shadow::TSolRect ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolRect*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX1", &sobj->fX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX2", &sobj->fX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY1", &sobj->fY1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY2", &sobj->fY2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPhi", &sobj->fPhi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCLW", &sobj->fCLW);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSLW", &sobj->fSLW);
      R__insp.GenericShowMembers("TGEMShape", ( ::TGEMShape * )( (::TSolRect*) obj ), false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSolRect(void *p) {
      delete ((::TSolRect*)p);
   }
   static void deleteArray_TSolRect(void *p) {
      delete [] ((::TSolRect*)p);
   }
   static void destruct_TSolRect(void *p) {
      typedef ::TSolRect current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolRect

//______________________________________________________________________________
void TSolGEMChamber::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolGEMChamber.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolGEMChamber::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolGEMChamber::Class(),this);
   }
}

//______________________________________________________________________________
void TSolGEMChamber::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolGEMChamber.
      TClass *R__cl = ::TSolGEMChamber::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChamberType", &fChamberType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPlanes", &fPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNPlanes", &fNPlanes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fShape", &fShape);
      THaDetector::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolGEMChamber(void *p) {
      return  p ? new(p) ::TSolGEMChamber : new ::TSolGEMChamber;
   }
   static void *newArray_TSolGEMChamber(Long_t nElements, void *p) {
      return p ? new(p) ::TSolGEMChamber[nElements] : new ::TSolGEMChamber[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolGEMChamber(void *p) {
      delete ((::TSolGEMChamber*)p);
   }
   static void deleteArray_TSolGEMChamber(void *p) {
      delete [] ((::TSolGEMChamber*)p);
   }
   static void destruct_TSolGEMChamber(void *p) {
      typedef ::TSolGEMChamber current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolGEMChamber

//______________________________________________________________________________
void TSolGEMCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolGEMCluster.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolGEMCluster::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolGEMCluster::Class(),this);
   }
}

//______________________________________________________________________________
void TSolGEMCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolGEMCluster.
      TClass *R__cl = ::TSolGEMCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPos", &fPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fE", &fE);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolGEMCluster(void *p) {
      return  p ? new(p) ::TSolGEMCluster : new ::TSolGEMCluster;
   }
   static void *newArray_TSolGEMCluster(Long_t nElements, void *p) {
      return p ? new(p) ::TSolGEMCluster[nElements] : new ::TSolGEMCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolGEMCluster(void *p) {
      delete ((::TSolGEMCluster*)p);
   }
   static void deleteArray_TSolGEMCluster(void *p) {
      delete [] ((::TSolGEMCluster*)p);
   }
   static void destruct_TSolGEMCluster(void *p) {
      typedef ::TSolGEMCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolGEMCluster

//______________________________________________________________________________
namespace ROOT {
   void TSolGEMVStrip_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolGEMVStrip.
      typedef ::ROOT::Shadow::TSolGEMVStrip ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolGEMVStrip*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fIdx", &sobj->fIdx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fADC", &sobj->fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCharge", &sobj->fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &sobj->fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNsample", &sobj->fNsample);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitCharge", &sobj->fHitCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize", &sobj->fSize);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolGEMVStrip(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolGEMVStrip : new ::TSolGEMVStrip;
   }
   static void *newArray_TSolGEMVStrip(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolGEMVStrip[nElements] : new ::TSolGEMVStrip[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolGEMVStrip(void *p) {
      delete ((::TSolGEMVStrip*)p);
   }
   static void deleteArray_TSolGEMVStrip(void *p) {
      delete [] ((::TSolGEMVStrip*)p);
   }
   static void destruct_TSolGEMVStrip(void *p) {
      typedef ::TSolGEMVStrip current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolGEMVStrip

//______________________________________________________________________________
void TSolSpec::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolSpec.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolSpec::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolSpec::Class(),this);
   }
}

//______________________________________________________________________________
void TSolSpec::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolSpec.
      TClass *R__cl = ::TSolSpec::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChambers", (void*)&fChambers);
      R__insp.InspectMember("vector<TSolGEMChamber*>", (void*)&fChambers, "fChambers.", false);
      THaSpectrometer::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSolSpec(void *p) {
      delete ((::TSolSpec*)p);
   }
   static void deleteArray_TSolSpec(void *p) {
      delete [] ((::TSolSpec*)p);
   }
   static void destruct_TSolSpec(void *p) {
      typedef ::TSolSpec current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSpec

//______________________________________________________________________________
void TSolSimEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolSimEvent.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolSimEvent::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolSimEvent::Class(),this);
   }
}

//______________________________________________________________________________
void TSolSimEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolSimEvent.
      TClass *R__cl = ::TSolSimEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRunID", &fRunID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvtID", &fEvtID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWeight", &fWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fMCTracks", &fMCTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSignal", &fNSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSectorsMapped", &fSectorsMapped);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSignalSector", &fSignalSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGEMClust", (void*)&fGEMClust);
      R__insp.InspectMember("vector<GEMCluster>", (void*)&fGEMClust, "fGEMClust.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGEMStrips", (void*)&fGEMStrips);
      R__insp.InspectMember("vector<DigiGEMStrip>", (void*)&fGEMStrips, "fGEMStrips.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECHitData", (void*)&fECHitData);
      R__insp.InspectMember("vector<ECHitData>", (void*)&fECHitData, "fECHitData.", false);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimEvent(void *p) {
      return  p ? new(p) ::TSolSimEvent : new ::TSolSimEvent;
   }
   static void *newArray_TSolSimEvent(Long_t nElements, void *p) {
      return p ? new(p) ::TSolSimEvent[nElements] : new ::TSolSimEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimEvent(void *p) {
      delete ((::TSolSimEvent*)p);
   }
   static void deleteArray_TSolSimEvent(void *p) {
      delete [] ((::TSolSimEvent*)p);
   }
   static void destruct_TSolSimEvent(void *p) {
      typedef ::TSolSimEvent current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimEvent

//______________________________________________________________________________
namespace ROOT {
   void TSolROOTFile_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolROOTFile.
      typedef ::ROOT::Shadow::TSolROOTFile ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolROOTFile*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFilename[255]", sobj->fFilename);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fChan", &sobj->fChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree_generated", &sobj->tree_generated);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree_solid_gem", &sobj->tree_solid_gem);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tree_flux", &sobj->tree_flux);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSource", &sobj->fSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gen_pid", &sobj->gen_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gen_px", &sobj->gen_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gen_py", &sobj->gen_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gen_pz", &sobj->gen_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gen_vx", &sobj->gen_vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gen_vy", &sobj->gen_vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gen_vz", &sobj->gen_vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_id", &sobj->solid_gem_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_hitn", &sobj->solid_gem_hitn);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_pid", &sobj->solid_gem_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_trid", &sobj->solid_gem_trid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_x", &sobj->solid_gem_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_y", &sobj->solid_gem_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_z", &sobj->solid_gem_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_lxin", &sobj->solid_gem_lxin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_lyin", &sobj->solid_gem_lyin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_lzin", &sobj->solid_gem_lzin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_tin", &sobj->solid_gem_tin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_lxout", &sobj->solid_gem_lxout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_lyout", &sobj->solid_gem_lyout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_lzout", &sobj->solid_gem_lzout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_tout", &sobj->solid_gem_tout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_px", &sobj->solid_gem_px);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_py", &sobj->solid_gem_py);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_pz", &sobj->solid_gem_pz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_vx", &sobj->solid_gem_vx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_vy", &sobj->solid_gem_vy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_vz", &sobj->solid_gem_vz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_ETot", &sobj->solid_gem_ETot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_trE", &sobj->solid_gem_trE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*solid_gem_weight", &sobj->solid_gem_weight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flux_id", &sobj->flux_id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flux_pid", &sobj->flux_pid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flux_tid", &sobj->flux_tid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flux_trackE", &sobj->flux_trackE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flux_avg_x", &sobj->flux_avg_x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flux_avg_y", &sobj->flux_avg_y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*flux_avg_z", &sobj->flux_avg_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitData", (void*)&sobj->fHitData);
      R__insp.InspectMember("vector<hitdata*>", (void*)&sobj->fHitData, "fHitData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGenData", (void*)&sobj->fGenData);
      R__insp.InspectMember("vector<gendata*>", (void*)&sobj->fGenData, "fGenData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECData", (void*)&sobj->fECData);
      R__insp.InspectMember("vector<ECdata*>", (void*)&sobj->fECData, "fECData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEvNum", &sobj->fEvNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMaxEvNum", &sobj->fMaxEvNum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFillBitsGEM", &sobj->fFillBitsGEM);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFillBitsEC", &sobj->fFillBitsEC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fECEDep", &sobj->fECEDep);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolROOTFile(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolROOTFile : new ::TSolROOTFile;
   }
   static void *newArray_TSolROOTFile(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolROOTFile[nElements] : new ::TSolROOTFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolROOTFile(void *p) {
      delete ((::TSolROOTFile*)p);
   }
   static void deleteArray_TSolROOTFile(void *p) {
      delete [] ((::TSolROOTFile*)p);
   }
   static void destruct_TSolROOTFile(void *p) {
      typedef ::TSolROOTFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolROOTFile

//______________________________________________________________________________
namespace ROOT {
   void TSolDigitizedPlane_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolDigitizedPlane.
      typedef ::ROOT::Shadow::TSolDigitizedPlane ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolDigitizedPlane*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripADC", &sobj->fStripADC);
      R__insp.InspectMember(sobj->fStripADC, "fStripADC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fType", &sobj->fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTotADC", &sobj->fTotADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCharge", &sobj->fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTime", &sobj->fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNSamples", &sobj->fNSamples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNStrips", &sobj->fNStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThreshold", &sobj->fThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNOT", &sobj->fNOT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOverThr", &sobj->fOverThr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripClusters", (void*)&sobj->fStripClusters);
      R__insp.InspectMember("vector<std::vector<Short_t> >", (void*)&sobj->fStripClusters, "fStripClusters.", false);
   }

}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_TSolDigitizedPlane(void *p) {
      delete ((::TSolDigitizedPlane*)p);
   }
   static void deleteArray_TSolDigitizedPlane(void *p) {
      delete [] ((::TSolDigitizedPlane*)p);
   }
   static void destruct_TSolDigitizedPlane(void *p) {
      typedef ::TSolDigitizedPlane current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolDigitizedPlane

//______________________________________________________________________________
namespace ROOT {
   void TSolSimGEMDigitizationcLcLIonPar_t_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolSimGEMDigitization::IonPar_t.
      typedef ::ROOT::Shadow::TSolSimGEMDigitization::IonPar_t ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimGEMDigitization::IonPar_t*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "X", &sobj->X);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Y", &sobj->Y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Charge", &sobj->Charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SNorm", &sobj->SNorm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R2", &sobj->R2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ggnorm", &sobj->ggnorm);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimGEMDigitizationcLcLIonPar_t(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolSimGEMDigitization::IonPar_t : new ::TSolSimGEMDigitization::IonPar_t;
   }
   static void *newArray_TSolSimGEMDigitizationcLcLIonPar_t(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolSimGEMDigitization::IonPar_t[nElements] : new ::TSolSimGEMDigitization::IonPar_t[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimGEMDigitizationcLcLIonPar_t(void *p) {
      delete ((::TSolSimGEMDigitization::IonPar_t*)p);
   }
   static void deleteArray_TSolSimGEMDigitizationcLcLIonPar_t(void *p) {
      delete [] ((::TSolSimGEMDigitization::IonPar_t*)p);
   }
   static void destruct_TSolSimGEMDigitizationcLcLIonPar_t(void *p) {
      typedef ::TSolSimGEMDigitization::IonPar_t current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimGEMDigitization::IonPar_t

//______________________________________________________________________________
void TSolSimTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolSimTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolSimTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolSimTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TSolSimTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolSimTrack.
      TClass *R__cl = ::TSolSimTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      //This works around a msvc bug and should be harmless on other platforms
      typedef Podd::MCTrack baseClass1;
      baseClass1::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimTrack(void *p) {
      return  p ? new(p) ::TSolSimTrack : new ::TSolSimTrack;
   }
   static void *newArray_TSolSimTrack(Long_t nElements, void *p) {
      return p ? new(p) ::TSolSimTrack[nElements] : new ::TSolSimTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimTrack(void *p) {
      delete ((::TSolSimTrack*)p);
   }
   static void deleteArray_TSolSimTrack(void *p) {
      delete [] ((::TSolSimTrack*)p);
   }
   static void destruct_TSolSimTrack(void *p) {
      typedef ::TSolSimTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimTrack

//______________________________________________________________________________
namespace ROOT {
   void TSolSimEventcLcLGEMCluster_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolSimEvent::GEMCluster.
      typedef ::ROOT::Shadow::TSolSimEvent::GEMCluster ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent::GEMCluster*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &sobj->fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSector", &sobj->fSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlane", &sobj->fPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealSector", &sobj->fRealSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSource", &sobj->fSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &sobj->fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &sobj->fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &sobj->fP);
      R__insp.InspectMember(sobj->fP, "fP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXEntry", &sobj->fXEntry);
      R__insp.InspectMember(sobj->fXEntry, "fXEntry.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCpos", &sobj->fMCpos);
      R__insp.InspectMember(sobj->fMCpos, "fMCpos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitpos", &sobj->fHitpos);
      R__insp.InspectMember(sobj->fHitpos, "fHitpos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCharge", &sobj->fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &sobj->fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSize[2]", sobj->fSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStart[2]", sobj->fStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXProj[2]", sobj->fXProj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertex", &sobj->fVertex);
      R__insp.InspectMember(sobj->fVertex, "fVertex.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimEventcLcLGEMCluster(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolSimEvent::GEMCluster : new ::TSolSimEvent::GEMCluster;
   }
   static void *newArray_TSolSimEventcLcLGEMCluster(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolSimEvent::GEMCluster[nElements] : new ::TSolSimEvent::GEMCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimEventcLcLGEMCluster(void *p) {
      delete ((::TSolSimEvent::GEMCluster*)p);
   }
   static void deleteArray_TSolSimEventcLcLGEMCluster(void *p) {
      delete [] ((::TSolSimEvent::GEMCluster*)p);
   }
   static void destruct_TSolSimEventcLcLGEMCluster(void *p) {
      typedef ::TSolSimEvent::GEMCluster current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimEvent::GEMCluster

//______________________________________________________________________________
namespace ROOT {
   void TSolSimEventcLcLDigiGEMStrip_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolSimEvent::DigiGEMStrip.
      typedef ::ROOT::Shadow::TSolSimEvent::DigiGEMStrip ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent::DigiGEMStrip*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSector", &sobj->fSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlane", &sobj->fPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fProj", &sobj->fProj);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChan", &sobj->fChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSigType", &sobj->fSigType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCharge", &sobj->fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime1", &sobj->fTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNsamp", &sobj->fNsamp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC[10]", sobj->fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fClusters", &sobj->fClusters);
      R__insp.InspectMember(sobj->fClusters, "fClusters.");
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimEventcLcLDigiGEMStrip(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolSimEvent::DigiGEMStrip : new ::TSolSimEvent::DigiGEMStrip;
   }
   static void *newArray_TSolSimEventcLcLDigiGEMStrip(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolSimEvent::DigiGEMStrip[nElements] : new ::TSolSimEvent::DigiGEMStrip[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimEventcLcLDigiGEMStrip(void *p) {
      delete ((::TSolSimEvent::DigiGEMStrip*)p);
   }
   static void deleteArray_TSolSimEventcLcLDigiGEMStrip(void *p) {
      delete [] ((::TSolSimEvent::DigiGEMStrip*)p);
   }
   static void destruct_TSolSimEventcLcLDigiGEMStrip(void *p) {
      typedef ::TSolSimEvent::DigiGEMStrip current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimEvent::DigiGEMStrip

//______________________________________________________________________________
namespace ROOT {
   void TSolSimEventcLcLECHitData_ShowMembers(void *obj, TMemberInspector &R__insp)
   {
      // Inspect the data members of an object of class TSolSimEvent::ECHitData.
      typedef ::ROOT::Shadow::TSolSimEvent::ECHitData ShadowClass;
      ShadowClass *sobj = (ShadowClass*)obj;
      if (sobj) { } // Dummy usage just in case there is no datamember.

      TClass *R__cl  = ::ROOT::GenerateInitInstanceLocal((const ::TSolSimEvent::ECHitData*)0x0)->GetClass();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &sobj->fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTID", &sobj->fTID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlane", &sobj->fPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEdep", &sobj->fEdep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXPos", &sobj->fXPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYPos", &sobj->fYPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZPos", &sobj->fZPos);
   }

}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimEventcLcLECHitData(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolSimEvent::ECHitData : new ::TSolSimEvent::ECHitData;
   }
   static void *newArray_TSolSimEventcLcLECHitData(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::TSolSimEvent::ECHitData[nElements] : new ::TSolSimEvent::ECHitData[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimEventcLcLECHitData(void *p) {
      delete ((::TSolSimEvent::ECHitData*)p);
   }
   static void deleteArray_TSolSimEventcLcLECHitData(void *p) {
      delete [] ((::TSolSimEvent::ECHitData*)p);
   }
   static void destruct_TSolSimEventcLcLECHitData(void *p) {
      typedef ::TSolSimEvent::ECHitData current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimEvent::ECHitData

//______________________________________________________________________________
void TSolSimFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolSimFile.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolSimFile::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolSimFile::Class(),this);
   }
}

//______________________________________________________________________________
void TSolSimFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolSimFile.
      TClass *R__cl = ::TSolSimFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fROOTFileName", &fROOTFileName);
      R__insp.InspectMember(fROOTFileName, "fROOTFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fROOTFile", &fROOTFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEvent", &fEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNEntries", &fNEntries);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEntry", &fEntry);
      THaRunBase::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimFile(void *p) {
      return  p ? new(p) ::TSolSimFile : new ::TSolSimFile;
   }
   static void *newArray_TSolSimFile(Long_t nElements, void *p) {
      return p ? new(p) ::TSolSimFile[nElements] : new ::TSolSimFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimFile(void *p) {
      delete ((::TSolSimFile*)p);
   }
   static void deleteArray_TSolSimFile(void *p) {
      delete [] ((::TSolSimFile*)p);
   }
   static void destruct_TSolSimFile(void *p) {
      typedef ::TSolSimFile current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimFile

//______________________________________________________________________________
void TSolSimGEMHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolSimGEMHit.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolSimGEMHit::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolSimGEMHit::Class(),this);
   }
}

//______________________________________________________________________________
void TSolSimGEMHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolSimGEMHit.
      TClass *R__cl = ::TSolSimGEMHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fID", &fID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSector", &fSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlane", &fPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRealSector", &fRealSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSource", &fSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.InspectMember(fP, "fP.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXEntry", &fXEntry);
      R__insp.InspectMember(fXEntry, "fXEntry.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMCpos", &fMCpos);
      R__insp.InspectMember(fMCpos, "fMCpos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitpos", &fHitpos);
      R__insp.InspectMember(fHitpos, "fHitpos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCharge", &fCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUSize", &fUSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUStart", &fUStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUPos", &fUPos);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVSize", &fVSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVStart", &fVStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVPos", &fVPos);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimGEMHit(void *p) {
      return  p ? new(p) ::TSolSimGEMHit : new ::TSolSimGEMHit;
   }
   static void *newArray_TSolSimGEMHit(Long_t nElements, void *p) {
      return p ? new(p) ::TSolSimGEMHit[nElements] : new ::TSolSimGEMHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimGEMHit(void *p) {
      delete ((::TSolSimGEMHit*)p);
   }
   static void deleteArray_TSolSimGEMHit(void *p) {
      delete [] ((::TSolSimGEMHit*)p);
   }
   static void destruct_TSolSimGEMHit(void *p) {
      typedef ::TSolSimGEMHit current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimGEMHit

//______________________________________________________________________________
void TSolSimBackTrack::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolSimBackTrack.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolSimBackTrack::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolSimBackTrack::Class(),this);
   }
}

//______________________________________________________________________________
void TSolSimBackTrack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolSimBackTrack.
      TClass *R__cl = ::TSolSimBackTrack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fType", &fType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPID", &fPID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSector", &fSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSource", &fSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOrigin", &fOrigin);
      R__insp.InspectMember(fOrigin, "fOrigin.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitpos", &fHitpos);
      R__insp.InspectMember(fHitpos, "fHitpos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMomentum", &fMomentum);
      R__insp.InspectMember(fMomentum, "fMomentum.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitBits", &fHitBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUfailBits", &fUfailBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVfailBits", &fVfailBits);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimBackTrack(void *p) {
      return  p ? new(p) ::TSolSimBackTrack : new ::TSolSimBackTrack;
   }
   static void *newArray_TSolSimBackTrack(Long_t nElements, void *p) {
      return p ? new(p) ::TSolSimBackTrack[nElements] : new ::TSolSimBackTrack[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimBackTrack(void *p) {
      delete ((::TSolSimBackTrack*)p);
   }
   static void deleteArray_TSolSimBackTrack(void *p) {
      delete [] ((::TSolSimBackTrack*)p);
   }
   static void destruct_TSolSimBackTrack(void *p) {
      typedef ::TSolSimBackTrack current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimBackTrack

//______________________________________________________________________________
void TSolSimDecoder::Streamer(TBuffer &R__b)
{
   // Stream an object of class TSolSimDecoder.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(TSolSimDecoder::Class(),this);
   } else {
      R__b.WriteClassBuffer(TSolSimDecoder::Class(),this);
   }
}

//______________________________________________________________________________
void TSolSimDecoder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class TSolSimDecoder.
      TClass *R__cl = ::TSolSimDecoder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fBackTracks", &fBackTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStripMap", (void*)&fStripMap);
      R__insp.InspectMember("TSolSimDecoder::StripMap_t", (void*)&fStripMap, "fStripMap.", true);
      //This works around a msvc bug and should be harmless on other platforms
      typedef Podd::SimDecoder baseClass1;
      baseClass1::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_TSolSimDecoder(void *p) {
      return  p ? new(p) ::TSolSimDecoder : new ::TSolSimDecoder;
   }
   static void *newArray_TSolSimDecoder(Long_t nElements, void *p) {
      return p ? new(p) ::TSolSimDecoder[nElements] : new ::TSolSimDecoder[nElements];
   }
   // Wrapper around operator delete
   static void delete_TSolSimDecoder(void *p) {
      delete ((::TSolSimDecoder*)p);
   }
   static void deleteArray_TSolSimDecoder(void *p) {
      delete [] ((::TSolSimDecoder*)p);
   }
   static void destruct_TSolSimDecoder(void *p) {
      typedef ::TSolSimDecoder current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::TSolSimDecoder

namespace ROOT {
   void maplEintcOfloatgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOfloatgR_Dictionary();
   static void *new_maplEintcOfloatgR(void *p = 0);
   static void *newArray_maplEintcOfloatgR(Long_t size, void *p);
   static void delete_maplEintcOfloatgR(void *p);
   static void deleteArray_maplEintcOfloatgR(void *p);
   static void destruct_maplEintcOfloatgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const map<int,float>*)
   {
      map<int,float> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,float>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,float>", -2, "prec_stl/map", 63,
                  typeid(map<int,float>), DefineBehavior(ptr, ptr),
                  0, &maplEintcOfloatgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,float>) );
      instance.SetNew(&new_maplEintcOfloatgR);
      instance.SetNewArray(&newArray_maplEintcOfloatgR);
      instance.SetDelete(&delete_maplEintcOfloatgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOfloatgR);
      instance.SetDestructor(&destruct_maplEintcOfloatgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::MapInsert< map<int,float> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,float>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOfloatgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const map<int,float>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_maplEintcOfloatgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,float> : new map<int,float>;
   }
   static void *newArray_maplEintcOfloatgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,float>[nElements] : new map<int,float>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOfloatgR(void *p) {
      delete ((map<int,float>*)p);
   }
   static void deleteArray_maplEintcOfloatgR(void *p) {
      delete [] ((map<int,float>*)p);
   }
   static void destruct_maplEintcOfloatgR(void *p) {
      typedef map<int,float> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class map<int,float>

namespace ROOT {
   void vectorlECluster_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlECluster_tgR_Dictionary();
   static void *new_vectorlECluster_tgR(void *p = 0);
   static void *newArray_vectorlECluster_tgR(Long_t size, void *p);
   static void delete_vectorlECluster_tgR(void *p);
   static void deleteArray_vectorlECluster_tgR(void *p);
   static void destruct_vectorlECluster_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<Cluster_t>*)
   {
      vector<Cluster_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<Cluster_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<Cluster_t>", -2, "prec_stl/vector", 49,
                  typeid(vector<Cluster_t>), DefineBehavior(ptr, ptr),
                  0, &vectorlECluster_tgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<Cluster_t>) );
      instance.SetNew(&new_vectorlECluster_tgR);
      instance.SetNewArray(&newArray_vectorlECluster_tgR);
      instance.SetDelete(&delete_vectorlECluster_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlECluster_tgR);
      instance.SetDestructor(&destruct_vectorlECluster_tgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<Cluster_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<Cluster_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlECluster_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<Cluster_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlECluster_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Cluster_t> : new vector<Cluster_t>;
   }
   static void *newArray_vectorlECluster_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<Cluster_t>[nElements] : new vector<Cluster_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlECluster_tgR(void *p) {
      delete ((vector<Cluster_t>*)p);
   }
   static void deleteArray_vectorlECluster_tgR(void *p) {
      delete [] ((vector<Cluster_t>*)p);
   }
   static void destruct_vectorlECluster_tgR(void *p) {
      typedef vector<Cluster_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<Cluster_t>

namespace ROOT {
   void vectorlEECdatamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEECdatamUgR_Dictionary();
   static void *new_vectorlEECdatamUgR(void *p = 0);
   static void *newArray_vectorlEECdatamUgR(Long_t size, void *p);
   static void delete_vectorlEECdatamUgR(void *p);
   static void deleteArray_vectorlEECdatamUgR(void *p);
   static void destruct_vectorlEECdatamUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<ECdata*>*)
   {
      vector<ECdata*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<ECdata*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<ECdata*>", -2, "prec_stl/vector", 49,
                  typeid(vector<ECdata*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEECdatamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<ECdata*>) );
      instance.SetNew(&new_vectorlEECdatamUgR);
      instance.SetNewArray(&newArray_vectorlEECdatamUgR);
      instance.SetDelete(&delete_vectorlEECdatamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEECdatamUgR);
      instance.SetDestructor(&destruct_vectorlEECdatamUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<ECdata*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<ECdata*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEECdatamUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<ECdata*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEECdatamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ECdata*> : new vector<ECdata*>;
   }
   static void *newArray_vectorlEECdatamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<ECdata*>[nElements] : new vector<ECdata*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEECdatamUgR(void *p) {
      delete ((vector<ECdata*>*)p);
   }
   static void deleteArray_vectorlEECdatamUgR(void *p) {
      delete [] ((vector<ECdata*>*)p);
   }
   static void destruct_vectorlEECdatamUgR(void *p) {
      typedef vector<ECdata*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<ECdata*>

namespace ROOT {
   void vectorlETSolGEMDatacLcLGEMHitData_tgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETSolGEMDatacLcLGEMHitData_tgR_Dictionary();
   static void *new_vectorlETSolGEMDatacLcLGEMHitData_tgR(void *p = 0);
   static void *newArray_vectorlETSolGEMDatacLcLGEMHitData_tgR(Long_t size, void *p);
   static void delete_vectorlETSolGEMDatacLcLGEMHitData_tgR(void *p);
   static void deleteArray_vectorlETSolGEMDatacLcLGEMHitData_tgR(void *p);
   static void destruct_vectorlETSolGEMDatacLcLGEMHitData_tgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TSolGEMData::GEMHitData_t>*)
   {
      vector<TSolGEMData::GEMHitData_t> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TSolGEMData::GEMHitData_t>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TSolGEMData::GEMHitData_t>", -2, "prec_stl/vector", 49,
                  typeid(vector<TSolGEMData::GEMHitData_t>), DefineBehavior(ptr, ptr),
                  0, &vectorlETSolGEMDatacLcLGEMHitData_tgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TSolGEMData::GEMHitData_t>) );
      instance.SetNew(&new_vectorlETSolGEMDatacLcLGEMHitData_tgR);
      instance.SetNewArray(&newArray_vectorlETSolGEMDatacLcLGEMHitData_tgR);
      instance.SetDelete(&delete_vectorlETSolGEMDatacLcLGEMHitData_tgR);
      instance.SetDeleteArray(&deleteArray_vectorlETSolGEMDatacLcLGEMHitData_tgR);
      instance.SetDestructor(&destruct_vectorlETSolGEMDatacLcLGEMHitData_tgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TSolGEMData::GEMHitData_t> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TSolGEMData::GEMHitData_t>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETSolGEMDatacLcLGEMHitData_tgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TSolGEMData::GEMHitData_t>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETSolGEMDatacLcLGEMHitData_tgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSolGEMData::GEMHitData_t> : new vector<TSolGEMData::GEMHitData_t>;
   }
   static void *newArray_vectorlETSolGEMDatacLcLGEMHitData_tgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSolGEMData::GEMHitData_t>[nElements] : new vector<TSolGEMData::GEMHitData_t>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETSolGEMDatacLcLGEMHitData_tgR(void *p) {
      delete ((vector<TSolGEMData::GEMHitData_t>*)p);
   }
   static void deleteArray_vectorlETSolGEMDatacLcLGEMHitData_tgR(void *p) {
      delete [] ((vector<TSolGEMData::GEMHitData_t>*)p);
   }
   static void destruct_vectorlETSolGEMDatacLcLGEMHitData_tgR(void *p) {
      typedef vector<TSolGEMData::GEMHitData_t> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TSolGEMData::GEMHitData_t>

namespace ROOT {
   void vectorlETSolSimEventcLcLDigiGEMStripgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETSolSimEventcLcLDigiGEMStripgR_Dictionary();
   static void *new_vectorlETSolSimEventcLcLDigiGEMStripgR(void *p = 0);
   static void *newArray_vectorlETSolSimEventcLcLDigiGEMStripgR(Long_t size, void *p);
   static void delete_vectorlETSolSimEventcLcLDigiGEMStripgR(void *p);
   static void deleteArray_vectorlETSolSimEventcLcLDigiGEMStripgR(void *p);
   static void destruct_vectorlETSolSimEventcLcLDigiGEMStripgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TSolSimEvent::DigiGEMStrip>*)
   {
      vector<TSolSimEvent::DigiGEMStrip> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TSolSimEvent::DigiGEMStrip>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TSolSimEvent::DigiGEMStrip>", -2, "prec_stl/vector", 49,
                  typeid(vector<TSolSimEvent::DigiGEMStrip>), DefineBehavior(ptr, ptr),
                  0, &vectorlETSolSimEventcLcLDigiGEMStripgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TSolSimEvent::DigiGEMStrip>) );
      instance.SetNew(&new_vectorlETSolSimEventcLcLDigiGEMStripgR);
      instance.SetNewArray(&newArray_vectorlETSolSimEventcLcLDigiGEMStripgR);
      instance.SetDelete(&delete_vectorlETSolSimEventcLcLDigiGEMStripgR);
      instance.SetDeleteArray(&deleteArray_vectorlETSolSimEventcLcLDigiGEMStripgR);
      instance.SetDestructor(&destruct_vectorlETSolSimEventcLcLDigiGEMStripgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TSolSimEvent::DigiGEMStrip> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TSolSimEvent::DigiGEMStrip>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETSolSimEventcLcLDigiGEMStripgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TSolSimEvent::DigiGEMStrip>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETSolSimEventcLcLDigiGEMStripgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSolSimEvent::DigiGEMStrip> : new vector<TSolSimEvent::DigiGEMStrip>;
   }
   static void *newArray_vectorlETSolSimEventcLcLDigiGEMStripgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSolSimEvent::DigiGEMStrip>[nElements] : new vector<TSolSimEvent::DigiGEMStrip>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETSolSimEventcLcLDigiGEMStripgR(void *p) {
      delete ((vector<TSolSimEvent::DigiGEMStrip>*)p);
   }
   static void deleteArray_vectorlETSolSimEventcLcLDigiGEMStripgR(void *p) {
      delete [] ((vector<TSolSimEvent::DigiGEMStrip>*)p);
   }
   static void destruct_vectorlETSolSimEventcLcLDigiGEMStripgR(void *p) {
      typedef vector<TSolSimEvent::DigiGEMStrip> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TSolSimEvent::DigiGEMStrip>

namespace ROOT {
   void vectorlETSolSimEventcLcLECHitDatagR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETSolSimEventcLcLECHitDatagR_Dictionary();
   static void *new_vectorlETSolSimEventcLcLECHitDatagR(void *p = 0);
   static void *newArray_vectorlETSolSimEventcLcLECHitDatagR(Long_t size, void *p);
   static void delete_vectorlETSolSimEventcLcLECHitDatagR(void *p);
   static void deleteArray_vectorlETSolSimEventcLcLECHitDatagR(void *p);
   static void destruct_vectorlETSolSimEventcLcLECHitDatagR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TSolSimEvent::ECHitData>*)
   {
      vector<TSolSimEvent::ECHitData> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TSolSimEvent::ECHitData>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TSolSimEvent::ECHitData>", -2, "prec_stl/vector", 49,
                  typeid(vector<TSolSimEvent::ECHitData>), DefineBehavior(ptr, ptr),
                  0, &vectorlETSolSimEventcLcLECHitDatagR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TSolSimEvent::ECHitData>) );
      instance.SetNew(&new_vectorlETSolSimEventcLcLECHitDatagR);
      instance.SetNewArray(&newArray_vectorlETSolSimEventcLcLECHitDatagR);
      instance.SetDelete(&delete_vectorlETSolSimEventcLcLECHitDatagR);
      instance.SetDeleteArray(&deleteArray_vectorlETSolSimEventcLcLECHitDatagR);
      instance.SetDestructor(&destruct_vectorlETSolSimEventcLcLECHitDatagR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TSolSimEvent::ECHitData> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TSolSimEvent::ECHitData>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETSolSimEventcLcLECHitDatagR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TSolSimEvent::ECHitData>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETSolSimEventcLcLECHitDatagR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSolSimEvent::ECHitData> : new vector<TSolSimEvent::ECHitData>;
   }
   static void *newArray_vectorlETSolSimEventcLcLECHitDatagR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSolSimEvent::ECHitData>[nElements] : new vector<TSolSimEvent::ECHitData>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETSolSimEventcLcLECHitDatagR(void *p) {
      delete ((vector<TSolSimEvent::ECHitData>*)p);
   }
   static void deleteArray_vectorlETSolSimEventcLcLECHitDatagR(void *p) {
      delete [] ((vector<TSolSimEvent::ECHitData>*)p);
   }
   static void destruct_vectorlETSolSimEventcLcLECHitDatagR(void *p) {
      typedef vector<TSolSimEvent::ECHitData> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TSolSimEvent::ECHitData>

namespace ROOT {
   void vectorlETSolSimEventcLcLGEMClustergR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlETSolSimEventcLcLGEMClustergR_Dictionary();
   static void *new_vectorlETSolSimEventcLcLGEMClustergR(void *p = 0);
   static void *newArray_vectorlETSolSimEventcLcLGEMClustergR(Long_t size, void *p);
   static void delete_vectorlETSolSimEventcLcLGEMClustergR(void *p);
   static void deleteArray_vectorlETSolSimEventcLcLGEMClustergR(void *p);
   static void destruct_vectorlETSolSimEventcLcLGEMClustergR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<TSolSimEvent::GEMCluster>*)
   {
      vector<TSolSimEvent::GEMCluster> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<TSolSimEvent::GEMCluster>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<TSolSimEvent::GEMCluster>", -2, "prec_stl/vector", 49,
                  typeid(vector<TSolSimEvent::GEMCluster>), DefineBehavior(ptr, ptr),
                  0, &vectorlETSolSimEventcLcLGEMClustergR_Dictionary, isa_proxy, 0,
                  sizeof(vector<TSolSimEvent::GEMCluster>) );
      instance.SetNew(&new_vectorlETSolSimEventcLcLGEMClustergR);
      instance.SetNewArray(&newArray_vectorlETSolSimEventcLcLGEMClustergR);
      instance.SetDelete(&delete_vectorlETSolSimEventcLcLGEMClustergR);
      instance.SetDeleteArray(&deleteArray_vectorlETSolSimEventcLcLGEMClustergR);
      instance.SetDestructor(&destruct_vectorlETSolSimEventcLcLGEMClustergR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<TSolSimEvent::GEMCluster> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<TSolSimEvent::GEMCluster>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlETSolSimEventcLcLGEMClustergR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<TSolSimEvent::GEMCluster>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlETSolSimEventcLcLGEMClustergR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSolSimEvent::GEMCluster> : new vector<TSolSimEvent::GEMCluster>;
   }
   static void *newArray_vectorlETSolSimEventcLcLGEMClustergR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<TSolSimEvent::GEMCluster>[nElements] : new vector<TSolSimEvent::GEMCluster>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlETSolSimEventcLcLGEMClustergR(void *p) {
      delete ((vector<TSolSimEvent::GEMCluster>*)p);
   }
   static void deleteArray_vectorlETSolSimEventcLcLGEMClustergR(void *p) {
      delete [] ((vector<TSolSimEvent::GEMCluster>*)p);
   }
   static void destruct_vectorlETSolSimEventcLcLGEMClustergR(void *p) {
      typedef vector<TSolSimEvent::GEMCluster> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<TSolSimEvent::GEMCluster>

namespace ROOT {
   void vectorlEdoublegR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEdoublegR_Dictionary();
   static void *new_vectorlEdoublegR(void *p = 0);
   static void *newArray_vectorlEdoublegR(Long_t size, void *p);
   static void delete_vectorlEdoublegR(void *p);
   static void deleteArray_vectorlEdoublegR(void *p);
   static void destruct_vectorlEdoublegR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<double>*)
   {
      vector<double> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<double>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<double>", -2, "vector.dll", 0,
                  typeid(vector<double>), DefineBehavior(ptr, ptr),
                  0, &vectorlEdoublegR_Dictionary, isa_proxy, 0,
                  sizeof(vector<double>) );
      instance.SetNew(&new_vectorlEdoublegR);
      instance.SetNewArray(&newArray_vectorlEdoublegR);
      instance.SetDelete(&delete_vectorlEdoublegR);
      instance.SetDeleteArray(&deleteArray_vectorlEdoublegR);
      instance.SetDestructor(&destruct_vectorlEdoublegR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<double> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<double>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEdoublegR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<double>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEdoublegR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double> : new vector<double>;
   }
   static void *newArray_vectorlEdoublegR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<double>[nElements] : new vector<double>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEdoublegR(void *p) {
      delete ((vector<double>*)p);
   }
   static void deleteArray_vectorlEdoublegR(void *p) {
      delete [] ((vector<double>*)p);
   }
   static void destruct_vectorlEdoublegR(void *p) {
      typedef vector<double> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<double>

namespace ROOT {
   void vectorlEgendatamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEgendatamUgR_Dictionary();
   static void *new_vectorlEgendatamUgR(void *p = 0);
   static void *newArray_vectorlEgendatamUgR(Long_t size, void *p);
   static void delete_vectorlEgendatamUgR(void *p);
   static void deleteArray_vectorlEgendatamUgR(void *p);
   static void destruct_vectorlEgendatamUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<gendata*>*)
   {
      vector<gendata*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<gendata*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<gendata*>", -2, "prec_stl/vector", 49,
                  typeid(vector<gendata*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEgendatamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<gendata*>) );
      instance.SetNew(&new_vectorlEgendatamUgR);
      instance.SetNewArray(&newArray_vectorlEgendatamUgR);
      instance.SetDelete(&delete_vectorlEgendatamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEgendatamUgR);
      instance.SetDestructor(&destruct_vectorlEgendatamUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<gendata*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<gendata*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEgendatamUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<gendata*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEgendatamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<gendata*> : new vector<gendata*>;
   }
   static void *newArray_vectorlEgendatamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<gendata*>[nElements] : new vector<gendata*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEgendatamUgR(void *p) {
      delete ((vector<gendata*>*)p);
   }
   static void deleteArray_vectorlEgendatamUgR(void *p) {
      delete [] ((vector<gendata*>*)p);
   }
   static void destruct_vectorlEgendatamUgR(void *p) {
      typedef vector<gendata*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<gendata*>

namespace ROOT {
   void vectorlEhitdatamUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEhitdatamUgR_Dictionary();
   static void *new_vectorlEhitdatamUgR(void *p = 0);
   static void *newArray_vectorlEhitdatamUgR(Long_t size, void *p);
   static void delete_vectorlEhitdatamUgR(void *p);
   static void deleteArray_vectorlEhitdatamUgR(void *p);
   static void destruct_vectorlEhitdatamUgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<hitdata*>*)
   {
      vector<hitdata*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<hitdata*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<hitdata*>", -2, "prec_stl/vector", 49,
                  typeid(vector<hitdata*>), DefineBehavior(ptr, ptr),
                  0, &vectorlEhitdatamUgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<hitdata*>) );
      instance.SetNew(&new_vectorlEhitdatamUgR);
      instance.SetNewArray(&newArray_vectorlEhitdatamUgR);
      instance.SetDelete(&delete_vectorlEhitdatamUgR);
      instance.SetDeleteArray(&deleteArray_vectorlEhitdatamUgR);
      instance.SetDestructor(&destruct_vectorlEhitdatamUgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<hitdata*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<hitdata*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEhitdatamUgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<hitdata*>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEhitdatamUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<hitdata*> : new vector<hitdata*>;
   }
   static void *newArray_vectorlEhitdatamUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<hitdata*>[nElements] : new vector<hitdata*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEhitdatamUgR(void *p) {
      delete ((vector<hitdata*>*)p);
   }
   static void deleteArray_vectorlEhitdatamUgR(void *p) {
      delete [] ((vector<hitdata*>*)p);
   }
   static void destruct_vectorlEhitdatamUgR(void *p) {
      typedef vector<hitdata*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<hitdata*>

namespace ROOT {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "prec_stl/vector", 49,
                  typeid(vector<int>), DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<int>

namespace ROOT {
   void vectorlEshortgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEshortgR_Dictionary();
   static void *new_vectorlEshortgR(void *p = 0);
   static void *newArray_vectorlEshortgR(Long_t size, void *p);
   static void delete_vectorlEshortgR(void *p);
   static void deleteArray_vectorlEshortgR(void *p);
   static void destruct_vectorlEshortgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<short>*)
   {
      vector<short> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<short>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<short>", -2, "vector.dll", 0,
                  typeid(vector<short>), DefineBehavior(ptr, ptr),
                  0, &vectorlEshortgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<short>) );
      instance.SetNew(&new_vectorlEshortgR);
      instance.SetNewArray(&newArray_vectorlEshortgR);
      instance.SetDelete(&delete_vectorlEshortgR);
      instance.SetDeleteArray(&deleteArray_vectorlEshortgR);
      instance.SetDestructor(&destruct_vectorlEshortgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<short> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<short>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEshortgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<short>*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEshortgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short> : new vector<short>;
   }
   static void *newArray_vectorlEshortgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<short>[nElements] : new vector<short>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEshortgR(void *p) {
      delete ((vector<short>*)p);
   }
   static void deleteArray_vectorlEshortgR(void *p) {
      delete [] ((vector<short>*)p);
   }
   static void destruct_vectorlEshortgR(void *p) {
      typedef vector<short> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<short>

namespace ROOT {
   void vectorlEvectorlEshortgRsPgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEvectorlEshortgRsPgR_Dictionary();
   static void *new_vectorlEvectorlEshortgRsPgR(void *p = 0);
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t size, void *p);
   static void delete_vectorlEvectorlEshortgRsPgR(void *p);
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p);
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const vector<vector<short> >*)
   {
      vector<vector<short> > *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<vector<short> >),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<vector<short> >", -2, "prec_stl/vector", 49,
                  typeid(vector<vector<short> >), DefineBehavior(ptr, ptr),
                  0, &vectorlEvectorlEshortgRsPgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<vector<short> >) );
      instance.SetNew(&new_vectorlEvectorlEshortgRsPgR);
      instance.SetNewArray(&newArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDelete(&delete_vectorlEvectorlEshortgRsPgR);
      instance.SetDeleteArray(&deleteArray_vectorlEvectorlEshortgRsPgR);
      instance.SetDestructor(&destruct_vectorlEvectorlEshortgRsPgR);
      instance.AdoptCollectionProxyInfo(TCollectionProxyInfo::Generate(TCollectionProxyInfo::Pushback< vector<vector<short> > >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<vector<short> >*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEvectorlEshortgRsPgR_Dictionary() {
      ::ROOT::GenerateInitInstanceLocal((const vector<vector<short> >*)0x0)->GetClass();
   }

} // end of namespace ROOT

namespace ROOT {
   // Wrappers around operator new
   static void *new_vectorlEvectorlEshortgRsPgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> > : new vector<vector<short> >;
   }
   static void *newArray_vectorlEvectorlEshortgRsPgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<vector<short> >[nElements] : new vector<vector<short> >[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEvectorlEshortgRsPgR(void *p) {
      delete ((vector<vector<short> >*)p);
   }
   static void deleteArray_vectorlEvectorlEshortgRsPgR(void *p) {
      delete [] ((vector<vector<short> >*)p);
   }
   static void destruct_vectorlEvectorlEshortgRsPgR(void *p) {
      typedef vector<vector<short> > current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class vector<vector<short> >

/********************************************************
* libsolgem_dict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablelibsolgem_dict();

extern "C" void G__set_cpp_environmentlibsolgem_dict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("src/TSolAnalyzer.h");
  G__add_compiledheader("src/TSolClusters.h");
  G__add_compiledheader("src/TSolEVIOFile.h");
  G__add_compiledheader("src/TSolGEMChamber.h");
  G__add_compiledheader("src/TSolGEMCluster.h");
  G__add_compiledheader("src/TSolGEMData.h");
  G__add_compiledheader("src/TSolGEMPlane.h");
  G__add_compiledheader("src/TSolGEMVStrip.h");
  G__add_compiledheader("src/TSolSimAux.h");
  G__add_compiledheader("src/TSolSimGEMDigitization.h");
  G__add_compiledheader("src/TSolWedge.h");
  G__add_compiledheader("src/TSolSpec.h");
  G__add_compiledheader("src/TSolSimEvent.h");
  G__add_compiledheader("src/TSolSimFile.h");
  G__add_compiledheader("src/TSolSimDecoder.h");
  G__add_compiledheader("src/TSolROOTFile.h");
  G__add_compiledheader("src/TGEMShape.h");
  G__add_compiledheader("src/TSolRect.h");
  G__cpp_reset_tagtablelibsolgem_dict();
}
#include <new>
extern "C" int G__cpp_dllrevlibsolgem_dict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* TSolAnalyzer */
static int G__libsolgem_dict_201_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolAnalyzer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolAnalyzer[n];
     } else {
       p = new((void*) gvp) TSolAnalyzer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolAnalyzer;
     } else {
       p = new((void*) gvp) TSolAnalyzer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolAnalyzer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolAnalyzer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolAnalyzer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolAnalyzer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolAnalyzer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolAnalyzer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolAnalyzer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolAnalyzer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolAnalyzer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_201_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolAnalyzer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolAnalyzer G__TTSolAnalyzer;
static int G__libsolgem_dict_201_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolAnalyzer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolAnalyzer*) (soff+(sizeof(TSolAnalyzer)*i)))->~G__TTSolAnalyzer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolAnalyzer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolAnalyzer*) (soff))->~G__TTSolAnalyzer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolGEMPlane */
static int G__libsolgem_dict_444_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMPlane[n];
     } else {
       p = new((void*) gvp) TSolGEMPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMPlane;
     } else {
       p = new((void*) gvp) TSolGEMPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolGEMPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) TSolGEMPlane(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (THaDetectorBase*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSolGEMPlane*) G__getstructoffset())->GetClusters());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolGEMPlane*) G__getstructoffset())->GetShape());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMPlane*) G__getstructoffset())->GetAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolGEMPlane*) G__getstructoffset())->GetNStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMPlane*) G__getstructoffset())->GetSPitch());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMPlane*) G__getstructoffset())->GetSAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMPlane*) G__getstructoffset())->GetSAngleComp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMPlane*) G__getstructoffset())->LabToPlane(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMPlane*) G__getstructoffset())->PlaneToStrip(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMPlane*) G__getstructoffset())->LabToStrip(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMPlane*) G__getstructoffset())->StripToLab(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMPlane*) G__getstructoffset())->StripToPlane(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMPlane*) G__getstructoffset())->PlaneToLab(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSolGEMPlane*) G__getstructoffset())->StripNumtoStrip((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSolGEMPlane*) G__getstructoffset())->StriptoProj((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSolGEMPlane*) G__getstructoffset())->StripNumtoProj((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMPlane*) G__getstructoffset())->GetStripLowerEdge((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMPlane*) G__getstructoffset())->GetStripUpperEdge((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolGEMPlane*) G__getstructoffset())->GetStripUnchecked((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolGEMPlane*) G__getstructoffset())->GetStripInRange((Double_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolGEMPlane*) G__getstructoffset())->GetStrip((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMPlane*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMPlane*) G__getstructoffset())->SetRotations();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolGEMPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolGEMPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolGEMPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolGEMPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_444_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolGEMPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolGEMPlane G__TTSolGEMPlane;
static int G__libsolgem_dict_444_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolGEMPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolGEMPlane*) (soff+(sizeof(TSolGEMPlane)*i)))->~G__TTSolGEMPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolGEMPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolGEMPlane*) (soff))->~G__TTSolGEMPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimGEMDigitization */
static int G__libsolgem_dict_445_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimGEMDigitization* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimGEMDigitization(*(TSolSpec*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSolSimGEMDigitization(*(TSolSpec*) libp->para[0].ref, (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimGEMDigitization(*(TSolSpec*) libp->para[0].ref);
     } else {
       p = new((void*) gvp) TSolSimGEMDigitization(*(TSolSpec*) libp->para[0].ref);
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitization));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimGEMDigitization*) G__getstructoffset())->Initialize(*(TSolSpec*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolSimGEMDigitization*) G__getstructoffset())->Digitize(*(TSolGEMData*) libp->para[0].ref, *(TSolSpec*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolSimGEMDigitization*) G__getstructoffset())->AdditiveDigitize(*(TSolGEMData*) libp->para[0].ref, *(TSolSpec*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimGEMDigitization*) G__getstructoffset())->NoDigitize(*(TSolGEMData*) libp->para[0].ref, *(TSolSpec*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSolDigitizedPlane& obj = ((const TSolSimGEMDigitization*) G__getstructoffset())->GetDigitizedPlane((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolSimGEMDigitization*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolSimGEMDigitization*) G__getstructoffset())->PrintCharges();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolSimGEMDigitization*) G__getstructoffset())->PrintSamples();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((TSolSimGEMDigitization*) G__getstructoffset())->GetGateWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimGEMDigitization*) G__getstructoffset())->InitTree(*(TSolSpec*) libp->para[0].ref, *(TString*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TSolSimGEMDigitization*) G__getstructoffset())->SetTreeEvent(*(TSolGEMData*) libp->para[0].ref, *(TSolEVIOFile*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TSolSimGEMDigitization*) G__getstructoffset())->SetTreeEvent(*(TSolGEMData*) libp->para[0].ref, *(TSolEVIOFile*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((TSolSimGEMDigitization*) G__getstructoffset())->SetTreeEvent(*(TSolGEMData*) libp->para[0].ref, *(TSolROOTFile*) libp->para[1].ref
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((TSolSimGEMDigitization*) G__getstructoffset())->SetTreeEvent(*(TSolGEMData*) libp->para[0].ref, *(TSolROOTFile*) libp->para[1].ref);
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((TSolSimGEMDigitization*) G__getstructoffset())->SetTreeHit((const UInt_t) G__int(libp->para[0]), *(TSolSpec*) libp->para[1].ref
, (TSolGEMVStrip* *const) G__int(libp->para[2]), *(TSolGEMData*) libp->para[3].ref
, (Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimGEMDigitization*) G__getstructoffset())->SetTreeStrips();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimGEMDigitization*) G__getstructoffset())->FillTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolSimGEMDigitization*) G__getstructoffset())->WriteTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolSimGEMDigitization*) G__getstructoffset())->CloseTree();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetType((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetTotADC((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetTime((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetCharge((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetADC((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetNChambers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetNPlanes((const UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetNSamples((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetNStrips((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((TSolSimGEMDigitization*) G__getstructoffset())->Threshold((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetNOverThr((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetIdxOverThr((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Short_t>& obj = ((const TSolSimGEMDigitization*) G__getstructoffset())->GetStripClusters((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TSolSimGEMDigitization*) G__getstructoffset())->IsMapSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSolSimGEMDigitization*) G__getstructoffset())->SetMapSector((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSolSimGEMDigitization*) G__getstructoffset())->SetMapSector();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolSimGEMDigitization::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimGEMDigitization::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSimGEMDigitization::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimGEMDigitization::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimGEMDigitization*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimGEMDigitization::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimGEMDigitization::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimGEMDigitization::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_445_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimGEMDigitization::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimGEMDigitization G__TTSolSimGEMDigitization;
static int G__libsolgem_dict_445_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimGEMDigitization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimGEMDigitization*) (soff+(sizeof(TSolSimGEMDigitization)*i)))->~G__TTSolSimGEMDigitization();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimGEMDigitization*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimGEMDigitization*) (soff))->~G__TTSolSimGEMDigitization();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Cluster_t */
// automatic default constructor
static int G__libsolgem_dict_446_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Cluster_t *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Cluster_t[n];
     } else {
       p = new((void*) gvp) Cluster_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Cluster_t;
     } else {
       p = new((void*) gvp) Cluster_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_Cluster_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_446_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Cluster_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Cluster_t(*(Cluster_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_Cluster_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Cluster_t G__TCluster_t;
static int G__libsolgem_dict_446_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Cluster_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Cluster_t*) (soff+(sizeof(Cluster_t)*i)))->~G__TCluster_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Cluster_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Cluster_t*) (soff))->~G__TCluster_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_446_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Cluster_t* dest = (Cluster_t*) G__getstructoffset();
   *dest = *(Cluster_t*) libp->para[0].ref;
   const Cluster_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolClusters */
static int G__libsolgem_dict_447_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolClusters* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolClusters[n];
     } else {
       p = new((void*) gvp) TSolClusters[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolClusters;
     } else {
       p = new((void*) gvp) TSolClusters;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolClusters*) G__getstructoffset())->Init();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolClusters*) G__getstructoffset())->AddRawHit((UInt_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolClusters*) G__getstructoffset())->SetPos((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolClusters*) G__getstructoffset())->SetSize((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolClusters*) G__getstructoffset())->SetCharge((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolClusters*) G__getstructoffset())->SetType((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolClusters*) G__getstructoffset())->SetResolution((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolClusters*) G__getstructoffset())->GetPos((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolClusters*) G__getstructoffset())->GetSize((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolClusters*) G__getstructoffset())->GetCharge((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolClusters*) G__getstructoffset())->GetType((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolClusters*) G__getstructoffset())->GetResolution((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolClusters*) G__getstructoffset())->MakeClusters((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolClusters*) G__getstructoffset())->ClusterPlane(*(TSolGEMPlane*) libp->para[0].ref, (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), *(TSolSimGEMDigitization*) libp->para[3].ref
, (const Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolClusters::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolClusters::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolClusters::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolClusters::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolClusters*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolClusters::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolClusters::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolClusters::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_447_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolClusters::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_447_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolClusters* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolClusters(*(TSolClusters*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolClusters G__TTSolClusters;
static int G__libsolgem_dict_447_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolClusters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolClusters*) (soff+(sizeof(TSolClusters)*i)))->~G__TTSolClusters();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolClusters*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolClusters*) (soff))->~G__TTSolClusters();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_447_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolClusters* dest = (TSolClusters*) G__getstructoffset();
   *dest = *(TSolClusters*) libp->para[0].ref;
   const TSolClusters& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* evio */

/* TSolGEMData */
static int G__libsolgem_dict_522_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMData* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMData((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSolGEMData((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSolGEMData[n];
       } else {
         p = new((void*) gvp) TSolGEMData[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSolGEMData;
       } else {
         p = new((void*) gvp) TSolGEMData;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->ClearEvent();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->InitEvent((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetNHit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetEvent((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetRun((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetSource((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetMomentum((UInt_t) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetHitEntrance((UInt_t) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetHitExit((UInt_t) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetHitReadout((UInt_t) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetVertex((UInt_t) G__int(libp->para[0]), *(TVector3*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetHitEnergy((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetHitTime((UInt_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetHitChamber((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetParticleID((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMData*) G__getstructoffset())->SetParticleType((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolGEMData*) G__getstructoffset())->GetNHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolGEMData*) G__getstructoffset())->GetEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolGEMData*) G__getstructoffset())->GetRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolGEMData*) G__getstructoffset())->GetSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TSolGEMData*) G__getstructoffset())->GetMomentum((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TSolGEMData*) G__getstructoffset())->GetHitEntrance((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TSolGEMData*) G__getstructoffset())->GetHitExit((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TSolGEMData*) G__getstructoffset())->GetHitReadout((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const TSolGEMData*) G__getstructoffset())->GetVertex((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMData*) G__getstructoffset())->GetHitEnergy((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMData*) G__getstructoffset())->GetHitTime((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolGEMData*) G__getstructoffset())->GetHitChamber((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolGEMData*) G__getstructoffset())->GetParticleID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolGEMData*) G__getstructoffset())->GetParticleType((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMData*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_522_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMData*) G__getstructoffset())->PrintHit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_522_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolGEMData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolGEMData(*(TSolGEMData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolGEMData G__TTSolGEMData;
static int G__libsolgem_dict_522_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolGEMData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolGEMData*) (soff+(sizeof(TSolGEMData)*i)))->~G__TTSolGEMData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolGEMData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolGEMData*) (soff))->~G__TTSolGEMData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_522_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMData* dest = (TSolGEMData*) G__getstructoffset();
   *dest = *(TSolGEMData*) libp->para[0].ref;
   const TSolGEMData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolGEMData::GEMHitData_t */
// automatic default constructor
static int G__libsolgem_dict_523_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMData::GEMHitData_t *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMData::GEMHitData_t[n];
     } else {
       p = new((void*) gvp) TSolGEMData::GEMHitData_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMData::GEMHitData_t;
     } else {
       p = new((void*) gvp) TSolGEMData::GEMHitData_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_523_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolGEMData::GEMHitData_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolGEMData::GEMHitData_t(*(TSolGEMData::GEMHitData_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolGEMData::GEMHitData_t G__TTSolGEMDatacLcLGEMHitData_t;
static int G__libsolgem_dict_523_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolGEMData::GEMHitData_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolGEMData::GEMHitData_t*) (soff+(sizeof(TSolGEMData::GEMHitData_t)*i)))->~G__TTSolGEMDatacLcLGEMHitData_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolGEMData::GEMHitData_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolGEMData::GEMHitData_t*) (soff))->~G__TTSolGEMDatacLcLGEMHitData_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_523_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMData::GEMHitData_t* dest = (TSolGEMData::GEMHitData_t*) G__getstructoffset();
   *dest = *(TSolGEMData::GEMHitData_t*) libp->para[0].ref;
   const TSolGEMData::GEMHitData_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* hitdata */
static int G__libsolgem_dict_528_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hitdata* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hitdata((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) hitdata((int) G__int(libp->para[0]), (unsigned int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new hitdata((int) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) hitdata((int) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_528_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const hitdata*) G__getstructoffset())->GetDetID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_528_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((hitdata*) G__getstructoffset())->SetData((unsigned int) G__int(libp->para[0]), (double) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_528_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const hitdata*) G__getstructoffset())->GetData((unsigned int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_528_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((hitdata*) G__getstructoffset())->GetData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_528_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const hitdata*) G__getstructoffset())->IsFilled());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_528_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   hitdata* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new hitdata(*(hitdata*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef hitdata G__Thitdata;
static int G__libsolgem_dict_528_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (hitdata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((hitdata*) (soff+(sizeof(hitdata)*i)))->~G__Thitdata();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (hitdata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((hitdata*) (soff))->~G__Thitdata();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_528_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   hitdata* dest = (hitdata*) G__getstructoffset();
   *dest = *(hitdata*) libp->para[0].ref;
   const hitdata& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* gendata */
static int G__libsolgem_dict_529_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gendata* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new gendata[n];
     } else {
       p = new((void*) gvp) gendata[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new gendata;
     } else {
       p = new((void*) gvp) gendata;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_gendata));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_529_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const gendata*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_529_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const gendata*) G__getstructoffset())->GetWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_529_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const gendata*) G__getstructoffset())->GetP();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_529_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const gendata*) G__getstructoffset())->GetV();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_529_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   gendata* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new gendata(*(gendata*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_gendata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef gendata G__Tgendata;
static int G__libsolgem_dict_529_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (gendata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((gendata*) (soff+(sizeof(gendata)*i)))->~G__Tgendata();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (gendata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((gendata*) (soff))->~G__Tgendata();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_529_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   gendata* dest = (gendata*) G__getstructoffset();
   *dest = *(gendata*) libp->para[0].ref;
   const gendata& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* ECdata */
static int G__libsolgem_dict_530_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ECdata* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new ECdata((int) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) ECdata((int) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_530_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ECdata*) G__getstructoffset())->GetPID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_530_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const ECdata*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_530_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ECdata*) G__getstructoffset())->GetPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_530_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3* pobj;
         const TVector3 xobj = ((const ECdata*) G__getstructoffset())->GetPos();
         pobj = new TVector3(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_530_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const ECdata*) G__getstructoffset())->GetTID());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_530_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   ECdata* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new ECdata(*(ECdata*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef ECdata G__TECdata;
static int G__libsolgem_dict_530_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (ECdata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((ECdata*) (soff+(sizeof(ECdata)*i)))->~G__TECdata();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (ECdata*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((ECdata*) (soff))->~G__TECdata();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_530_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   ECdata* dest = (ECdata*) G__getstructoffset();
   *dest = *(ECdata*) libp->para[0].ref;
   const ECdata& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolEVIOFile */
static int G__libsolgem_dict_531_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolEVIOFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolEVIOFile[n];
     } else {
       p = new((void*) gvp) TSolEVIOFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolEVIOFile;
     } else {
       p = new((void*) gvp) TSolEVIOFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolEVIOFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolEVIOFile((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSolEVIOFile((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolEVIOFile*) G__getstructoffset())->SetFilename((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolEVIOFile*) G__getstructoffset())->SetSource((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolEVIOFile*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolEVIOFile*) G__getstructoffset())->Open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolEVIOFile*) G__getstructoffset())->Close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSolEVIOFile*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolEVIOFile*) G__getstructoffset())->GetSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolEVIOFile*) G__getstructoffset())->ReadNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolEVIOFile*) G__getstructoffset())->ExtractDetIDs((evio::evioDOMNodeList*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolEVIOFile*) G__getstructoffset())->BuildData((evio::evioDOMNodeList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolEVIOFile*) G__getstructoffset())->BuildGenerated((evio::evioDOMNodeList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolEVIOFile*) G__getstructoffset())->GetNData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolEVIOFile*) G__getstructoffset())->GetNGen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolEVIOFile*) G__getstructoffset())->GetEvNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolEVIOFile*) G__getstructoffset())->GetHitData((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolEVIOFile*) G__getstructoffset())->GetGenData((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSolEVIOFile*) G__getstructoffset())->GetGEMData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_531_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolEVIOFile*) G__getstructoffset())->GetGEMData((TSolGEMData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_531_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolEVIOFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolEVIOFile(*(TSolEVIOFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolEVIOFile G__TTSolEVIOFile;
static int G__libsolgem_dict_531_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolEVIOFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolEVIOFile*) (soff+(sizeof(TSolEVIOFile)*i)))->~G__TTSolEVIOFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolEVIOFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolEVIOFile*) (soff))->~G__TTSolEVIOFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_531_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolEVIOFile* dest = (TSolEVIOFile*) G__getstructoffset();
   *dest = *(TSolEVIOFile*) libp->para[0].ref;
   const TSolEVIOFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TGEMShape */
static int G__libsolgem_dict_568_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEMShape*) G__getstructoffset())->SetGeometry((TGEMShape*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_568_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEMShape*) G__getstructoffset())->SetGeometry((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_568_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const TGEMShape*) G__getstructoffset())->Contains((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_568_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TGEMShape*) G__getstructoffset())->LabToWedge(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_568_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TGEMShape*) G__getstructoffset())->WedgeToLab(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_568_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TGEMShape*) G__getstructoffset())->GetOrigin();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_568_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TGEMShape*) G__getstructoffset())->GetSize();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_568_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TGEMShape*) G__getstructoffset())->GetAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_568_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TGEMShape*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TGEMShape G__TTGEMShape;
static int G__libsolgem_dict_568_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TGEMShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TGEMShape*) (soff+(sizeof(TGEMShape)*i)))->~G__TTGEMShape();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TGEMShape*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TGEMShape*) (soff))->~G__TTGEMShape();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_568_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TGEMShape* dest = (TGEMShape*) G__getstructoffset();
   *dest = *(TGEMShape*) libp->para[0].ref;
   const TGEMShape& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolWedge */
static int G__libsolgem_dict_569_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolWedge*) G__getstructoffset())->GetR0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_569_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolWedge*) G__getstructoffset())->GetR1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_569_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolWedge*) G__getstructoffset())->GetPhi0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_569_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolWedge*) G__getstructoffset())->GetDPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_569_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TSolWedge*) G__getstructoffset())->Bounds();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_569_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolWedge*) G__getstructoffset())->SetGeometry((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolWedge G__TTSolWedge;
static int G__libsolgem_dict_569_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolWedge*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolWedge*) (soff+(sizeof(TSolWedge)*i)))->~G__TTSolWedge();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolWedge*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolWedge*) (soff))->~G__TTSolWedge();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_569_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolWedge* dest = (TSolWedge*) G__getstructoffset();
   *dest = *(TSolWedge*) libp->para[0].ref;
   const TSolWedge& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* NSolWedge */
static int G__libsolgem_dict_570_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) NSolWedge::CmpAng((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolRect */
static int G__libsolgem_dict_571_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolRect*) G__getstructoffset())->GetX1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_571_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolRect*) G__getstructoffset())->GetX2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_571_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolRect*) G__getstructoffset())->GetY1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_571_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolRect*) G__getstructoffset())->GetY2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_571_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Double_t>* pobj;
         const vector<Double_t> xobj = ((const TSolRect*) G__getstructoffset())->Bounds();
         pobj = new vector<Double_t>(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_571_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolRect*) G__getstructoffset())->SetGeometry((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolRect G__TTSolRect;
static int G__libsolgem_dict_571_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolRect*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolRect*) (soff+(sizeof(TSolRect)*i)))->~G__TTSolRect();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolRect*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolRect*) (soff))->~G__TTSolRect();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_571_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolRect* dest = (TSolRect*) G__getstructoffset();
   *dest = *(TSolRect*) libp->para[0].ref;
   const TSolRect& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolGEMChamber */
static int G__libsolgem_dict_572_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMChamber* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolGEMChamber((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSolGEMChamber((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMChamber* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMChamber[n];
     } else {
       p = new((void*) gvp) TSolGEMChamber[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMChamber;
     } else {
       p = new((void*) gvp) TSolGEMChamber;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMChamber*) G__getstructoffset())->GetLowerEdgeX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMChamber*) G__getstructoffset())->GetLowerEdgeY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMChamber*) G__getstructoffset())->GetUpperEdgeX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMChamber*) G__getstructoffset())->GetUpperEdgeY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolGEMChamber*) G__getstructoffset())->GetChamberType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolGEMChamber*) G__getstructoffset())->GetShape());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMChamber*) G__getstructoffset())->GetAngle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMChamber*) G__getstructoffset())->LabToPlane(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolGEMChamber*) G__getstructoffset())->PlaneToLab(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolGEMChamber*) G__getstructoffset())->GetNPlanes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSolGEMPlane& obj = ((const TSolGEMChamber*) G__getstructoffset())->GetPlane((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolGEMChamber*) G__getstructoffset())->InitPlane((const UInt_t) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((TSolGEMChamber*) G__getstructoffset())->Print((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((TSolGEMChamber*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolGEMChamber::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMChamber::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolGEMChamber::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolGEMChamber::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMChamber*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMChamber::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolGEMChamber::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMChamber::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_572_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolGEMChamber::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolGEMChamber G__TTSolGEMChamber;
static int G__libsolgem_dict_572_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolGEMChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolGEMChamber*) (soff+(sizeof(TSolGEMChamber)*i)))->~G__TTSolGEMChamber();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolGEMChamber*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolGEMChamber*) (soff))->~G__TTSolGEMChamber();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolGEMCluster */
static int G__libsolgem_dict_573_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMCluster[n];
     } else {
       p = new((void*) gvp) TSolGEMCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMCluster;
     } else {
       p = new((void*) gvp) TSolGEMCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMCluster*) G__getstructoffset())->GetPos());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMCluster*) G__getstructoffset())->GetE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolGEMCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolGEMCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolGEMCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolGEMCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolGEMCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_573_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolGEMCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_573_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolGEMCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolGEMCluster(*(TSolGEMCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolGEMCluster G__TTSolGEMCluster;
static int G__libsolgem_dict_573_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolGEMCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolGEMCluster*) (soff+(sizeof(TSolGEMCluster)*i)))->~G__TTSolGEMCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolGEMCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolGEMCluster*) (soff))->~G__TTSolGEMCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_573_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMCluster* dest = (TSolGEMCluster*) G__getstructoffset();
   *dest = *(TSolGEMCluster*) libp->para[0].ref;
   const TSolGEMCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolGEMVStrip */
static int G__libsolgem_dict_579_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMVStrip* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMVStrip((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSolGEMVStrip((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolGEMVStrip((Short_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSolGEMVStrip((Short_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSolGEMVStrip[n];
       } else {
         p = new((void*) gvp) TSolGEMVStrip[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new TSolGEMVStrip;
       } else {
         p = new((void*) gvp) TSolGEMVStrip;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMVStrip));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMVStrip*) G__getstructoffset())->AddStripAt((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMVStrip*) G__getstructoffset())->AddChargeAt((Double_t) G__double(libp->para[0]), (Short_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMVStrip*) G__getstructoffset())->AddSampleAt((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Short_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMVStrip*) G__getstructoffset())->SetTime((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMVStrip*) G__getstructoffset())->SetHitCharge((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMVStrip*) G__getstructoffset())->SetSize((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSolGEMVStrip*) G__getstructoffset())->GetSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSolGEMVStrip*) G__getstructoffset())->GetIdx((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSolGEMVStrip*) G__getstructoffset())->GetADC((Short_t) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMVStrip*) G__getstructoffset())->GetCharge((Short_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSolGEMVStrip*) G__getstructoffset())->GetTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolGEMVStrip*) G__getstructoffset())->GetHitCharge());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_579_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolGEMVStrip*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_579_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolGEMVStrip* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolGEMVStrip(*(TSolGEMVStrip*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMVStrip));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolGEMVStrip G__TTSolGEMVStrip;
static int G__libsolgem_dict_579_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolGEMVStrip*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolGEMVStrip*) (soff+(sizeof(TSolGEMVStrip)*i)))->~G__TTSolGEMVStrip();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolGEMVStrip*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolGEMVStrip*) (soff))->~G__TTSolGEMVStrip();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_579_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolGEMVStrip* dest = (TSolGEMVStrip*) G__getstructoffset();
   *dest = *(TSolGEMVStrip*) libp->para[0].ref;
   const TSolGEMVStrip& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimAux */
static int G__libsolgem_dict_580_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSimAux::ADCConvert((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_580_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSolSimAux::PulseShape((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_580_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSolSimAux::PulseShape((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_580_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSolSimAux::Gaus2D((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_580_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSolSimAux::MultiGaus2D((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_580_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSolSimAux::SimpleCircle((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_580_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSolSimAux::MultiCircle((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSpec */
static int G__libsolgem_dict_584_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSpec* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolSpec((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) TSolSpec((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolSpec*) G__getstructoffset())->AddGEM((TSolGEMChamber*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolSpec*) G__getstructoffset())->GetNChambers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TSolGEMChamber& obj = ((const TSolSpec*) G__getstructoffset())->GetChamber((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const TSolSpec*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolSpec::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSpec::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSpec::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSpec::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSpec*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSpec::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSpec::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSpec::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_584_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSpec::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSpec G__TTSolSpec;
static int G__libsolgem_dict_584_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSpec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSpec*) (soff+(sizeof(TSolSpec)*i)))->~G__TTSolSpec();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSpec*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSpec*) (soff))->~G__TTSolSpec();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimEvent */
static int G__libsolgem_dict_585_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimEvent[n];
     } else {
       p = new((void*) gvp) TSolSimEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimEvent;
     } else {
       p = new((void*) gvp) TSolSimEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolSimEvent((UInt_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSolSimEvent((UInt_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSolSimEvent*) G__getstructoffset())->AddTrack((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TVector3*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimEvent*) G__getstructoffset())->GetNclust());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimEvent*) G__getstructoffset())->GetNstrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimEvent*) G__getstructoffset())->GetNECHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimEvent*) G__getstructoffset())->GetNtracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolSimEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSimEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_585_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_585_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimEvent(*(TSolSimEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimEvent G__TTSolSimEvent;
static int G__libsolgem_dict_585_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimEvent*) (soff+(sizeof(TSolSimEvent)*i)))->~G__TTSolSimEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimEvent*) (soff))->~G__TTSolSimEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_585_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent* dest = (TSolSimEvent*) G__getstructoffset();
   *dest = *(TSolSimEvent*) libp->para[0].ref;
   const TSolSimEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolROOTFile */
static int G__libsolgem_dict_586_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolROOTFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolROOTFile[n];
     } else {
       p = new((void*) gvp) TSolROOTFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolROOTFile;
     } else {
       p = new((void*) gvp) TSolROOTFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolROOTFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolROOTFile((const char*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) TSolROOTFile((const char*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->SetFilename((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->SetSource((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolROOTFile*) G__getstructoffset())->Open());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->SetBranchAddress();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolROOTFile*) G__getstructoffset())->Close());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSolROOTFile*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolROOTFile*) G__getstructoffset())->GetSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolROOTFile*) G__getstructoffset())->ReadNextEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->ExtractDetIDs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->BuildData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->BuildECData();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->BuildGenerated();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->ClearVectors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->DeleteVectors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((TSolROOTFile*) G__getstructoffset())->CalcHitChamber((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolROOTFile*) G__getstructoffset())->GetNData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolROOTFile*) G__getstructoffset())->GetNGen());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolROOTFile*) G__getstructoffset())->GetNEC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolROOTFile*) G__getstructoffset())->GetFillBitsEC());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolROOTFile*) G__getstructoffset())->GetFillBitsGEM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolROOTFile*) G__getstructoffset())->GetECEDep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolROOTFile*) G__getstructoffset())->GetEvNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const TSolROOTFile*) G__getstructoffset())->GetMaxEvNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolROOTFile*) G__getstructoffset())->GetHitData((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolROOTFile*) G__getstructoffset())->GetGenData((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolROOTFile*) G__getstructoffset())->GetECData((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((TSolROOTFile*) G__getstructoffset())->GetGEMData());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_586_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolROOTFile*) G__getstructoffset())->GetGEMData((TSolGEMData*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_586_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolROOTFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolROOTFile(*(TSolROOTFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolROOTFile G__TTSolROOTFile;
static int G__libsolgem_dict_586_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolROOTFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolROOTFile*) (soff+(sizeof(TSolROOTFile)*i)))->~G__TTSolROOTFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolROOTFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolROOTFile*) (soff))->~G__TTSolROOTFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_586_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolROOTFile* dest = (TSolROOTFile*) G__getstructoffset();
   *dest = *(TSolROOTFile*) libp->para[0].ref;
   const TSolROOTFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolDigitizedPlane */
static int G__libsolgem_dict_587_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolDigitizedPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolDigitizedPlane(
(UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) TSolDigitizedPlane(
(UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolDigitizedPlane((UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSolDigitizedPlane((UShort_t) G__int(libp->para[0]), (UShort_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolDigitizedPlane((UShort_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSolDigitizedPlane((UShort_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolDigitizedPlane*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolDigitizedPlane*) G__getstructoffset())->Cumulate((TSolGEMVStrip*) G__int(libp->para[0]), (Short_t) G__int(libp->para[1])
, (Short_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSolDigitizedPlane*) G__getstructoffset())->GetType((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolDigitizedPlane*) G__getstructoffset())->GetTotADC((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSolDigitizedPlane*) G__getstructoffset())->GetTime((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const TSolDigitizedPlane*) G__getstructoffset())->GetCharge((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolDigitizedPlane*) G__getstructoffset())->GetADC((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSolDigitizedPlane*) G__getstructoffset())->GetNSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSolDigitizedPlane*) G__getstructoffset())->GetNStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((TSolDigitizedPlane*) G__getstructoffset())->Threshold((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 114, (long) ((const TSolDigitizedPlane*) G__getstructoffset())->GetNOverThr());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((const TSolDigitizedPlane*) G__getstructoffset())->GetIdxOverThr((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_587_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const vector<Short_t>& obj = ((const TSolDigitizedPlane*) G__getstructoffset())->GetStripClusters((UInt_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_587_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolDigitizedPlane* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolDigitizedPlane(*(TSolDigitizedPlane*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolDigitizedPlane G__TTSolDigitizedPlane;
static int G__libsolgem_dict_587_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolDigitizedPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolDigitizedPlane*) (soff+(sizeof(TSolDigitizedPlane)*i)))->~G__TTSolDigitizedPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolDigitizedPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolDigitizedPlane*) (soff))->~G__TTSolDigitizedPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_587_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolDigitizedPlane* dest = (TSolDigitizedPlane*) G__getstructoffset();
   *dest = *(TSolDigitizedPlane*) libp->para[0].ref;
   const TSolDigitizedPlane& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimGEMDigitization::IonPar_t */
// automatic default constructor
static int G__libsolgem_dict_592_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimGEMDigitization::IonPar_t *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimGEMDigitization::IonPar_t[n];
     } else {
       p = new((void*) gvp) TSolSimGEMDigitization::IonPar_t[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimGEMDigitization::IonPar_t;
     } else {
       p = new((void*) gvp) TSolSimGEMDigitization::IonPar_t;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_592_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimGEMDigitization::IonPar_t* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimGEMDigitization::IonPar_t(*(TSolSimGEMDigitization::IonPar_t*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimGEMDigitization::IonPar_t G__TTSolSimGEMDigitizationcLcLIonPar_t;
static int G__libsolgem_dict_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimGEMDigitization::IonPar_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimGEMDigitization::IonPar_t*) (soff+(sizeof(TSolSimGEMDigitization::IonPar_t)*i)))->~G__TTSolSimGEMDigitizationcLcLIonPar_t();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimGEMDigitization::IonPar_t*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimGEMDigitization::IonPar_t*) (soff))->~G__TTSolSimGEMDigitizationcLcLIonPar_t();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_592_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimGEMDigitization::IonPar_t* dest = (TSolSimGEMDigitization::IonPar_t*) G__getstructoffset();
   *dest = *(TSolSimGEMDigitization::IonPar_t*) libp->para[0].ref;
   const TSolSimGEMDigitization::IonPar_t& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimTrack */
static int G__libsolgem_dict_652_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolSimTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TVector3*) libp->para[3].ref);
   } else {
     p = new((void*) gvp) TSolSimTrack(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(TVector3*) libp->para[2].ref, *(TVector3*) libp->para[3].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimTrack[n];
     } else {
       p = new((void*) gvp) TSolSimTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimTrack;
     } else {
       p = new((void*) gvp) TSolSimTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimTrack*) G__getstructoffset())->MCFitR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimTrack*) G__getstructoffset())->MCFitPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimTrack*) G__getstructoffset())->MCFitThetaDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimTrack*) G__getstructoffset())->MCFitPhiDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimTrack*) G__getstructoffset())->RcFitR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimTrack*) G__getstructoffset())->RcFitPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimTrack*) G__getstructoffset())->RcFitThetaDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimTrack*) G__getstructoffset())->RcFitPhiDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolSimTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSimTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_652_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_652_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimTrack(*(TSolSimTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimTrack G__TTSolSimTrack;
static int G__libsolgem_dict_652_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimTrack*) (soff+(sizeof(TSolSimTrack)*i)))->~G__TTSolSimTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimTrack*) (soff))->~G__TTSolSimTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_652_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimTrack* dest = (TSolSimTrack*) G__getstructoffset();
   *dest = *(TSolSimTrack*) libp->para[0].ref;
   const TSolSimTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimEvent::GEMCluster */
// automatic default constructor
static int G__libsolgem_dict_653_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent::GEMCluster *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimEvent::GEMCluster[n];
     } else {
       p = new((void*) gvp) TSolSimEvent::GEMCluster[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimEvent::GEMCluster;
     } else {
       p = new((void*) gvp) TSolSimEvent::GEMCluster;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_653_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimEvent::GEMCluster* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimEvent::GEMCluster(*(TSolSimEvent::GEMCluster*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimEvent::GEMCluster G__TTSolSimEventcLcLGEMCluster;
static int G__libsolgem_dict_653_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimEvent::GEMCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimEvent::GEMCluster*) (soff+(sizeof(TSolSimEvent::GEMCluster)*i)))->~G__TTSolSimEventcLcLGEMCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimEvent::GEMCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimEvent::GEMCluster*) (soff))->~G__TTSolSimEventcLcLGEMCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_653_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent::GEMCluster* dest = (TSolSimEvent::GEMCluster*) G__getstructoffset();
   *dest = *(TSolSimEvent::GEMCluster*) libp->para[0].ref;
   const TSolSimEvent::GEMCluster& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimEvent::DigiGEMStrip */
// automatic default constructor
static int G__libsolgem_dict_658_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent::DigiGEMStrip *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimEvent::DigiGEMStrip[n];
     } else {
       p = new((void*) gvp) TSolSimEvent::DigiGEMStrip[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimEvent::DigiGEMStrip;
     } else {
       p = new((void*) gvp) TSolSimEvent::DigiGEMStrip;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_658_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimEvent::DigiGEMStrip* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimEvent::DigiGEMStrip(*(TSolSimEvent::DigiGEMStrip*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimEvent::DigiGEMStrip G__TTSolSimEventcLcLDigiGEMStrip;
static int G__libsolgem_dict_658_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimEvent::DigiGEMStrip*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimEvent::DigiGEMStrip*) (soff+(sizeof(TSolSimEvent::DigiGEMStrip)*i)))->~G__TTSolSimEventcLcLDigiGEMStrip();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimEvent::DigiGEMStrip*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimEvent::DigiGEMStrip*) (soff))->~G__TTSolSimEventcLcLDigiGEMStrip();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_658_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent::DigiGEMStrip* dest = (TSolSimEvent::DigiGEMStrip*) G__getstructoffset();
   *dest = *(TSolSimEvent::DigiGEMStrip*) libp->para[0].ref;
   const TSolSimEvent::DigiGEMStrip& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimEvent::ECHitData */
// automatic default constructor
static int G__libsolgem_dict_663_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent::ECHitData *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimEvent::ECHitData[n];
     } else {
       p = new((void*) gvp) TSolSimEvent::ECHitData[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimEvent::ECHitData;
     } else {
       p = new((void*) gvp) TSolSimEvent::ECHitData;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLECHitData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_663_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimEvent::ECHitData* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimEvent::ECHitData(*(TSolSimEvent::ECHitData*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLECHitData));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimEvent::ECHitData G__TTSolSimEventcLcLECHitData;
static int G__libsolgem_dict_663_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimEvent::ECHitData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimEvent::ECHitData*) (soff+(sizeof(TSolSimEvent::ECHitData)*i)))->~G__TTSolSimEventcLcLECHitData();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimEvent::ECHitData*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimEvent::ECHitData*) (soff))->~G__TTSolSimEventcLcLECHitData();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_663_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimEvent::ECHitData* dest = (TSolSimEvent::ECHitData*) G__getstructoffset();
   *dest = *(TSolSimEvent::ECHitData*) libp->para[0].ref;
   const TSolSimEvent::ECHitData& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimFile */
static int G__libsolgem_dict_672_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) TSolSimFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) TSolSimFile((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolSimFile(*(TSolSimFile*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TSolSimFile(*(TSolSimFile*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimFile[n];
     } else {
       p = new((void*) gvp) TSolSimFile[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimFile;
     } else {
       p = new((void*) gvp) TSolSimFile;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const TSolSimFile*) G__getstructoffset())->GetFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimFile*) G__getstructoffset())->SetFileName((const char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolSimFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSimFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_672_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimFile G__TTSolSimFile;
static int G__libsolgem_dict_672_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimFile*) (soff+(sizeof(TSolSimFile)*i)))->~G__TTSolSimFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimFile*) (soff))->~G__TTSolSimFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_672_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimFile* dest = (TSolSimFile*) G__getstructoffset();
   *dest = *(TSolSimFile*) libp->para[0].ref;
   const TSolSimFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimGEMHit */
static int G__libsolgem_dict_673_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimGEMHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimGEMHit[n];
     } else {
       p = new((void*) gvp) TSolSimGEMHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimGEMHit;
     } else {
       p = new((void*) gvp) TSolSimGEMHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimGEMHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolSimGEMHit(*(TSolSimEvent::GEMCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TSolSimGEMHit(*(TSolSimEvent::GEMCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimGEMHit*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimGEMHit*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimGEMHit*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimGEMHit*) G__getstructoffset())->Z());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimGEMHit*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimGEMHit*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimGEMHit*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolSimGEMHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimGEMHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSimGEMHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimGEMHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimGEMHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimGEMHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimGEMHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimGEMHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_673_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimGEMHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_673_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimGEMHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimGEMHit(*(TSolSimGEMHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimGEMHit G__TTSolSimGEMHit;
static int G__libsolgem_dict_673_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimGEMHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimGEMHit*) (soff+(sizeof(TSolSimGEMHit)*i)))->~G__TTSolSimGEMHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimGEMHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimGEMHit*) (soff))->~G__TTSolSimGEMHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_673_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimGEMHit* dest = (TSolSimGEMHit*) G__getstructoffset();
   *dest = *(TSolSimGEMHit*) libp->para[0].ref;
   const TSolSimGEMHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimBackTrack */
static int G__libsolgem_dict_674_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimBackTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimBackTrack[n];
     } else {
       p = new((void*) gvp) TSolSimBackTrack[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimBackTrack;
     } else {
       p = new((void*) gvp) TSolSimBackTrack;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimBackTrack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new TSolSimBackTrack(*(TSolSimEvent::GEMCluster*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) TSolSimBackTrack(*(TSolSimEvent::GEMCluster*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->X());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->Y());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->P());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->ThetaT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->PhiT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->R());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->Theta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->Phi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->ThetaDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->PhiDir());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->HX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const TSolSimBackTrack*) G__getstructoffset())->HY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimBackTrack*) G__getstructoffset())->GetType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimBackTrack*) G__getstructoffset())->GetSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimBackTrack*) G__getstructoffset())->GetHitBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimBackTrack*) G__getstructoffset())->GetUfailBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimBackTrack*) G__getstructoffset())->GetVfailBits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimBackTrack*) G__getstructoffset())->SetHitBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimBackTrack*) G__getstructoffset())->SetHitBits((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimBackTrack*) G__getstructoffset())->SetUfailBits((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimBackTrack*) G__getstructoffset())->SetVfailBits((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((TSolSimBackTrack*) G__getstructoffset())->TestHitBit((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((TSolSimBackTrack*) G__getstructoffset())->Update(*(TSolSimEvent::GEMCluster*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolSimBackTrack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimBackTrack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSimBackTrack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimBackTrack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimBackTrack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimBackTrack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimBackTrack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimBackTrack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_674_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimBackTrack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_674_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimBackTrack* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimBackTrack(*(TSolSimBackTrack*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimBackTrack G__TTSolSimBackTrack;
static int G__libsolgem_dict_674_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimBackTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimBackTrack*) (soff+(sizeof(TSolSimBackTrack)*i)))->~G__TTSolSimBackTrack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimBackTrack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimBackTrack*) (soff))->~G__TTSolSimBackTrack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__libsolgem_dict_674_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimBackTrack* dest = (TSolSimBackTrack*) G__getstructoffset();
   *dest = *(TSolSimBackTrack*) libp->para[0].ref;
   const TSolSimBackTrack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* TSolSimDecoder */
static int G__libsolgem_dict_675_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   TSolSimDecoder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimDecoder[n];
     } else {
       p = new((void*) gvp) TSolSimDecoder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new TSolSimDecoder;
     } else {
       p = new((void*) gvp) TSolSimDecoder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const TSolSimDecoder*) G__getstructoffset())->GetNBackTracks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolSimDecoder*) G__getstructoffset())->GetBackTrack((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const TSolSimDecoder*) G__getstructoffset())->GetGEMHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimDecoder::GetMAXSLOT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimDecoder::SetZ0((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) TSolSimDecoder::GetZ0());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      TSolSimDecoder::EmulateCalorimeter((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      TSolSimDecoder::EmulateCalorimeter();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimDecoder::SetCaloZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimDecoder::SetCaloRes((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) TSolSimDecoder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimDecoder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) TSolSimDecoder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      TSolSimDecoder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((TSolSimDecoder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimDecoder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimDecoder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) TSolSimDecoder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__libsolgem_dict_675_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) TSolSimDecoder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__libsolgem_dict_675_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   TSolSimDecoder* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new TSolSimDecoder(*(TSolSimDecoder*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef TSolSimDecoder G__TTSolSimDecoder;
static int G__libsolgem_dict_675_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (TSolSimDecoder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((TSolSimDecoder*) (soff+(sizeof(TSolSimDecoder)*i)))->~G__TTSolSimDecoder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (TSolSimDecoder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((TSolSimDecoder*) (soff))->~G__TTSolSimDecoder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* TSolAnalyzer */

/* TSolGEMPlane */

/* TSolSimGEMDigitization */

/* Cluster_t */

/* TSolClusters */

/* evio */

/* TSolGEMData */

/* TSolGEMData::GEMHitData_t */

/* hitdata */

/* gendata */

/* ECdata */

/* TSolEVIOFile */

/* TGEMShape */

/* TSolWedge */

/* NSolWedge */

/* TSolRect */

/* TSolGEMChamber */

/* TSolGEMCluster */

/* TSolGEMVStrip */

/* TSolSimAux */

/* TSolSpec */

/* TSolSimEvent */

/* TSolROOTFile */

/* TSolDigitizedPlane */

/* TSolSimGEMDigitization::IonPar_t */

/* TSolSimTrack */

/* TSolSimEvent::GEMCluster */

/* TSolSimEvent::DigiGEMStrip */

/* TSolSimEvent::ECHitData */

/* TSolSimFile */

/* TSolSimGEMHit */

/* TSolSimBackTrack */

/* TSolSimDecoder */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfunclibsolgem_dict {
 public:
  G__Sizep2memfunclibsolgem_dict(): p(&G__Sizep2memfunclibsolgem_dict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfunclibsolgem_dict::*p)();
};

size_t G__get_sizep2memfunclibsolgem_dict()
{
  G__Sizep2memfunclibsolgem_dict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancelibsolgem_dict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolAnalyzer))) {
     TSolAnalyzer *G__Lderived;
     G__Lderived=(TSolAnalyzer*)0x1000;
     {
       THaAnalyzer *G__Lpbase=(THaAnalyzer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolAnalyzer),G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalyzer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolAnalyzer),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane))) {
     TSolGEMPlane *G__Lderived;
     G__Lderived=(TSolGEMPlane*)0x1000;
     {
       THaSubDetector *G__Lpbase=(THaSubDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane),G__get_linked_tagnum(&G__libsolgem_dictLN_THaSubDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane),G__get_linked_tagnum(&G__libsolgem_dictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane),G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitization))) {
     TSolSimGEMDigitization *G__Lderived;
     G__Lderived=(TSolSimGEMDigitization*)0x1000;
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitization),G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitization),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitization),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters))) {
     TSolClusters *G__Lderived;
     G__Lderived=(TSolClusters*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_gendata))) {
     gendata *G__Lderived;
     G__Lderived=(gendata*)0x1000;
     {
       hitdata *G__Lpbase=(hitdata*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_gendata),G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata))) {
     ECdata *G__Lderived;
     G__Lderived=(ECdata*)0x1000;
     {
       hitdata *G__Lpbase=(hitdata*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata),G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject))) {
     THaAnalysisObject *G__Lderived;
     G__Lderived=(THaAnalysisObject*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_THaDetectorBase))) {
     THaDetectorBase *G__Lderived;
     G__Lderived=(THaDetectorBase*)0x1000;
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaDetectorBase),G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaDetectorBase),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaDetectorBase),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolWedge))) {
     TSolWedge *G__Lderived;
     G__Lderived=(TSolWedge*)0x1000;
     {
       TGEMShape *G__Lpbase=(TGEMShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolWedge),G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolRect))) {
     TSolRect *G__Lderived;
     G__Lderived=(TSolRect*)0x1000;
     {
       TGEMShape *G__Lpbase=(TGEMShape*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolRect),G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber))) {
     TSolGEMChamber *G__Lderived;
     G__Lderived=(TSolGEMChamber*)0x1000;
     {
       THaDetector *G__Lpbase=(THaDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber),G__get_linked_tagnum(&G__libsolgem_dictLN_THaDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber),G__get_linked_tagnum(&G__libsolgem_dictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber),G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster))) {
     TSolGEMCluster *G__Lderived;
     G__Lderived=(TSolGEMCluster*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSubDetector))) {
     THaSubDetector *G__Lderived;
     G__Lderived=(THaSubDetector*)0x1000;
     {
       THaDetectorBase *G__Lpbase=(THaDetectorBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSubDetector),G__get_linked_tagnum(&G__libsolgem_dictLN_THaDetectorBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSubDetector),G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSubDetector),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSubDetector),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec))) {
     TSolSpec *G__Lderived;
     G__Lderived=(TSolSpec*)0x1000;
     {
       THaSpectrometer *G__Lpbase=(THaSpectrometer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec),G__get_linked_tagnum(&G__libsolgem_dictLN_THaSpectrometer),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec),G__get_linked_tagnum(&G__libsolgem_dictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec),G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaTrackingModule *G__Lpbase=(THaTrackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec),G__get_linked_tagnum(&G__libsolgem_dictLN_THaTrackingModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaVertexModule *G__Lpbase=(THaVertexModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec),G__get_linked_tagnum(&G__libsolgem_dictLN_THaVertexModule),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent))) {
     TSolSimEvent *G__Lderived;
     G__Lderived=(TSolSimEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSpectrometer))) {
     THaSpectrometer *G__Lderived;
     G__Lderived=(THaSpectrometer*)0x1000;
     {
       THaApparatus *G__Lpbase=(THaApparatus*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSpectrometer),G__get_linked_tagnum(&G__libsolgem_dictLN_THaApparatus),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaAnalysisObject *G__Lpbase=(THaAnalysisObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSpectrometer),G__get_linked_tagnum(&G__libsolgem_dictLN_THaAnalysisObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSpectrometer),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSpectrometer),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       THaTrackingModule *G__Lpbase=(THaTrackingModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSpectrometer),G__get_linked_tagnum(&G__libsolgem_dictLN_THaTrackingModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaVertexModule *G__Lpbase=(THaVertexModule*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_THaSpectrometer),G__get_linked_tagnum(&G__libsolgem_dictLN_THaVertexModule),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack))) {
     TSolSimTrack *G__Lderived;
     G__Lderived=(TSolSimTrack*)0x1000;
     {
       Podd::MCTrack *G__Lpbase=(Podd::MCTrack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack),G__get_linked_tagnum(&G__libsolgem_dictLN_PoddcLcLMCTrack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile))) {
     TSolSimFile *G__Lderived;
     G__Lderived=(TSolSimFile*)0x1000;
     {
       THaRunBase *G__Lpbase=(THaRunBase*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile),G__get_linked_tagnum(&G__libsolgem_dictLN_THaRunBase),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile),G__get_linked_tagnum(&G__libsolgem_dictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit))) {
     TSolSimGEMHit *G__Lderived;
     G__Lderived=(TSolSimGEMHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack))) {
     TSolSimBackTrack *G__Lderived;
     G__Lderived=(TSolSimBackTrack*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder))) {
     TSolSimDecoder *G__Lderived;
     G__Lderived=(TSolSimDecoder*)0x1000;
     {
       Podd::SimDecoder *G__Lpbase=(Podd::SimDecoder*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder),G__get_linked_tagnum(&G__libsolgem_dictLN_PoddcLcLSimDecoder),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       THaEvData *G__Lpbase=(THaEvData*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder),G__get_linked_tagnum(&G__libsolgem_dictLN_THaEvData),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder),G__get_linked_tagnum(&G__libsolgem_dictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablelibsolgem_dict() {

   /* Setting up typedef entry */
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("UShort_t",114,-1,0,-1);
   G__setnewtype(-1,"Unsigned Short integer 2 bytes (unsigned short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,float>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,float,less<int> >",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("HitMap_t",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Cluster_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlECluster_tcOallocatorlECluster_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlECluster_tcOallocatorlECluster_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlECluster_tcOallocatorlECluster_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlECluster_tcOallocatorlECluster_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlECluster_tcOallocatorlECluster_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<GEMHitData_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TSolGEMData::GEMHitData_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<hitdata*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEhitdatamUcOallocatorlEhitdatamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEhitdatamUcOallocatorlEhitdatamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEhitdatamUcOallocatorlEhitdatamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEhitdatamUcOallocatorlEhitdatamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEhitdatamUcOallocatorlEhitdatamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<gendata*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEgendatamUcOallocatorlEgendatamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEgendatamUcOallocatorlEgendatamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEgendatamUcOallocatorlEgendatamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEgendatamUcOallocatorlEgendatamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEgendatamUcOallocatorlEgendatamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::string>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEstringcOallocatorlEstringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<string>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEstringcOallocatorlEstringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Double_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Short_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEshortcOallocatorlEshortgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<Short_t> >",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<Short_t> >",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<short,allocator<short> > >",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<IonPar_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TSolSimGEMDigitization::IonPar_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TSolGEMChamber*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<GEMCluster>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TSolSimEvent::GEMCluster>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DigiGEMStrip>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TSolSimEvent::DigiGEMStrip>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ECHitData>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TSolSimEvent::ECHitData>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,Int_t>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("StripMap_t",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ECdata*>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEECdatamUcOallocatorlEECdatamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEECdatamUcOallocatorlEECdatamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEECdatamUcOallocatorlEECdatamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEECdatamUcOallocatorlEECdatamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEECdatamUcOallocatorlEECdatamUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* TSolAnalyzer */
static void G__setup_memvarTSolAnalyzer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolAnalyzer));
   { TSolAnalyzer *p; p=(TSolAnalyzer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"f=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolGEMPlane */
static void G__setup_memvarTSolGEMPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane));
   { TSolGEMPlane *p; p=(TSolGEMPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClonesArray),-1,-1,4,"fClusters=",0,"Clusters");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSAngle=",0,"Strip angle (measurement direction)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNStrips=",0,"Number of strips");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSPitch=",0,"Strip pitch (m)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSBeg=",0,"X coordinate of lower edge of first strip");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape),-1,-1,4,"fShape=",0,"Wedge geometry");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCLS=",0,"cos lab to strip angle)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCWS=",0,"... wedge to strip");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSLS=",0,"sin...");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSWS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolSimGEMDigitization */
static void G__setup_memvarTSolSimGEMDigitization(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitization));
   { TSolSimGEMDigitization *p; p=(TSolSimGEMDigitization*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGasWion=",0,"eV");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGasDiffusion=",0,"mm2/s");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGasDriftVelocity=",0,"mm/s");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fAvalancheFiducialBand=",0,"number of sigma defining the band around the avalanche in readout plane");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fAvalancheChargeStatistics=",0,"0 Furry, 1 Gaussian");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGainMean=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGain0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTriggerOffset=",0,"trigger offset (ns), incl latency & readout offset");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTriggerJitter=",0,"trigger sigma jitter (ns)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fEleSamplingPoints=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEleSamplingPeriod=",0,"ns");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPulseNoiseSigma=",0,"sigma of the amplitude noise distribution on each sample");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fADCoffset=",0,"ADC offset");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fADCgain=",0,"ADC gain");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fADCbits=",0,"ADC resolutions in bits");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fGateWidth=",0,"to be changed , ns - pulse shape width at ~1/10 max");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fUseTrackerFrame=",0,"tracker frame is used in the original version, but not so in my version");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fEntranceRef=",0,"z position of the copper layer right before the first GEM gas layer,");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fLateralUncertainty=",0,"avalanche electrons can only pass through the holes of GEM foil");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPulseShapeTau0=",0,"[ns] GEM model; = 50. in SiD model");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPulseShapeTau1=",0,"[ns] GEM model only; if negative assume SiD model");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRoutZ=",0,"z-distance hit entrance to readout plane [mm]");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDoMapSector=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSignalSector=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane),-1,-1,4,"fDP=",0,"2D array of plane pointers indexed by chamber, plane #");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNChambers=",0,"# chambers");
   G__memvar_setup((void*)0,72,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNPlanes=",0,"# planes in each chamber");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TRandom3),-1,-1,4,"fTrnd=",0,"time randomizer");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fRNIon=",0,"number of ions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgR),G__defined_typename("vector<IonPar_t>"),-1,4,"fRIon=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRSMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRTotalCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fRTime0=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,4,"fSumA=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEshortcOallocatorlEshortgRsPgR),G__defined_typename("vector<Short_t>"),-1,4,"fDADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TFile),-1,-1,4,"fOFile=",0,"Output ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TTree),-1,-1,4,"fOTree=",0,"Output tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent),-1,-1,4,"fEvent=",0,"Output event structure, written to tree");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFilledStrips=",0,"True if no data changed since last SetTreeStrips");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Cluster_t */
static void G__setup_memvarCluster_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_Cluster_t));
   { Cluster_t *p; p=(Cluster_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fPos)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fPos=",0,"coordinate in chamber");
   G__memvar_setup((void*)((long)(&p->fSize)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fSize=",0,"width");
   G__memvar_setup((void*)((long)(&p->fCharge)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fCharge=",0,"total charge in ADC");
   G__memvar_setup((void*)((long)(&p->fType)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fType=",0,"see comments in clustering code");
   G__memvar_setup((void*)((long)(&p->fResolution)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fResolution=",0,"estimated resolution");
   }
   G__tag_memvar_reset();
}


   /* TSolClusters */
static void G__setup_memvarTSolClusters(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters));
   { TSolClusters *p; p=(TSolClusters*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"gSplitFrac=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-2,4,"gMaxClusterSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-2,4,"gMaxHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,4,"gBig=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR),G__defined_typename("HitMap_t"),-1,4,"fRawHits=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlECluster_tcOallocatorlECluster_tgRsPgR),G__defined_typename("vector<Cluster_t>"),-1,4,"fClusters=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* evio */
static void G__setup_memvarevio(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_evio));
   {
   }
   G__tag_memvar_reset();
}


   /* TSolGEMData */
static void G__setup_memvarTSolGEMData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData));
   { TSolGEMData *p; p=(TSolGEMData*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fRunID=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEvtID=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSource=",0,"MC source file ID (0 = signal, >0 background)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgR),G__defined_typename("vector<GEMHitData_t>"),-1,4,"fHitData=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolGEMData::GEMHitData_t */
static void G__setup_memvarTSolGEMDatacLcLGEMHitData_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t));
   { TSolGEMData::GEMHitData_t *p; p=(TSolGEMData::GEMHitData_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fGem)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fGem=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fEdep)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fEdep=",0,"energy lost in drift");
   G__memvar_setup((void*)((long)(&p->fTime)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fTime=",0,"hit time");
   G__memvar_setup((void*)((long)(&p->fPID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPID=",0,"particle ID");
   G__memvar_setup((void*)((long)(&p->fType)-(long)(p)),104,0,0,-1,G__defined_typename("UInt_t"),-1,1,"fType=",0,"particle counter: 1 = primary, >1 secondaries");
   G__memvar_setup((void*)((long)(&p->fXi)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fXi=",0,"entrance point in drift");
   G__memvar_setup((void*)((long)(&p->fXo)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fXo=",0,"exit point in drift");
   G__memvar_setup((void*)((long)(&p->fXr)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fXr=",0,"entrance point in readout");
   G__memvar_setup((void*)((long)(&p->fMom)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fMom=",0,"momentum of the particle");
   G__memvar_setup((void*)((long)(&p->fVert)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fVert=",0,"vertex position");
   }
   G__tag_memvar_reset();
}


   /* hitdata */
static void G__setup_memvarhitdata(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata));
   { hitdata *p; p=(hitdata*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,2,"fDetID=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,2,"fSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,110,0,0,-1,-1,-1,2,"fFillbits=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,-1,-1,2,"fData=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* gendata */
static void G__setup_memvargendata(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_gendata));
   { gendata *p; p=(gendata*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* ECdata */
static void G__setup_memvarECdata(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata));
   { ECdata *p; p=(ECdata*)0x1000; if (p) { }
   }
   G__tag_memvar_reset();
}


   /* TSolEVIOFile */
static void G__setup_memvarTSolEVIOFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile));
   { TSolEVIOFile *p; p=(TSolEVIOFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"fFilename[255]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_eviocLcLevioFileChannel),-1,-1,4,"fChan=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSource=",0,"User-defined source ID (e.g. MC run number)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEhitdatamUcOallocatorlEhitdatamUgRsPgR),G__defined_typename("vector<hitdata*>"),-1,4,"fHitData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEgendatamUcOallocatorlEgendatamUgRsPgR),G__defined_typename("vector<gendata*>"),-1,4,"fGenData=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fEvNum=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TGEMShape */
static void G__setup_memvarTGEMShape(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape));
   { TGEMShape *p; p=(TGEMShape*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,2,"fOrigin=",0,"x, y");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<Double_t>"),-1,2,"fSize=",0,"x, y");
   }
   G__tag_memvar_reset();
}


   /* TSolWedge */
static void G__setup_memvarTSolWedge(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolWedge));
   { TSolWedge *p; p=(TSolWedge*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR0R0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fR1R1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTPhi0=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhi1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fTPhi1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCLW=",0,"cos (lab to wedge angle)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSLW=",0,"sin...");
   }
   G__tag_memvar_reset();
}


   /* NSolWedge */
static void G__setup_memvarNSolWedge(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_NSolWedge));
   {
   G__memvar_setup((void*)(&NSolWedge::gPI),100,0,1,-1,G__defined_typename("Double_t"),-1,1,"gPI=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolRect */
static void G__setup_memvarTSolRect(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolRect));
   { TSolRect *p; p=(TSolRect*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPhi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCLW=",0,"cos (lab to wedge angle)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSLW=",0,"sin...");
   }
   G__tag_memvar_reset();
}


   /* TSolGEMChamber */
static void G__setup_memvarTSolGEMChamber(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber));
   { TSolGEMChamber *p; p=(TSolGEMChamber*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fChamberType=",0,"0 for wedge, 1 for rectangle");
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane),-1,-1,4,"fPlanes=",0,"List of chambers");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fNPlanes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape),-1,-1,4,"fShape=",0,"Wedge geometry");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolGEMCluster */
static void G__setup_memvarTSolGEMCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster));
   { TSolGEMCluster *p; p=(TSolGEMCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPos=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolGEMVStrip */
static void G__setup_memvarTSolGEMVStrip(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMVStrip));
   { TSolGEMVStrip *p; p=(TSolGEMVStrip*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TArrayS),-1,-1,4,"fIdx=",0,"index of the strip");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TArrayS),-1,-1,4,"fADC=",0,"value of the ADC sample");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TArrayD),-1,-1,4,"fCharge=",0,"total charge in strip (sampled)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,"time of first sampling");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNsample=",0,"number of samples");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fHitCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"fSize=",0,"effective size, maybe different from size of the array (some elements maybe not used)");
   }
   G__tag_memvar_reset();
}


   /* TSolSimAux */
static void G__setup_memvarTSolSimAux(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimAux));
   {
   }
   G__tag_memvar_reset();
}


   /* TSolSpec */
static void G__setup_memvarTSolSpec(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec));
   { TSolSpec *p; p=(TSolSpec*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgR),G__defined_typename("vector<TSolGEMChamber*>"),-1,4,"fChambers=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolSimEvent */
static void G__setup_memvarTSolSimEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent));
   { TSolSimEvent *p; p=(TSolSimEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fRunID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fRunID=",0,"Run number");
   G__memvar_setup((void*)((long)(&p->fEvtID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fEvtID=",0,"Event number");
   G__memvar_setup((void*)((long)(&p->fWeight)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fWeight=",0,"Event weight");
   G__memvar_setup((void*)((long)(&p->fMCTracks)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClonesArray),-1,-1,1,"fMCTracks=",0,"-> Physics tracks");
   G__memvar_setup((void*)((long)(&p->fNSignal)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fNSignal=",0,"Number of clusters from trigger track (signal)");
   G__memvar_setup((void*)((long)(&p->fSectorsMapped)-(long)(p)),103,0,0,-1,G__defined_typename("Bool_t"),-1,1,"fSectorsMapped=",0,"Sectors are mapped to 0");
   G__memvar_setup((void*)((long)(&p->fSignalSector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSignalSector=",0,"Sector of primary signal particle");
   G__memvar_setup((void*)((long)(&p->fGEMClust)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgR),G__defined_typename("vector<GEMCluster>"),-1,1,"fGEMClust=",0,"All MC-generated clusters in the GEMs");
   G__memvar_setup((void*)((long)(&p->fGEMStrips)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgR),G__defined_typename("vector<DigiGEMStrip>"),-1,1,"fGEMStrips=",0,"Digitized strip amplitudes of the GEMs");
   G__memvar_setup((void*)((long)(&p->fECHitData)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgR),G__defined_typename("vector<ECHitData>"),-1,1,"fECHitData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolROOTFile */
static void G__setup_memvarTSolROOTFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile));
   { TSolROOTFile *p; p=(TSolROOTFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,-1,-1,4,"fFilename[255]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TFile),-1,-1,4,"fChan=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TTree),-1,-1,4,"tree_generated=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TTree),-1,-1,4,"tree_solid_gem=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TTree),-1,-1,4,"tree_flux=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSource=",0,"User-defined source ID (e.g. MC run number)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<int>"),-1,4,"gen_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"gen_px=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"gen_py=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"gen_pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"gen_vx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"gen_vy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"gen_vz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_hitn=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_trid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_lxin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_lyin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_lzin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_tin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_lxout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_lyout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_lzout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_tout=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_px=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_py=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_pz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_vx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_vy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_vz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_ETot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_trE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"solid_gem_weight=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"flux_id=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"flux_pid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"flux_tid=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"flux_trackE=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"flux_avg_x=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"flux_avg_y=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"flux_avg_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEhitdatamUcOallocatorlEhitdatamUgRsPgR),G__defined_typename("vector<hitdata*>"),-1,4,"fHitData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEgendatamUcOallocatorlEgendatamUgRsPgR),G__defined_typename("vector<gendata*>"),-1,4,"fGenData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEECdatamUcOallocatorlEECdatamUgRsPgR),G__defined_typename("vector<ECdata*>"),-1,4,"fECData=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fEvNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,104,0,0,-1,-1,-1,4,"fMaxEvNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFillBitsGEM=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFillBitsEC=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fECEDep=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolDigitizedPlane */
static void G__setup_memvarTSolDigitizedPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane));
   { TSolDigitizedPlane *p; p=(TSolDigitizedPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TArrayI),-1,-1,4,"fStripADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,83,0,0,-1,G__defined_typename("Short_t"),-1,4,"fType=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTotADC=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCharge=",0,(char*)NULL);
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fNSamples=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fNStrips=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fThreshold=",0,(char*)NULL);
   G__memvar_setup((void*)0,114,0,0,-1,G__defined_typename("UShort_t"),-1,4,"fNOT=",0,"# strips over threshold");
   G__memvar_setup((void*)0,83,0,0,-1,G__defined_typename("Short_t"),-1,4,"fOverThr=",0,"# list of strips over threshold");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<Short_t> >"),-1,4,"fStripClusters=",0,"Clusters associated with each strip");
   }
   G__tag_memvar_reset();
}


   /* TSolSimGEMDigitization::IonPar_t */
static void G__setup_memvarTSolSimGEMDigitizationcLcLIonPar_t(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t));
   { TSolSimGEMDigitization::IonPar_t *p; p=(TSolSimGEMDigitization::IonPar_t*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->X)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"X=",0,"position of the point on the projection");
   G__memvar_setup((void*)((long)(&p->Y)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->Charge)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"Charge=",0,"Charge deposited by this ion");
   G__memvar_setup((void*)((long)(&p->SNorm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"SNorm=",0,"3 x radius of ion diffusion area at readout");
   G__memvar_setup((void*)((long)(&p->R2)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"R2=",0,"= SNorm^2 : radius of numerical integration area");
   G__memvar_setup((void*)((long)(&p->ggnorm)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"ggnorm=",0,"= Charge/R2/pi : charge per unit area");
   }
   G__tag_memvar_reset();
}


   /* TSolSimTrack */
static void G__setup_memvarTSolSimTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack));
   { TSolSimTrack *p; p=(TSolSimTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolSimEvent::GEMCluster */
static void G__setup_memvarTSolSimEventcLcLGEMCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster));
   { TSolSimEvent::GEMCluster *p; p=(TSolSimEvent::GEMCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fID)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fID=",0,"Cluster number, cross-ref to GEMStrip");
   G__memvar_setup((void*)((long)(&p->fSector)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fSector=",0,"Sector number");
   G__memvar_setup((void*)((long)(&p->fPlane)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fPlane=",0,"Plane number");
   G__memvar_setup((void*)((long)(&p->fRealSector)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fRealSector=",0,"Real sector number (may be !=fSector if mapped)");
   G__memvar_setup((void*)((long)(&p->fSource)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSource=",0,"MC data set source (0 = signal, >0 background)");
   G__memvar_setup((void*)((long)(&p->fType)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fType=",0,"GEANT particle counter (1 = primary)");
   G__memvar_setup((void*)((long)(&p->fPID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPID=",0,"PDG ID of particle generating the cluster");
   G__memvar_setup((void*)((long)(&p->fP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fP=",0,"Momentum of particle generating the cluster [GeV]");
   G__memvar_setup((void*)((long)(&p->fXEntry)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fXEntry=",0,"Track at chamber entrance in lab coords [m]");
   G__memvar_setup((void*)((long)(&p->fMCpos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fMCpos=",0,"Approx. truth position of hit in lab [m]");
   G__memvar_setup((void*)((long)(&p->fHitpos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fHitpos=",0,"fMCpos in Tracker frame [m]");
   G__memvar_setup((void*)((long)(&p->fCharge)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fCharge=",0,"Charge of avalanche");
   G__memvar_setup((void*)((long)(&p->fTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTime=",0,"Arrival time at electronics");
   G__memvar_setup((void*)((long)(&p->fSize)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSize[2]=",0,"Number of strips in cluster per axis");
   G__memvar_setup((void*)((long)(&p->fStart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fStart[2]=",0,"Number of first strip in cluster per axis");
   G__memvar_setup((void*)((long)(&p->fXProj)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fXProj[2]=",0,"fMCpos along projection axis [m]");
   G__memvar_setup((void*)((long)(&p->fVertex)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fVertex=",0,"Vertex");
   }
   G__tag_memvar_reset();
}


   /* TSolSimEvent::DigiGEMStrip */
static void G__setup_memvarTSolSimEventcLcLDigiGEMStrip(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip));
   { TSolSimEvent::DigiGEMStrip *p; p=(TSolSimEvent::DigiGEMStrip*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fSector)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fSector=",0,"Sector number");
   G__memvar_setup((void*)((long)(&p->fPlane)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fPlane=",0,"Plane number");
   G__memvar_setup((void*)((long)(&p->fProj)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fProj=",0,"Readout coordinate (\"x\" = 0, \"y\" = 1)");
   G__memvar_setup((void*)((long)(&p->fChan)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fChan=",0,"Channel number");
   G__memvar_setup((void*)((long)(&p->fSigType)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fSigType=",0,"Accumulated signal types (BIT(0) = signal)");
   G__memvar_setup((void*)((long)(&p->fCharge)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fCharge=",0,"Total charge in strip");
   G__memvar_setup((void*)((long)(&p->fTime1)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTime1=",0,"Time of first sample");
   G__memvar_setup((void*)((long)(&p->fNsamp)-(long)(p)),114,0,0,-1,G__defined_typename("UShort_t"),-1,1,"fNsamp=",0,"Number of ADC samples");
   G__memvar_setup((void*)((long)(&p->fADC)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fADC[10]=",0,"[fNsamp] ADC samples");
   G__memvar_setup((void*)((long)(&p->fClusters)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TArrayS),-1,-1,1,"fClusters=",0,"Clusters contributing to signal on this strip");
   }
   G__tag_memvar_reset();
}


   /* TSolSimEvent::ECHitData */
static void G__setup_memvarTSolSimEventcLcLECHitData(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLECHitData));
   { TSolSimEvent::ECHitData *p; p=(TSolSimEvent::ECHitData*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fPID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPID=",0,"PID of the hit");
   G__memvar_setup((void*)((long)(&p->fTID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTID=",0,"TID of the hit");
   G__memvar_setup((void*)((long)(&p->fPlane)-(long)(p)),115,0,0,-1,G__defined_typename("Short_t"),-1,1,"fPlane=",0,"0 for large angle EC, 1 for forward angle EC");
   G__memvar_setup((void*)((long)(&p->fEdep)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fEdep=",0,"energy deposition of the particle hitting EC (only good for electron and photon)");
   G__memvar_setup((void*)((long)(&p->fXPos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fXPos=",0,"x position of the hit");
   G__memvar_setup((void*)((long)(&p->fYPos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fYPos=",0,"y position of the hit");
   G__memvar_setup((void*)((long)(&p->fZPos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fZPos=",0,"z position of the hit    ");
   }
   G__tag_memvar_reset();
}


   /* TSolSimFile */
static void G__setup_memvarTSolSimFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile));
   { TSolSimFile *p; p=(TSolSimFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TString),-1,-1,2,"fROOTFileName=",0,"Name of input file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TFile),-1,-1,2,"fROOTFile=",0,"! Input ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TTree),-1,-1,2,"fTree=",0,"! Input Tree with simulation data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent),-1,-1,2,"fEvent=",0,"! Current event");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,2,"fNEntries=",0,"! Number of entries in tree");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-1,2,"fEntry=",0,"! Current entry number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolSimGEMHit */
static void G__setup_memvarTSolSimGEMHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit));
   { TSolSimGEMHit *p; p=(TSolSimGEMHit*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fID=",0,"Cluster number, cross-ref to GEMStrip");
   G__memvar_setup((void*)((long)(&p->fSector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSector=",0,"Sector number");
   G__memvar_setup((void*)((long)(&p->fPlane)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPlane=",0,"Plane number");
   G__memvar_setup((void*)((long)(&p->fRealSector)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fRealSector=",0,"Real sector number (may be !=fSector if mapped)");
   G__memvar_setup((void*)((long)(&p->fSource)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fSource=",0,"MC data set source (0 = signal, >0 background)");
   G__memvar_setup((void*)((long)(&p->fType)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fType=",0,"GEANT particle counter (1 = primary)");
   G__memvar_setup((void*)((long)(&p->fPID)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fPID=",0,"PDG ID of particle generating the cluster");
   G__memvar_setup((void*)((long)(&p->fP)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fP=",0,"Momentum of particle generating the cluster");
   G__memvar_setup((void*)((long)(&p->fXEntry)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fXEntry=",0,"Track at chamber entrance in lab coords [m]");
   G__memvar_setup((void*)((long)(&p->fMCpos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fMCpos=",0,"Approx. truth position of hit in lab [m]");
   G__memvar_setup((void*)((long)(&p->fHitpos)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,1,"fHitpos=",0,"fMCpos in Tracker frame [m]");
   G__memvar_setup((void*)((long)(&p->fCharge)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fCharge=",0,"Charge of avalanche");
   G__memvar_setup((void*)((long)(&p->fTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTime=",0,"Arrival time at electronics (w/o ToF)");
   G__memvar_setup((void*)((long)(&p->fUSize)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fUSize=",0,"Number of strips in u-cluster");
   G__memvar_setup((void*)((long)(&p->fUStart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fUStart=",0,"Number of first strip in u-cluster");
   G__memvar_setup((void*)((long)(&p->fUPos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fUPos=",0,"fMCpos along u-projection axis [m]");
   G__memvar_setup((void*)((long)(&p->fVSize)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fVSize=",0,"Number of strips in v-cluster");
   G__memvar_setup((void*)((long)(&p->fVStart)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fVStart=",0,"Number of first strip in v-cluster");
   G__memvar_setup((void*)((long)(&p->fVPos)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fVPos=",0,"fMCpos along v-projection axis [m]");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolSimBackTrack */
static void G__setup_memvarTSolSimBackTrack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack));
   { TSolSimBackTrack *p; p=(TSolSimBackTrack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fType=",0,"GEANT particle number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPID=",0,"Track particle ID (PDG)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSector=",0,"Sector where this track detected");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSource=",0,"MC data set source (0 = signal, >0 background)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,4,"fOrigin=",0,"Position at first plane in lab frame (m)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,4,"fHitpos=",0,"Position at first plane in Tracker frame [m]");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3),-1,-1,4,"fMomentum=",0,"Momentum (GeV)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHitBits=",0,"Bitpattern of plane nos hit by this back track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fUfailBits=",0,"Bitpattern of plane nos without digitized hits in U");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fVfailBits=",0,"Bitpattern of plane nos without digitized hits in V");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* TSolSimDecoder */
static void G__setup_memvarTSolSimDecoder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder));
   { TSolSimDecoder *p; p=(TSolSimDecoder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClonesArray),-1,-1,2,"fBackTracks=",0,"-> Primary particle tracks at first chamber");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("StripMap_t"),-1,2,"fStripMap=",0,"! Map ROCKey -> index of corresponding strip");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,2,"fgZ0=",0,"z position of first tracker plane");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"fgDoCalo=",0,"Enable calorimeter emulation");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,2,"fgCaloZ=",0,"z position of emulated calorimeter");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,2,"fgCaloRes=",0,"Resolution (sigma) of emulated calorimeter (m)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__libsolgem_dictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarlibsolgem_dict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncTSolAnalyzer(void) {
   /* TSolAnalyzer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolAnalyzer));
   G__memfunc_setup("TSolAnalyzer",1224,G__libsolgem_dict_201_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolAnalyzer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_201_0_2, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolAnalyzer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_201_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolAnalyzer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_201_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolAnalyzer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_201_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolAnalyzer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_201_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_201_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolAnalyzer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_201_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolAnalyzer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_201_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolAnalyzer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_201_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolAnalyzer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSolAnalyzer", 1350, G__libsolgem_dict_201_0_14, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolGEMPlane(void) {
   /* TSolGEMPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane));
   G__memfunc_setup("TSolGEMPlane",1099,G__libsolgem_dict_444_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSolGEMPlane",1099,G__libsolgem_dict_444_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - desc "
"U 'THaDetectorBase' - 0 - parent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadGeometry",1224,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"E - - 0 - file u 'TDatime' - 11 - date "
"g - 'Bool_t' 0 'kFALSE' required", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetClusters",1141,G__libsolgem_dict_444_0_5, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClonesArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetShape",785,G__libsolgem_dict_444_0_7, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__libsolgem_dict_444_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "rotation angle between lab and wedge frame", (void*) NULL, 0);
   G__memfunc_setup("GetNStrips",1011,G__libsolgem_dict_444_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSPitch",875,G__libsolgem_dict_444_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "in meters", (void*) NULL, 0);
   G__memfunc_setup("GetSAngle",858,G__libsolgem_dict_444_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "Angle (rad) between horizontal axis", (void*) NULL, 0);
   G__memfunc_setup("GetSAngleComp",1257,G__libsolgem_dict_444_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LabToPlane",962,G__libsolgem_dict_444_0_13, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 0);
   G__memfunc_setup("PlaneToStrip",1221,G__libsolgem_dict_444_0_14, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 0);
   G__memfunc_setup("LabToStrip",996,G__libsolgem_dict_444_0_15, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 0);
   G__memfunc_setup("StripToLab",996,G__libsolgem_dict_444_0_16, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 0);
   G__memfunc_setup("StripToPlane",1221,G__libsolgem_dict_444_0_17, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 0);
   G__memfunc_setup("PlaneToLab",962,G__libsolgem_dict_444_0_18, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 0);
   G__memfunc_setup("StripNumtoStrip",1591,G__libsolgem_dict_444_0_19, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StriptoProj",1168,G__libsolgem_dict_444_0_20, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "d - 'Double_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StripNumtoProj",1472,G__libsolgem_dict_444_0_21, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripLowerEdge",1712,G__libsolgem_dict_444_0_22, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripUpperEdge",1715,G__libsolgem_dict_444_0_23, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - is", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripUnchecked",1724,G__libsolgem_dict_444_0_24, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripInRange",1494,G__libsolgem_dict_444_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStrip",818,G__libsolgem_dict_444_0_26, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libsolgem_dict_444_0_27, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRotations",1263,G__libsolgem_dict_444_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_444_0_29, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolGEMPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_444_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_444_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolGEMPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_444_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolGEMPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_444_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_444_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_444_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolGEMPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_444_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_444_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolGEMPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSolGEMPlane", 1225, G__libsolgem_dict_444_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimGEMDigitization(void) {
   /* TSolSimGEMDigitization */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitization));
   G__memfunc_setup("TSolSimGEMDigitization",2163,G__libsolgem_dict_445_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitization), -1, 0, 2, 1, 1, 0, 
"u 'TSolSpec' - 11 - spect C - - 10 '\"testdigitization\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Initialize",1042,G__libsolgem_dict_445_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TSolSpec' - 11 - spect", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Digitize",825,G__libsolgem_dict_445_0_4, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TSolGEMData' - 11 - gdata u 'TSolSpec' - 11 - spect", "digitize event", (void*) NULL, 0);
   G__memfunc_setup("AdditiveDigitize",1635,G__libsolgem_dict_445_0_5, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"u 'TSolGEMData' - 11 - gdata u 'TSolSpec' - 11 - spect", "add more digitized data, e.g. background", (void*) NULL, 0);
   G__memfunc_setup("NoDigitize",1014,G__libsolgem_dict_445_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TSolGEMData' - 11 - gdata u 'TSolSpec' - 11 - spect", "do not digitize event, just fill tree", (void*) NULL, 0);
   G__memfunc_setup("GetDigitizedPlane",1709,G__libsolgem_dict_445_0_7, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane), -1, 1, 2, 1, 1, 9, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libsolgem_dict_445_0_8, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCharges",1226,G__libsolgem_dict_445_0_9, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintSamples",1250,G__libsolgem_dict_445_0_10, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGateWidth",1185,G__libsolgem_dict_445_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitTree",804,G__libsolgem_dict_445_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TSolSpec' - 11 - spect u 'TString' - 11 - ofile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeEvent",1214,G__libsolgem_dict_445_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TSolGEMData' - 11 - tsgd u 'TSolEVIOFile' - 11 - f "
"i - 'Int_t' 0 '-1' evnum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTreeEvent",1214,G__libsolgem_dict_445_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TSolGEMData' - 11 - tsgd u 'TSolROOTFile' - 11 - f "
"i - 'Int_t' 0 '-1' evnum", "overload for root file input", (void*) NULL, 0);
   G__memfunc_setup("SetTreeHit",993,G__libsolgem_dict_445_0_15, 115, -1, G__defined_typename("Short_t"), 0, 5, 1, 1, 0, 
"h - 'UInt_t' 10 - ih u 'TSolSpec' - 11 - spect "
"U 'TSolGEMVStrip' - 42 - dh u 'TSolGEMData' - 11 - tsgd "
"d - 'Double_t' 0 - t0", "called from Digitization", (void*) NULL, 0);
   G__memfunc_setup("SetTreeStrips",1345,G__libsolgem_dict_445_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", "called from Digitization", (void*) NULL, 0);
   G__memfunc_setup("FillTree",791,G__libsolgem_dict_445_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteTree",923,G__libsolgem_dict_445_0_18, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CloseTree",902,G__libsolgem_dict_445_0_19, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__libsolgem_dict_445_0_20, 115, -1, G__defined_typename("Short_t"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotADC",799,G__libsolgem_dict_445_0_21, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__libsolgem_dict_445_0_22, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip "
"h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__libsolgem_dict_445_0_23, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip "
"h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__libsolgem_dict_445_0_24, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip "
"i - 'Int_t' 0 - n i - 'Int_t' 0 - ks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNChambers",1171,G__libsolgem_dict_445_0_25, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNPlanes",977,G__libsolgem_dict_445_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSamples",1091,G__libsolgem_dict_445_0_27, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNStrips",1011,G__libsolgem_dict_445_0_28, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Threshold",941,G__libsolgem_dict_445_0_29, 114, -1, G__defined_typename("UShort_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip "
"i - 'Int_t' 0 - thr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNOverThr",1080,G__libsolgem_dict_445_0_30, 114, -1, G__defined_typename("UShort_t"), 0, 2, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdxOverThr",1295,G__libsolgem_dict_445_0_31, 115, -1, G__defined_typename("Short_t"), 0, 3, 1, 1, 8, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip "
"i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripClusters",1671,G__libsolgem_dict_445_0_32, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<Short_t>"), 1, 3, 1, 1, 9, 
"h - 'UInt_t' 0 - ich h - 'UInt_t' 0 - ip "
"h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__libsolgem_dict_445_0_33, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMapSector",1098,G__libsolgem_dict_445_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMapSector",1210,G__libsolgem_dict_445_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'true' b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IonModel",791,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"u 'TVector3' - 11 - xi u 'TVector3' - 11 - xo "
"d - 'Double_t' 10 - elost", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AvaModel",777,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMVStrip), -1, 2, 5, 1, 4, 0, 
"i - 'Int_t' 10 - ic u 'TSolSpec' - 11 - spect "
"u 'TVector3' - 11 - xi u 'TVector3' - 11 - xo "
"d - 'Double_t' 10 - time_off", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakePrefix",1004,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DeleteObjects",1309,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_445_0_40, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolSimGEMDigitization::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_445_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimGEMDigitization::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_445_0_42, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolSimGEMDigitization::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_445_0_43, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolSimGEMDigitization::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_445_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_445_0_48, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimGEMDigitization::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_445_0_49, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimGEMDigitization::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_445_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimGEMDigitization::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_445_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimGEMDigitization::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSolSimGEMDigitization", 2289, G__libsolgem_dict_445_0_52, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncCluster_t(void) {
   /* Cluster_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_Cluster_t));
   // automatic default constructor
   G__memfunc_setup("Cluster_t", 949, G__libsolgem_dict_446_0_1, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_Cluster_t), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("Cluster_t", 949, G__libsolgem_dict_446_0_2, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_Cluster_t), -1, 0, 1, 1, 1, 0, "u 'Cluster_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Cluster_t", 1075, G__libsolgem_dict_446_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_446_0_4, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_Cluster_t), -1, 1, 1, 1, 1, 0, "u 'Cluster_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolClusters(void) {
   /* TSolClusters */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters));
   G__memfunc_setup("TSolClusters",1239,G__libsolgem_dict_447_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__libsolgem_dict_447_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddRawHit",856,G__libsolgem_dict_447_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - i f - 'Float_t' 0 - adc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPos",606,G__libsolgem_dict_447_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ic d - 'Double_t' 0 - vPos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSize",711,G__libsolgem_dict_447_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ic d - 'Double_t' 0 - vSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCharge",886,G__libsolgem_dict_447_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ic d - 'Double_t' 0 - vCharge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__libsolgem_dict_447_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ic h - 'UInt_t' 0 - vType", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetResolution",1376,G__libsolgem_dict_447_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - ic d - 'Double_t' 0 - vResolution", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__libsolgem_dict_447_0_9, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - ic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__libsolgem_dict_447_0_10, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - ic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__libsolgem_dict_447_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - ic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__libsolgem_dict_447_0_12, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - ic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResolution",1364,G__libsolgem_dict_447_0_13, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - ic", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeClusters",1235,G__libsolgem_dict_447_0_14, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"d - 'Double_t' 10 - stripstart d - 'Double_t' 10 - strippitch", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClusterPlane",1234,G__libsolgem_dict_447_0_15, 105, -1, G__defined_typename("Int_t"), 0, 5, 1, 1, 0, 
"u 'TSolGEMPlane' - 1 - gp i - 'Int_t' 10 - ich "
"i - 'Int_t' 10 - ip u 'TSolSimGEMDigitization' - 1 - ddd "
"d - 'Double_t' 10 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_447_0_16, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolClusters::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_447_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolClusters::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_447_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolClusters::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_447_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolClusters::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_447_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_447_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolClusters::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_447_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolClusters::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_447_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolClusters::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_447_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolClusters::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSolClusters", 1239, G__libsolgem_dict_447_0_28, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters), -1, 0, 1, 1, 1, 0, "u 'TSolClusters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolClusters", 1365, G__libsolgem_dict_447_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_447_0_30, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolClusters), -1, 1, 1, 1, 1, 0, "u 'TSolClusters' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncevio(void) {
   /* evio */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_evio));
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolGEMData(void) {
   /* TSolGEMData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData));
   G__memfunc_setup("TSolGEMData",981,G__libsolgem_dict_522_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearEvent",1001,G__libsolgem_dict_522_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitEvent",918,G__libsolgem_dict_522_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNHit",671,G__libsolgem_dict_522_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEvent",814,G__libsolgem_dict_522_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRun",609,G__libsolgem_dict_522_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__libsolgem_dict_522_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMomentum",1150,G__libsolgem_dict_522_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k u 'TVector3' - 11 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitEntrance",1409,G__libsolgem_dict_522_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k u 'TVector3' - 11 - xEnt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitExit",1003,G__libsolgem_dict_522_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k u 'TVector3' - 11 - xExit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitReadout",1317,G__libsolgem_dict_522_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k u 'TVector3' - 11 - xRead", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVertex",938,G__libsolgem_dict_522_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k u 'TVector3' - 11 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitEnergy",1211,G__libsolgem_dict_522_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k d - 'Double_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitTime",992,G__libsolgem_dict_522_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitChamber",1283,G__libsolgem_dict_522_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k h - 'UInt_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleID",1261,G__libsolgem_dict_522_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k i - 'Int_t' 0 - pid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetParticleType",1538,G__libsolgem_dict_522_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - k h - 'UInt_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNHit",659,G__libsolgem_dict_522_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvent",802,G__libsolgem_dict_522_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRun",597,G__libsolgem_dict_522_0_20, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSource",913,G__libsolgem_dict_522_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMomentum",1138,G__libsolgem_dict_522_0_22, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitEntrance",1397,G__libsolgem_dict_522_0_23, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitExit",991,G__libsolgem_dict_522_0_24, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitReadout",1305,G__libsolgem_dict_522_0_25, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVertex",926,G__libsolgem_dict_522_0_26, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3), -1, 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitEnergy",1199,G__libsolgem_dict_522_0_27, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitTime",980,G__libsolgem_dict_522_0_28, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitChamber",1271,G__libsolgem_dict_522_0_29, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleID",1249,G__libsolgem_dict_522_0_30, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParticleType",1526,G__libsolgem_dict_522_0_31, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libsolgem_dict_522_0_32, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintHit",818,G__libsolgem_dict_522_0_33, 121, -1, -1, 0, 1, 1, 1, 8, "h - 'UInt_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TSolGEMData", 981, G__libsolgem_dict_522_0_34, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData), -1, 0, 1, 1, 1, 0, "u 'TSolGEMData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolGEMData", 1107, G__libsolgem_dict_522_0_35, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_522_0_36, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData), -1, 1, 1, 1, 1, 0, "u 'TSolGEMData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolGEMDatacLcLGEMHitData_t(void) {
   /* TSolGEMData::GEMHitData_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t));
   // automatic default constructor
   G__memfunc_setup("GEMHitData_t", 1099, G__libsolgem_dict_523_0_1, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("GEMHitData_t", 1099, G__libsolgem_dict_523_0_2, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t), -1, 0, 1, 1, 1, 0, "u 'TSolGEMData::GEMHitData_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GEMHitData_t", 1225, G__libsolgem_dict_523_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_523_0_4, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t), -1, 1, 1, 1, 1, 0, "u 'TSolGEMData::GEMHitData_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfunchitdata(void) {
   /* hitdata */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata));
   G__memfunc_setup("hitdata",735,G__libsolgem_dict_528_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata), -1, 0, 2, 1, 1, 0, 
"i - - 0 - detid h - - 0 '__DEFAULT_DATA_SIZE' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDetID",714,G__libsolgem_dict_528_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetData",678,G__libsolgem_dict_528_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - - 0 - - d - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__libsolgem_dict_528_0_4, 100, -1, -1, 0, 1, 1, 1, 8, "h - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetData",666,G__libsolgem_dict_528_0_5, 68, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilled",780,G__libsolgem_dict_528_0_6, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("hitdata", 735, G__libsolgem_dict_528_0_7, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata), -1, 0, 1, 1, 1, 0, "u 'hitdata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~hitdata", 861, G__libsolgem_dict_528_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_528_0_9, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata), -1, 1, 1, 1, 1, 0, "u 'hitdata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncgendata(void) {
   /* gendata */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_gendata));
   G__memfunc_setup("gendata",724,G__libsolgem_dict_529_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_gendata), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__libsolgem_dict_529_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__libsolgem_dict_529_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetP",368,G__libsolgem_dict_529_0_4, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetV",374,G__libsolgem_dict_529_0_5, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("gendata", 724, G__libsolgem_dict_529_0_6, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_gendata), -1, 0, 1, 1, 1, 0, "u 'gendata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~gendata", 850, G__libsolgem_dict_529_0_7, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_529_0_8, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_gendata), -1, 1, 1, 1, 1, 0, "u 'gendata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncECdata(void) {
   /* ECdata */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata));
   G__memfunc_setup("ECdata",546,G__libsolgem_dict_530_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata), -1, 0, 1, 1, 1, 0, "i - - 0 - detid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPID",509,G__libsolgem_dict_530_0_2, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__libsolgem_dict_530_0_3, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlane",784,G__libsolgem_dict_530_0_4, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__libsolgem_dict_530_0_5, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TVector3), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTID",513,G__libsolgem_dict_530_0_6, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ECdata", 546, G__libsolgem_dict_530_0_7, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata), -1, 0, 1, 1, 1, 0, "u 'ECdata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ECdata", 672, G__libsolgem_dict_530_0_8, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_530_0_9, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata), -1, 1, 1, 1, 1, 0, "u 'ECdata' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolEVIOFile(void) {
   /* TSolEVIOFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile));
   G__memfunc_setup("TSolEVIOFile",1077,G__libsolgem_dict_531_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSolEVIOFile",1077,G__libsolgem_dict_531_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilename",1101,G__libsolgem_dict_531_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__libsolgem_dict_531_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libsolgem_dict_531_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__libsolgem_dict_531_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__libsolgem_dict_531_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__libsolgem_dict_531_0_8, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSource",913,G__libsolgem_dict_531_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNextEvent",1309,G__libsolgem_dict_531_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtractDetIDs",1272,G__libsolgem_dict_531_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'evio::evioDOMNodeList' - 0 - - i - - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildData",874,G__libsolgem_dict_531_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'evio::evioDOMNodeList' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildGenerated",1407,G__libsolgem_dict_531_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'evio::evioDOMNodeList' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNData",744,G__libsolgem_dict_531_0_14, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNGen",648,G__libsolgem_dict_531_0_15, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvNum",779,G__libsolgem_dict_531_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitData",959,G__libsolgem_dict_531_0_17, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGenData",948,G__libsolgem_dict_531_0_18, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_gendata), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGEMData",883,G__libsolgem_dict_531_0_19, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGEMData",883,G__libsolgem_dict_531_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSolGEMData' - 0 - gd", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TSolEVIOFile", 1077, G__libsolgem_dict_531_0_21, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile), -1, 0, 1, 1, 1, 0, "u 'TSolEVIOFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolEVIOFile", 1203, G__libsolgem_dict_531_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_531_0_23, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolEVIOFile), -1, 1, 1, 1, 1, 0, "u 'TSolEVIOFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTGEMShape(void) {
   /* TGEMShape */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape));
   G__memfunc_setup("SetGeometry",1144,G__libsolgem_dict_568_0_1, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TGEMShape' - 0 - theShape", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("SetGeometry",1144,G__libsolgem_dict_568_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - a d - 'Double_t' 0 - b "
"d - 'Double_t' 0 - c d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Contains",831,G__libsolgem_dict_568_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("LabToWedge",958,G__libsolgem_dict_568_0_4, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("WedgeToLab",958,G__libsolgem_dict_568_0_5, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetOrigin",904,G__libsolgem_dict_568_0_6, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetSize",699,G__libsolgem_dict_568_0_7, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("GetAngle",775,G__libsolgem_dict_568_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Print",525,G__libsolgem_dict_568_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   // automatic destructor
   G__memfunc_setup("~TGEMShape", 924, G__libsolgem_dict_568_0_10, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_568_0_11, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape), -1, 1, 1, 1, 1, 0, "u 'TGEMShape' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolWedge(void) {
   /* TSolWedge */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolWedge));
   G__memfunc_setup("GetR0",418,G__libsolgem_dict_569_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetR1",419,G__libsolgem_dict_569_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPhi0",625,G__libsolgem_dict_569_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetDPhi",645,G__libsolgem_dict_569_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrigin",904,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSize",699,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Bounds",619,G__libsolgem_dict_569_0_8, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Contains",831,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGeometry",1144,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TGEMShape' - 0 - theShape", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGeometry",1144,G__libsolgem_dict_569_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 10 - r0 d - 'Double_t' 10 - r1 "
"d - 'Double_t' 10 - phi0 d - 'Double_t' 10 - dphi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "rotation angle between lab and wedge frame", (void*) NULL, 1);
   G__memfunc_setup("LabToWedge",958,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 1);
   G__memfunc_setup("WedgeToLab",958,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRotations",1263,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolWedge", 1004, G__libsolgem_dict_569_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_569_0_18, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolWedge), -1, 1, 1, 1, 1, 0, "u 'TSolWedge' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncNSolWedge(void) {
   /* NSolWedge */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_NSolWedge));
   G__memfunc_setup("CmpAng",566,G__libsolgem_dict_570_0_1, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - phi d - 'Double_t' 0 - tphi", (char*)NULL, (void*) G__func2void( (Int_t (*)(Double_t, Double_t, Double_t, Double_t))(&NSolWedge::CmpAng) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolRect(void) {
   /* TSolRect */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolRect));
   G__memfunc_setup("GetX1",425,G__libsolgem_dict_571_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetX2",426,G__libsolgem_dict_571_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY1",426,G__libsolgem_dict_571_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetY2",427,G__libsolgem_dict_571_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetOrigin",904,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetSize",699,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Bounds",619,G__libsolgem_dict_571_0_8, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR), G__defined_typename("vector<Double_t>"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Contains",831,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGeometry",1144,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TGEMShape' - 0 - theShape", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetGeometry",1144,G__libsolgem_dict_571_0_11, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 10 - x1 d - 'Double_t' 10 - x2 "
"d - 'Double_t' 10 - y1 d - 'Double_t' 10 - y2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,(G__InterfaceMethod) NULL,100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "rotation angle between lab and wedge frame", (void*) NULL, 1);
   G__memfunc_setup("LabToWedge",958,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 1);
   G__memfunc_setup("WedgeToLab",958,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetRotations",1263,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolRect", 910, G__libsolgem_dict_571_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_571_0_18, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolRect), -1, 1, 1, 1, 1, 0, "u 'TSolRect' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolGEMChamber(void) {
   /* TSolGEMChamber */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber));
   G__memfunc_setup("TSolGEMChamber",1293,G__libsolgem_dict_572_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - desc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSolGEMChamber",1293,G__libsolgem_dict_572_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber), -1, 0, 0, 1, 1, 0, "", "for ROOT RTTI", (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TDatime' - 11 - date", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadGeometry",1224,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"E - - 0 - file u 'TDatime' - 11 - date "
"g - 'Bool_t' 0 - required", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetDBFileName",1191,(G__InterfaceMethod) NULL,67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Decode",580,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'THaEvData' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetLowerEdgeX",1270,G__libsolgem_dict_572_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLowerEdgeY",1271,G__libsolgem_dict_572_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperEdgeX",1273,G__libsolgem_dict_572_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpperEdgeY",1274,G__libsolgem_dict_572_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChamberType",1396,G__libsolgem_dict_572_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetShape",785,G__libsolgem_dict_572_0_12, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TGEMShape), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAngle",775,G__libsolgem_dict_572_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", "rotation angle between lab and wedge frame", (void*) NULL, 0);
   G__memfunc_setup("LabToPlane",962,G__libsolgem_dict_572_0_14, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 0);
   G__memfunc_setup("PlaneToLab",962,G__libsolgem_dict_572_0_15, 121, -1, -1, 0, 2, 1, 1, 8, 
"d - 'Double_t' 1 - x d - 'Double_t' 1 - y", "input and output in meters", (void*) NULL, 0);
   G__memfunc_setup("GetNPlanes",977,G__libsolgem_dict_572_0_16, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPlane",784,G__libsolgem_dict_572_0_17, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMPlane), -1, 1, 1, 1, 1, 8, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InitPlane",900,G__libsolgem_dict_572_0_18, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 10 - i C - - 10 - name "
"C - - 10 - desc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libsolgem_dict_572_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 'kTRUE' printplanes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_572_0_20, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolGEMChamber::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_572_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMChamber::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_572_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolGEMChamber::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_572_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolGEMChamber::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_572_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_572_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMChamber::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_572_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolGEMChamber::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_572_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMChamber::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_572_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolGEMChamber::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSolGEMChamber", 1419, G__libsolgem_dict_572_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolGEMCluster(void) {
   /* TSolGEMCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster));
   G__memfunc_setup("TSolGEMCluster",1341,G__libsolgem_dict_573_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPos",594,G__libsolgem_dict_573_0_2, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetE",357,G__libsolgem_dict_573_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_573_0_4, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolGEMCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_573_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_573_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolGEMCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_573_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolGEMCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_573_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_573_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_573_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolGEMCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_573_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolGEMCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_573_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolGEMCluster::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSolGEMCluster", 1341, G__libsolgem_dict_573_0_16, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster), -1, 0, 1, 1, 1, 0, "u 'TSolGEMCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolGEMCluster", 1467, G__libsolgem_dict_573_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_573_0_18, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMCluster), -1, 1, 1, 1, 1, 0, "u 'TSolGEMCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolGEMVStrip(void) {
   /* TSolGEMVStrip */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMVStrip));
   G__memfunc_setup("TSolGEMVStrip",1219,G__libsolgem_dict_579_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMVStrip), -1, 0, 2, 1, 1, 0, 
"s - 'Short_t' 0 '10' n s - 'Short_t' 0 '10' nsample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddStripAt",976,G__libsolgem_dict_579_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Short_t' 0 - idx s - 'Short_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddChargeAt",1032,G__libsolgem_dict_579_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - val s - 'Short_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddSampleAt",1056,G__libsolgem_dict_579_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"s - 'Short_t' 0 - val s - 'Short_t' 0 - sample "
"s - 'Short_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetTime",699,G__libsolgem_dict_579_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitCharge",1179,G__libsolgem_dict_579_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", "total charge of the avalanche", (void*) NULL, 0);
   G__memfunc_setup("SetSize",711,G__libsolgem_dict_579_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSize",699,G__libsolgem_dict_579_0_8, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdx",581,G__libsolgem_dict_579_0_9, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__libsolgem_dict_579_0_10, 115, -1, G__defined_typename("Short_t"), 0, 2, 1, 1, 8, 
"s - 'Short_t' 0 - n s - 'Short_t' 0 - sample", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__libsolgem_dict_579_0_11, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "s - 'Short_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__libsolgem_dict_579_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitCharge",1167,G__libsolgem_dict_579_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libsolgem_dict_579_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TSolGEMVStrip", 1219, G__libsolgem_dict_579_0_15, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMVStrip), -1, 0, 1, 1, 1, 0, "u 'TSolGEMVStrip' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolGEMVStrip", 1345, G__libsolgem_dict_579_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_579_0_17, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMVStrip), -1, 1, 1, 1, 1, 0, "u 'TSolGEMVStrip' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimAux(void) {
   /* TSolSimAux */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimAux));
   G__memfunc_setup("ADCConvert",937,G__libsolgem_dict_580_0_1, 115, -1, G__defined_typename("Short_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - val d - 'Double_t' 0 - off "
"d - 'Double_t' 0 - gain i - 'Int_t' 0 - bits", (char*)NULL, (void*) G__func2void( (Short_t (*)(Double_t, Double_t, Double_t, Int_t))(&TSolSimAux::ADCConvert) ), 0);
   G__memfunc_setup("PulseShape",1018,G__libsolgem_dict_580_0_2, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 0, 
"d - 'Double_t' 0 - t d - 'Double_t' 0 - C "
"d - 'Double_t' 0 - Tp", "shaping time ", (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&TSolSimAux::PulseShape) ), 0);
   G__memfunc_setup("PulseShape",1018,G__libsolgem_dict_580_0_3, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - t d - 'Double_t' 0 - A "
"d - 'Double_t' 0 - tau0 d - 'Double_t' 0 - tau1", "second time constant", (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t))(&TSolSimAux::PulseShape) ), 0);
   G__memfunc_setup("Gaus2D",518,G__libsolgem_dict_580_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TSolSimAux::Gaus2D) ), 0);
   G__memfunc_setup("MultiGaus2D",1041,G__libsolgem_dict_580_0_5, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TSolSimAux::MultiGaus2D) ), 0);
   G__memfunc_setup("SimpleCircle",1212,G__libsolgem_dict_580_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TSolSimAux::SimpleCircle) ), 0);
   G__memfunc_setup("MultiCircle",1117,G__libsolgem_dict_580_0_7, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&TSolSimAux::MultiCircle) ), 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSpec(void) {
   /* TSolSpec */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec));
   G__memfunc_setup("TSolSpec",781,G__libsolgem_dict_584_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSpec), -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - desc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddGEM",482,G__libsolgem_dict_584_0_2, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'TSolGEMChamber' - 0 - pdet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CoarseTrack",1106,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("CoarseReconstruct",1785,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Track",501,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Reconstruct",1180,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TrackCalc",872,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("FindVertices",1222,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TClonesArray' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNChambers",1171,G__libsolgem_dict_584_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChamber",978,G__libsolgem_dict_584_0_10, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMChamber), -1, 1, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__libsolgem_dict_584_0_11, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_584_0_12, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolSpec::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_584_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSpec::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_584_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolSpec::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_584_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolSpec::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_584_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_584_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSpec::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_584_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSpec::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_584_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSpec::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_584_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSpec::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSolSpec", 907, G__libsolgem_dict_584_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimEvent(void) {
   /* TSolSimEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent));
   G__memfunc_setup("TSolSimEvent",1197,G__libsolgem_dict_585_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent), -1, 0, 0, 1, 1, 0, "", "Default constructor, for ROOT I/O", (void*) NULL, 0);
   G__memfunc_setup("TSolSimEvent",1197,G__libsolgem_dict_585_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - ntracks", "Construct and initialize fMCTracks", (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("AddTrack",766,G__libsolgem_dict_585_0_5, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - number i - 'Int_t' 0 - pid "
"u 'TVector3' - 11 - vertex u 'TVector3' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNclust",921,G__libsolgem_dict_585_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNstrips",1043,G__libsolgem_dict_585_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNECHits",910,G__libsolgem_dict_585_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNtracks",1014,G__libsolgem_dict_585_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_585_0_10, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolSimEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_585_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_585_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolSimEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_585_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolSimEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_585_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_585_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_585_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_585_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_585_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSolSimEvent", 1197, G__libsolgem_dict_585_0_22, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent), -1, 0, 1, 1, 1, 0, "u 'TSolSimEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolSimEvent", 1323, G__libsolgem_dict_585_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_585_0_24, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEvent), -1, 1, 1, 1, 1, 0, "u 'TSolSimEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolROOTFile(void) {
   /* TSolROOTFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile));
   G__memfunc_setup("TSolROOTFile",1094,G__libsolgem_dict_586_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSolROOTFile",1094,G__libsolgem_dict_586_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilename",1101,G__libsolgem_dict_586_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSource",925,G__libsolgem_dict_586_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libsolgem_dict_586_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,G__libsolgem_dict_586_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetBranchAddress",1600,G__libsolgem_dict_586_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Close",502,G__libsolgem_dict_586_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFileName",1057,G__libsolgem_dict_586_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSource",913,G__libsolgem_dict_586_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadNextEvent",1309,G__libsolgem_dict_586_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ExtractDetIDs",1272,G__libsolgem_dict_586_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildData",874,G__libsolgem_dict_586_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildECData",1010,G__libsolgem_dict_586_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("BuildGenerated",1407,G__libsolgem_dict_586_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ClearVectors",1229,G__libsolgem_dict_586_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeleteVectors",1337,G__libsolgem_dict_586_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcHitChamber",1354,G__libsolgem_dict_586_0_18, 104, -1, G__defined_typename("UInt_t"), 0, 1, 1, 1, 0, "i - - 0 - detid", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNData",744,G__libsolgem_dict_586_0_19, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNGen",648,G__libsolgem_dict_586_0_20, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNEC",502,G__libsolgem_dict_586_0_21, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFillBitsEC",1217,G__libsolgem_dict_586_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetFillBitsGEM",1298,G__libsolgem_dict_586_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetECEDep",774,G__libsolgem_dict_586_0_24, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEvNum",779,G__libsolgem_dict_586_0_25, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMaxEvNum",1073,G__libsolgem_dict_586_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitData",959,G__libsolgem_dict_586_0_27, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_hitdata), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGenData",948,G__libsolgem_dict_586_0_28, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_gendata), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetECData",802,G__libsolgem_dict_586_0_29, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_ECdata), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGEMData",883,G__libsolgem_dict_586_0_30, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolGEMData), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGEMData",883,G__libsolgem_dict_586_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSolGEMData' - 0 - gd", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TSolROOTFile", 1094, G__libsolgem_dict_586_0_32, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile), -1, 0, 1, 1, 1, 0, "u 'TSolROOTFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolROOTFile", 1220, G__libsolgem_dict_586_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_586_0_34, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolROOTFile), -1, 1, 1, 1, 1, 0, "u 'TSolROOTFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolDigitizedPlane(void) {
   /* TSolDigitizedPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane));
   G__memfunc_setup("TSolDigitizedPlane",1807,G__libsolgem_dict_587_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane), -1, 0, 3, 1, 1, 0, 
"r - 'UShort_t' 0 - nstrip r - 'UShort_t' 0 '10' nsample "
"i - 'Int_t' 0 '0' threshold", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__libsolgem_dict_587_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Cumulate",832,G__libsolgem_dict_587_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TSolGEMVStrip' - 10 - vv s - 'Short_t' 0 - type "
"s - 'Short_t' 0 - clusterID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__libsolgem_dict_587_0_4, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTotADC",799,G__libsolgem_dict_587_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTime",687,G__libsolgem_dict_587_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCharge",874,G__libsolgem_dict_587_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetADC",488,G__libsolgem_dict_587_0_8, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - n i - 'Int_t' 0 - ks", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNSamples",1091,G__libsolgem_dict_587_0_9, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNStrips",1011,G__libsolgem_dict_587_0_10, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Threshold",941,G__libsolgem_dict_587_0_11, 114, -1, G__defined_typename("UShort_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - thr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNOverThr",1080,G__libsolgem_dict_587_0_12, 114, -1, G__defined_typename("UShort_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIdxOverThr",1295,G__libsolgem_dict_587_0_13, 115, -1, G__defined_typename("Short_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetStripClusters",1671,G__libsolgem_dict_587_0_14, 117, G__get_linked_tagnum(&G__libsolgem_dictLN_vectorlEshortcOallocatorlEshortgRsPgR), G__defined_typename("vector<Short_t>"), 1, 1, 1, 1, 9, "h - 'UInt_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("TSolDigitizedPlane", 1807, G__libsolgem_dict_587_0_15, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane), -1, 0, 1, 1, 1, 0, "u 'TSolDigitizedPlane' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolDigitizedPlane", 1933, G__libsolgem_dict_587_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_587_0_17, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolDigitizedPlane), -1, 1, 1, 1, 1, 0, "u 'TSolDigitizedPlane' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimGEMDigitizationcLcLIonPar_t(void) {
   /* TSolSimGEMDigitization::IonPar_t */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t));
   // automatic default constructor
   G__memfunc_setup("IonPar_t", 796, G__libsolgem_dict_592_0_1, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("IonPar_t", 796, G__libsolgem_dict_592_0_2, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t), -1, 0, 1, 1, 1, 0, "u 'TSolSimGEMDigitization::IonPar_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~IonPar_t", 922, G__libsolgem_dict_592_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_592_0_4, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t), -1, 1, 1, 1, 1, 0, "u 'TSolSimGEMDigitization::IonPar_t' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimTrack(void) {
   /* TSolSimTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack));
   G__memfunc_setup("TSolSimTrack",1184,G__libsolgem_dict_652_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - number i - 'Int_t' 0 - pid "
"u 'TVector3' - 11 - vertex u 'TVector3' - 11 - momentum", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSolSimTrack",1184,G__libsolgem_dict_652_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCFitR",517,G__libsolgem_dict_652_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCFitPhi",724,G__libsolgem_dict_652_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCFitThetaDir",1224,G__libsolgem_dict_652_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MCFitPhiDir",1011,G__libsolgem_dict_652_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RcFitR",554,G__libsolgem_dict_652_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RcFitPhi",761,G__libsolgem_dict_652_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RcFitThetaDir",1261,G__libsolgem_dict_652_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RcFitPhiDir",1048,G__libsolgem_dict_652_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_652_0_11, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolSimTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_652_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_652_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolSimTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_652_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolSimTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_652_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_652_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_652_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_652_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_652_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSolSimTrack", 1184, G__libsolgem_dict_652_0_23, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack), -1, 0, 1, 1, 1, 0, "u 'TSolSimTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolSimTrack", 1310, G__libsolgem_dict_652_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_652_0_25, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimTrack), -1, 1, 1, 1, 1, 0, "u 'TSolSimTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimEventcLcLGEMCluster(void) {
   /* TSolSimEvent::GEMCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster));
   // automatic default constructor
   G__memfunc_setup("GEMCluster", 955, G__libsolgem_dict_653_0_1, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("GEMCluster", 955, G__libsolgem_dict_653_0_2, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster), -1, 0, 1, 1, 1, 0, "u 'TSolSimEvent::GEMCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~GEMCluster", 1081, G__libsolgem_dict_653_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_653_0_4, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster), -1, 1, 1, 1, 1, 0, "u 'TSolSimEvent::GEMCluster' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimEventcLcLDigiGEMStrip(void) {
   /* TSolSimEvent::DigiGEMStrip */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip));
   // automatic default constructor
   G__memfunc_setup("DigiGEMStrip", 1128, G__libsolgem_dict_658_0_1, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("DigiGEMStrip", 1128, G__libsolgem_dict_658_0_2, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip), -1, 0, 1, 1, 1, 0, "u 'TSolSimEvent::DigiGEMStrip' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~DigiGEMStrip", 1254, G__libsolgem_dict_658_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_658_0_4, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip), -1, 1, 1, 1, 1, 0, "u 'TSolSimEvent::DigiGEMStrip' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimEventcLcLECHitData(void) {
   /* TSolSimEvent::ECHitData */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLECHitData));
   // automatic default constructor
   G__memfunc_setup("ECHitData", 807, G__libsolgem_dict_663_0_1, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLECHitData), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("ECHitData", 807, G__libsolgem_dict_663_0_2, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLECHitData), -1, 0, 1, 1, 1, 0, "u 'TSolSimEvent::ECHitData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~ECHitData", 933, G__libsolgem_dict_663_0_3, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_663_0_4, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimEventcLcLECHitData), -1, 1, 1, 1, 1, 0, "u 'TSolSimEvent::ECHitData' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimFile(void) {
   /* TSolSimFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile));
   G__memfunc_setup("TSolSimFile",1067,G__libsolgem_dict_672_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile), -1, 0, 2, 1, 1, 0, 
"C - - 10 - filename C - - 10 '\"\"' description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSolSimFile",1067,G__libsolgem_dict_672_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile), -1, 0, 1, 1, 1, 0, "u 'TSolSimFile' - 11 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile), -1, 1, 1, 1, 1, 0, "u 'THaRunBase' - 11 - rhs", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("TSolSimFile",1067,G__libsolgem_dict_672_0_4, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Close",502,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Compare",711,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TObject' - 10 - obj", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetEvBuffer",1077,(G__InterfaceMethod) NULL,72, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Init",404,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetFileName",1057,G__libsolgem_dict_672_0_10, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Open",402,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ReadEvent",894,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("SetFileName",1069,G__libsolgem_dict_672_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadDatabase",1169,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__libsolgem_dict_672_0_15, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolSimFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_672_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_672_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolSimFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_672_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolSimFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_672_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_672_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_672_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_672_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_672_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~TSolSimFile", 1193, G__libsolgem_dict_672_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_672_0_28, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimFile), -1, 1, 1, 1, 1, 0, "u 'TSolSimFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimGEMHit(void) {
   /* TSolSimGEMHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit));
   G__memfunc_setup("TSolSimGEMHit",1193,G__libsolgem_dict_673_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSolSimGEMHit",1193,G__libsolgem_dict_673_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit), -1, 0, 1, 1, 1, 0, "u 'TSolSimEvent::GEMCluster' - 11 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("P",80,G__libsolgem_dict_673_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__libsolgem_dict_673_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__libsolgem_dict_673_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Z",90,G__libsolgem_dict_673_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__libsolgem_dict_673_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__libsolgem_dict_673_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__libsolgem_dict_673_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_673_0_11, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolSimGEMHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_673_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimGEMHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_673_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolSimGEMHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_673_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolSimGEMHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_673_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_673_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimGEMHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_673_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimGEMHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_673_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimGEMHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_673_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimGEMHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSolSimGEMHit", 1193, G__libsolgem_dict_673_0_23, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit), -1, 0, 1, 1, 1, 0, "u 'TSolSimGEMHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolSimGEMHit", 1319, G__libsolgem_dict_673_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_673_0_25, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit), -1, 1, 1, 1, 1, 0, "u 'TSolSimGEMHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimBackTrack(void) {
   /* TSolSimBackTrack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack));
   G__memfunc_setup("TSolSimBackTrack",1553,G__libsolgem_dict_674_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TSolSimBackTrack",1553,G__libsolgem_dict_674_0_2, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack), -1, 0, 1, 1, 1, 0, "u 'TSolSimEvent::GEMCluster' - 11 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("X",88,G__libsolgem_dict_674_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Y",89,G__libsolgem_dict_674_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("P",80,G__libsolgem_dict_674_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThetaT",586,G__libsolgem_dict_674_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhiT",373,G__libsolgem_dict_674_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("R",82,G__libsolgem_dict_674_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Theta",502,G__libsolgem_dict_674_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Phi",289,G__libsolgem_dict_674_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThetaDir",789,G__libsolgem_dict_674_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PhiDir",576,G__libsolgem_dict_674_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HX",160,G__libsolgem_dict_674_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HY",161,G__libsolgem_dict_674_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 8, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetType",706,G__libsolgem_dict_674_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSource",913,G__libsolgem_dict_674_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHitBits",983,G__libsolgem_dict_674_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUfailBits",1187,G__libsolgem_dict_674_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetVfailBits",1188,G__libsolgem_dict_674_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitBit",880,G__libsolgem_dict_674_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHitBits",995,G__libsolgem_dict_674_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetUfailBits",1199,G__libsolgem_dict_674_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetVfailBits",1200,G__libsolgem_dict_674_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("TestHitBit",996,G__libsolgem_dict_674_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Update",611,G__libsolgem_dict_674_0_26, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TSolSimEvent::GEMCluster' - 11 - cl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_674_0_27, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolSimBackTrack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_674_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimBackTrack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_674_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolSimBackTrack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_674_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolSimBackTrack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_674_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_674_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimBackTrack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_674_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimBackTrack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_674_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimBackTrack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_674_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimBackTrack::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSolSimBackTrack", 1553, G__libsolgem_dict_674_0_39, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack), -1, 0, 1, 1, 1, 0, "u 'TSolSimBackTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolSimBackTrack", 1679, G__libsolgem_dict_674_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__libsolgem_dict_674_0_41, (int) ('u'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack), -1, 1, 1, 1, 1, 0, "u 'TSolSimBackTrack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncTSolSimDecoder(void) {
   /* TSolSimDecoder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder));
   G__memfunc_setup("TSolSimDecoder",1377,G__libsolgem_dict_675_0_1, 105, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LoadEvent",898,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "H - 'UInt_t' 10 - evbuffer", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("DefineVariables",1508,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i 'THaAnalysisObject::EMode' - 0 'THaAnalysisObject::kDefine' mode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMCHitInfo",1121,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__libsolgem_dictLN_PoddcLcLMCHitInfo), -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - crate i - 'Int_t' 0 - slot "
"i - 'Int_t' 0 - chan", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetNBackTracks",1351,G__libsolgem_dict_675_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBackTrack",1158,G__libsolgem_dict_675_0_7, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimBackTrack), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGEMHit",798,G__libsolgem_dict_675_0_8, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimGEMHit), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMAXSLOT",840,G__libsolgem_dict_675_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&TSolSimDecoder::GetMAXSLOT) ), 0);
   G__memfunc_setup("SetZ0",438,G__libsolgem_dict_675_0_10, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - z0", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&TSolSimDecoder::SetZ0) ), 0);
   G__memfunc_setup("GetZ0",426,G__libsolgem_dict_675_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Double_t (*)())(&TSolSimDecoder::GetZ0) ), 0);
   G__memfunc_setup("EmulateCalorimeter",1860,G__libsolgem_dict_675_0_12, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 'true' f", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&TSolSimDecoder::EmulateCalorimeter) ), 0);
   G__memfunc_setup("SetCaloZ",773,G__libsolgem_dict_675_0_13, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&TSolSimDecoder::SetCaloZ) ), 0);
   G__memfunc_setup("SetCaloRes",981,G__libsolgem_dict_675_0_14, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 - res", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&TSolSimDecoder::SetCaloRes) ), 0);
   G__memfunc_setup("DoLoadEvent",1077,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "H - 'UInt_t' 10 - evbuffer", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("StripFromROC",1162,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 2, 8, 
"i - 'Int_t' 0 - crate i - 'Int_t' 0 - slot "
"i - 'Int_t' 0 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__libsolgem_dict_675_0_17, 85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&TSolSimDecoder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__libsolgem_dict_675_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimDecoder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__libsolgem_dict_675_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&TSolSimDecoder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__libsolgem_dict_675_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&TSolSimDecoder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__libsolgem_dictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__libsolgem_dict_675_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__libsolgem_dict_675_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimDecoder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__libsolgem_dict_675_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimDecoder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__libsolgem_dict_675_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&TSolSimDecoder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__libsolgem_dict_675_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&TSolSimDecoder::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("TSolSimDecoder", 1377, G__libsolgem_dict_675_0_29, (int) ('i'), G__get_linked_tagnum(&G__libsolgem_dictLN_TSolSimDecoder), -1, 0, 1, 1, 1, 0, "u 'TSolSimDecoder' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~TSolSimDecoder", 1503, G__libsolgem_dict_675_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfunclibsolgem_dict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLANALYZER_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSolClusters_h=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLEVIOFILE_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSolGEMData__=0",1,(char*)NULL);
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__DEFAULT_DATA_SIZE=32",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLGEMCHAMBER_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"TGEMSHAPE_H=0",1,(char*)NULL);
}

static void G__cpp_setup_global3() {
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLWEDGE_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLRECT_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLGEMCLUSTER_=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLGEMPLANE_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSolGEMVStrip__=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSolSimAux__=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSolSimGEMDigitization__=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLSPEC_H=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSolSim_h=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"MC_MAXSAMP=10",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,84,0,0,-1,-1,-1,1,"treeName=\"digtree\"",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,84,0,0,-1,-1,-1,1,"eventBranchName=\"event\"",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSolSimFile_h=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSolSimDecoder_h=0",1,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,112,0,0,-1,-1,-1,1,"__TSOLROOTFILE_H=0",1,(char*)NULL);
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globallibsolgem_dict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funclibsolgem_dict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__libsolgem_dictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEshortcOallocatorlEshortgRsPgR = { "vector<short,allocator<short> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaRunBase = { "THaRunBase" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaEvData = { "THaEvData" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaAnalyzer = { "THaAnalyzer" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolAnalyzer = { "TSolAnalyzer" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "map<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR = { "map<int,float,less<int>,allocator<pair<const int,float> > >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolGEMPlane = { "TSolGEMPlane" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimGEMDigitization = { "TSolSimGEMDigitization" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_Cluster_t = { "Cluster_t" , 115 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolClusters = { "TSolClusters" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlECluster_tcOallocatorlECluster_tgRsPgR = { "vector<Cluster_t,allocator<Cluster_t> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlECluster_tcOallocatorlECluster_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<Cluster_t,allocator<Cluster_t> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_evio = { "evio" , 110 , -1 };
G__linked_taginfo G__libsolgem_dictLN_eviocLcLevioFileChannel = { "evio::evioFileChannel" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_eviocLcLevioDOMNodeList = { "evio::evioDOMNodeList" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolGEMData = { "TSolGEMData" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t = { "TSolGEMData::GEMHitData_t" , 115 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgR = { "vector<TSolGEMData::GEMHitData_t,allocator<TSolGEMData::GEMHitData_t> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TSolGEMData::GEMHitData_t,allocator<TSolGEMData::GEMHitData_t> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_hitdata = { "hitdata" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_gendata = { "gendata" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_ECdata = { "ECdata" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolEVIOFile = { "TSolEVIOFile" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEhitdatamUcOallocatorlEhitdatamUgRsPgR = { "vector<hitdata*,allocator<hitdata*> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlEhitdatamUcOallocatorlEhitdatamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<hitdata*,allocator<hitdata*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEgendatamUcOallocatorlEgendatamUgRsPgR = { "vector<gendata*,allocator<gendata*> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlEgendatamUcOallocatorlEgendatamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<gendata*,allocator<gendata*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaAnalysisObject = { "THaAnalysisObject" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaAnalysisObjectcLcLEMode = { "THaAnalysisObject::EMode" , 101 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEstringcOallocatorlEstringgRsPgR = { "vector<string,allocator<string> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<string,allocator<string> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaDetectorBase = { "THaDetectorBase" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaApparatus = { "THaApparatus" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaDetector = { "THaDetector" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TGEMShape = { "TGEMShape" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolWedge = { "TSolWedge" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_NSolWedge = { "NSolWedge" , 110 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolRect = { "TSolRect" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolGEMChamber = { "TSolGEMChamber" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolGEMCluster = { "TSolGEMCluster" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaSubDetector = { "THaSubDetector" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TArrayS = { "TArrayS" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolGEMVStrip = { "TSolGEMVStrip" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimAux = { "TSolSimAux" , 110 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TRandom3 = { "TRandom3" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSpec = { "TSolSpec" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimEvent = { "TSolSimEvent" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolROOTFile = { "TSolROOTFile" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolDigitizedPlane = { "TSolDigitizedPlane" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR = { "vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<short,allocator<short> >,allocator<vector<short,allocator<short> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t = { "TSolSimGEMDigitization::IonPar_t" , 115 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgR = { "vector<TSolSimGEMDigitization::IonPar_t,allocator<TSolSimGEMDigitization::IonPar_t> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TSolSimGEMDigitization::IonPar_t,allocator<TSolSimGEMDigitization::IonPar_t> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaVertexModule = { "THaVertexModule" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaSpectrometer = { "THaSpectrometer" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_THaTrackingModule = { "THaTrackingModule" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgR = { "vector<TSolGEMChamber*,allocator<TSolGEMChamber*> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TSolGEMChamber*,allocator<TSolGEMChamber*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_Podd = { "Podd" , 110 , -1 };
G__linked_taginfo G__libsolgem_dictLN_PoddcLcLMCTrack = { "Podd::MCTrack" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_PoddcLcLMCHitInfo = { "Podd::MCHitInfo" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_PoddcLcLSimDecoder = { "Podd::SimDecoder" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimTrack = { "TSolSimTrack" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster = { "TSolSimEvent::GEMCluster" , 115 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgR = { "vector<TSolSimEvent::GEMCluster,allocator<TSolSimEvent::GEMCluster> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TSolSimEvent::GEMCluster,allocator<TSolSimEvent::GEMCluster> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip = { "TSolSimEvent::DigiGEMStrip" , 115 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgR = { "vector<TSolSimEvent::DigiGEMStrip,allocator<TSolSimEvent::DigiGEMStrip> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TSolSimEvent::DigiGEMStrip,allocator<TSolSimEvent::DigiGEMStrip> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimEventcLcLECHitData = { "TSolSimEvent::ECHitData" , 115 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgR = { "vector<TSolSimEvent::ECHitData,allocator<TSolSimEvent::ECHitData> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TSolSimEvent::ECHitData,allocator<TSolSimEvent::ECHitData> >::iterator>" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimFile = { "TSolSimFile" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimGEMHit = { "TSolSimGEMHit" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimBackTrack = { "TSolSimBackTrack" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_TSolSimDecoder = { "TSolSimDecoder" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_vectorlEECdatamUcOallocatorlEECdatamUgRsPgR = { "vector<ECdata*,allocator<ECdata*> >" , 99 , -1 };
G__linked_taginfo G__libsolgem_dictLN_reverse_iteratorlEvectorlEECdatamUcOallocatorlEECdatamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ECdata*,allocator<ECdata*> >::iterator>" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablelibsolgem_dict() {
  G__libsolgem_dictLN_TClass.tagnum = -1 ;
  G__libsolgem_dictLN_TBuffer.tagnum = -1 ;
  G__libsolgem_dictLN_TMemberInspector.tagnum = -1 ;
  G__libsolgem_dictLN_TObject.tagnum = -1 ;
  G__libsolgem_dictLN_TNamed.tagnum = -1 ;
  G__libsolgem_dictLN_TString.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEshortcOallocatorlEshortgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_TClonesArray.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_THaRunBase.tagnum = -1 ;
  G__libsolgem_dictLN_TFile.tagnum = -1 ;
  G__libsolgem_dictLN_TDatime.tagnum = -1 ;
  G__libsolgem_dictLN_THaEvData.tagnum = -1 ;
  G__libsolgem_dictLN_THaAnalyzer.tagnum = -1 ;
  G__libsolgem_dictLN_TSolAnalyzer.tagnum = -1 ;
  G__libsolgem_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_TSolGEMPlane.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimGEMDigitization.tagnum = -1 ;
  G__libsolgem_dictLN_Cluster_t.tagnum = -1 ;
  G__libsolgem_dictLN_TSolClusters.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlECluster_tcOallocatorlECluster_tgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlECluster_tcOallocatorlECluster_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_evio.tagnum = -1 ;
  G__libsolgem_dictLN_eviocLcLevioFileChannel.tagnum = -1 ;
  G__libsolgem_dictLN_eviocLcLevioDOMNodeList.tagnum = -1 ;
  G__libsolgem_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__libsolgem_dictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__libsolgem_dictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__libsolgem_dictLN_TVector3.tagnum = -1 ;
  G__libsolgem_dictLN_TSolGEMData.tagnum = -1 ;
  G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_hitdata.tagnum = -1 ;
  G__libsolgem_dictLN_gendata.tagnum = -1 ;
  G__libsolgem_dictLN_ECdata.tagnum = -1 ;
  G__libsolgem_dictLN_TSolEVIOFile.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEhitdatamUcOallocatorlEhitdatamUgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlEhitdatamUcOallocatorlEhitdatamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEgendatamUcOallocatorlEgendatamUgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlEgendatamUcOallocatorlEgendatamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_THaAnalysisObject.tagnum = -1 ;
  G__libsolgem_dictLN_THaAnalysisObjectcLcLEMode.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEstringcOallocatorlEstringgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_THaDetectorBase.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_THaApparatus.tagnum = -1 ;
  G__libsolgem_dictLN_THaDetector.tagnum = -1 ;
  G__libsolgem_dictLN_TGEMShape.tagnum = -1 ;
  G__libsolgem_dictLN_TSolWedge.tagnum = -1 ;
  G__libsolgem_dictLN_NSolWedge.tagnum = -1 ;
  G__libsolgem_dictLN_TSolRect.tagnum = -1 ;
  G__libsolgem_dictLN_TSolGEMChamber.tagnum = -1 ;
  G__libsolgem_dictLN_TSolGEMCluster.tagnum = -1 ;
  G__libsolgem_dictLN_THaSubDetector.tagnum = -1 ;
  G__libsolgem_dictLN_TArrayD.tagnum = -1 ;
  G__libsolgem_dictLN_TArrayS.tagnum = -1 ;
  G__libsolgem_dictLN_TSolGEMVStrip.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimAux.tagnum = -1 ;
  G__libsolgem_dictLN_TRandom3.tagnum = -1 ;
  G__libsolgem_dictLN_TArrayI.tagnum = -1 ;
  G__libsolgem_dictLN_TTree.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSpec.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimEvent.tagnum = -1 ;
  G__libsolgem_dictLN_TSolROOTFile.tagnum = -1 ;
  G__libsolgem_dictLN_TSolDigitizedPlane.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_THaVertexModule.tagnum = -1 ;
  G__libsolgem_dictLN_THaSpectrometer.tagnum = -1 ;
  G__libsolgem_dictLN_THaTrackingModule.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_Podd.tagnum = -1 ;
  G__libsolgem_dictLN_PoddcLcLMCTrack.tagnum = -1 ;
  G__libsolgem_dictLN_PoddcLcLMCHitInfo.tagnum = -1 ;
  G__libsolgem_dictLN_PoddcLcLSimDecoder.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimTrack.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimEventcLcLECHitData.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimFile.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimGEMHit.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimBackTrack.tagnum = -1 ;
  G__libsolgem_dictLN_TSolSimDecoder.tagnum = -1 ;
  G__libsolgem_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_vectorlEECdatamUcOallocatorlEECdatamUgRsPgR.tagnum = -1 ;
  G__libsolgem_dictLN_reverse_iteratorlEvectorlEECdatamUcOallocatorlEECdatamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablelibsolgem_dict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TClass);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TObject);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TString);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEshortcOallocatorlEshortgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaRunBase);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TFile);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaEvData);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaAnalyzer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolAnalyzer),sizeof(TSolAnalyzer),-1,292096,(char*)NULL,G__setup_memvarTSolAnalyzer,G__setup_memfuncTSolAnalyzer);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_maplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_maplEintcOfloatcOlesslEintgRcOallocatorlEpairlEconstsPintcOfloatgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolGEMPlane),sizeof(TSolGEMPlane),-1,324864,(char*)NULL,G__setup_memvarTSolGEMPlane,G__setup_memfuncTSolGEMPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimGEMDigitization),sizeof(TSolSimGEMDigitization),-1,324608,(char*)NULL,G__setup_memvarTSolSimGEMDigitization,G__setup_memfuncTSolSimGEMDigitization);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_Cluster_t),sizeof(Cluster_t),-1,262144,(char*)NULL,G__setup_memvarCluster_t,G__setup_memfuncCluster_t);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolClusters),sizeof(TSolClusters),-1,292096,"A true MC track",G__setup_memvarTSolClusters,G__setup_memfuncTSolClusters);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlECluster_tcOallocatorlECluster_tgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlECluster_tcOallocatorlECluster_tgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_evio),0,-1,262144,(char*)NULL,G__setup_memvarevio,G__setup_memfuncevio);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_eviocLcLevioFileChannel);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_eviocLcLevioDOMNodeList);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TVector3);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolGEMData),sizeof(TSolGEMData),-1,263424,(char*)NULL,G__setup_memvarTSolGEMData,G__setup_memfuncTSolGEMData);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolGEMDatacLcLGEMHitData_t),sizeof(TSolGEMData::GEMHitData_t),-1,262144,(char*)NULL,G__setup_memvarTSolGEMDatacLcLGEMHitData_t,G__setup_memfuncTSolGEMDatacLcLGEMHitData_t);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMDatacLcLGEMHitData_tcOallocatorlETSolGEMDatacLcLGEMHitData_tgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_hitdata),sizeof(hitdata),-1,295936,(char*)NULL,G__setup_memvarhitdata,G__setup_memfunchitdata);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_gendata),sizeof(gendata),-1,296192,(char*)NULL,G__setup_memvargendata,G__setup_memfuncgendata);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_ECdata),sizeof(ECdata),-1,295936,(char*)NULL,G__setup_memvarECdata,G__setup_memfuncECdata);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolEVIOFile),sizeof(TSolEVIOFile),-1,296192,(char*)NULL,G__setup_memvarTSolEVIOFile,G__setup_memfuncTSolEVIOFile);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEhitdatamUcOallocatorlEhitdatamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEhitdatamUcOallocatorlEhitdatamUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEgendatamUcOallocatorlEgendatamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEgendatamUcOallocatorlEgendatamUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaAnalysisObject);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaAnalysisObjectcLcLEMode);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEstringcOallocatorlEstringgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEstringcOallocatorlEstringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaDetectorBase);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaApparatus);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TGEMShape),sizeof(TGEMShape),-1,263177,(char*)NULL,G__setup_memvarTGEMShape,G__setup_memfuncTGEMShape);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolWedge),sizeof(TSolWedge),-1,263425,(char*)NULL,G__setup_memvarTSolWedge,G__setup_memfuncTSolWedge);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_NSolWedge),0,-1,262144,(char*)NULL,G__setup_memvarNSolWedge,G__setup_memfuncNSolWedge);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolRect),sizeof(TSolRect),-1,263425,(char*)NULL,G__setup_memvarTSolRect,G__setup_memfuncTSolRect);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolGEMChamber),sizeof(TSolGEMChamber),-1,324864,(char*)NULL,G__setup_memvarTSolGEMChamber,G__setup_memfuncTSolGEMChamber);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolGEMCluster),sizeof(TSolGEMCluster),-1,292096,(char*)NULL,G__setup_memvarTSolGEMCluster,G__setup_memfuncTSolGEMCluster);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaSubDetector);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TArrayS);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolGEMVStrip),sizeof(TSolGEMVStrip),-1,263424,(char*)NULL,G__setup_memvarTSolGEMVStrip,G__setup_memfuncTSolGEMVStrip);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimAux),0,-1,262144,(char*)NULL,G__setup_memvarTSolSimAux,G__setup_memfuncTSolSimAux);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TRandom3);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSpec),sizeof(TSolSpec),-1,324608,(char*)NULL,G__setup_memvarTSolSpec,G__setup_memfuncTSolSpec);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimEvent),sizeof(TSolSimEvent),-1,324864,"Simulated data for one event",G__setup_memvarTSolSimEvent,G__setup_memfuncTSolSimEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolROOTFile),sizeof(TSolROOTFile),-1,296192,(char*)NULL,G__setup_memvarTSolROOTFile,G__setup_memfuncTSolROOTFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolDigitizedPlane),sizeof(TSolDigitizedPlane),-1,295936,(char*)NULL,G__setup_memvarTSolDigitizedPlane,G__setup_memfuncTSolDigitizedPlane);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEvectorlEshortcOallocatorlEshortgRsPgRcOallocatorlEvectorlEshortcOallocatorlEshortgRsPgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimGEMDigitizationcLcLIonPar_t),sizeof(TSolSimGEMDigitization::IonPar_t),-1,262144,(char*)NULL,G__setup_memvarTSolSimGEMDigitizationcLcLIonPar_t,G__setup_memfuncTSolSimGEMDigitizationcLcLIonPar_t);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimGEMDigitizationcLcLIonPar_tcOallocatorlETSolSimGEMDigitizationcLcLIonPar_tgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaVertexModule);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaSpectrometer);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_THaTrackingModule);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolGEMChambermUcOallocatorlETSolGEMChambermUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_Podd);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_PoddcLcLMCTrack);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_PoddcLcLMCHitInfo);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_PoddcLcLSimDecoder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimTrack),sizeof(TSolSimTrack),-1,323840,"A MC physics track in SoLID",G__setup_memvarTSolSimTrack,G__setup_memfuncTSolSimTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimEventcLcLGEMCluster),sizeof(TSolSimEvent::GEMCluster),-1,262144,(char*)NULL,G__setup_memvarTSolSimEventcLcLGEMCluster,G__setup_memfuncTSolSimEventcLcLGEMCluster);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLGEMClustercOallocatorlETSolSimEventcLcLGEMClustergRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimEventcLcLDigiGEMStrip),sizeof(TSolSimEvent::DigiGEMStrip),-1,262144,(char*)NULL,G__setup_memvarTSolSimEventcLcLDigiGEMStrip,G__setup_memfuncTSolSimEventcLcLDigiGEMStrip);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLDigiGEMStripcOallocatorlETSolSimEventcLcLDigiGEMStripgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimEventcLcLECHitData),sizeof(TSolSimEvent::ECHitData),-1,262144,(char*)NULL,G__setup_memvarTSolSimEventcLcLECHitData,G__setup_memfuncTSolSimEventcLcLECHitData);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlETSolSimEventcLcLECHitDatacOallocatorlETSolSimEventcLcLECHitDatagRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimFile),sizeof(TSolSimFile),-1,327424,"Interface to input file with simulated SoLID data",G__setup_memvarTSolSimFile,G__setup_memfuncTSolSimFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimGEMHit),sizeof(TSolSimGEMHit),-1,323840,"A Monte Carlo hit at a GEM tracking chamber",G__setup_memvarTSolSimGEMHit,G__setup_memfuncTSolSimGEMHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimBackTrack),sizeof(TSolSimBackTrack),-1,323840,"MC track registered at first tracking chamber",G__setup_memvarTSolSimBackTrack,G__setup_memfuncTSolSimBackTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_TSolSimDecoder),sizeof(TSolSimDecoder),-1,292096,"Decoder for simulated SoLID spectrometer data",G__setup_memvarTSolSimDecoder,G__setup_memfuncTSolSimDecoder);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_vectorlEECdatamUcOallocatorlEECdatamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__libsolgem_dictLN_reverse_iteratorlEvectorlEECdatamUcOallocatorlEECdatamUgRsPgRcLcLiteratorgR);
}
extern "C" void G__cpp_setuplibsolgem_dict(void) {
  G__check_setup_version(30051515,"G__cpp_setuplibsolgem_dict()");
  G__set_cpp_environmentlibsolgem_dict();
  G__cpp_setup_tagtablelibsolgem_dict();

  G__cpp_setup_inheritancelibsolgem_dict();

  G__cpp_setup_typetablelibsolgem_dict();

  G__cpp_setup_memvarlibsolgem_dict();

  G__cpp_setup_memfunclibsolgem_dict();
  G__cpp_setup_globallibsolgem_dict();
  G__cpp_setup_funclibsolgem_dict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfunclibsolgem_dict();
  return;
}
class G__cpp_setup_initlibsolgem_dict {
  public:
    G__cpp_setup_initlibsolgem_dict() { G__add_setup_func("libsolgem_dict",(G__incsetup)(&G__cpp_setuplibsolgem_dict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initlibsolgem_dict() { G__remove_setup_func("libsolgem_dict"); }
};
G__cpp_setup_initlibsolgem_dict G__cpp_setup_initializerlibsolgem_dict;

